#!/usr/bin/env python
def enforceMaxV(origV, maxV):
    if origV < maxV:
        return origV
    else:
        return maxV

def parse_timestamp(t): #for CAN logger files when month and year are not included in the time stamp
    return \
        int(t[0:2]) * 24 * 60 * 60 * 1000 + \
        int(t[2:4]) * 60 * 60 * 1000 + \
        int(t[4:6]) * 60 * 1000 + \
        int(t[6:8]) * 1000 + \
        int(t[8:11])

def parse_timestamp2(t): #for BUSmaster files
    return \
        int(t[0:2]) * 60 * 60 * 1000 + \
        int(t[3:5]) * 60 * 1000 + \
        int(t[6:8]) * 1000 + \
        int(t[9:12])

def parse_timestamp3(t): #use when year and month included in the time for the CAN Logger
    return \
        int(t[6:8]) * 24 * 60 * 60 * 1000 + \
        int(t[8:10]) * 60 * 60 * 1000 + \
        int(t[10:12]) * 60 * 1000 + \
        int(t[12:14]) * 1000 + \
        int(t[14:17])

# TSC1
def PGN_0(msg, data):
    data['EngineOverrideControlMode_spn695'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EngineRequestedSpeedControlConditions_spn696'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['OverrideControlModePriority_spn897'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['EngineRequestedSpeed/SpeedLimit_spn898'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 )), 64255)  * 0.125) # Unit = rpm
    data['EngineRequestedTorque/TorqueLimit_spn518'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) - 125.0 # Unit = %
    data['TSC1TransmissionRate_spn3349'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000111)), 7)  * 1.0) # Unit = bit
    data['TSC1ControlPurpose_spn3350'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11111000) >> 3)), 31)  * 1.0) # Unit = bit
    data['EngineRequestedTorque(Fractional)_spn4191'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00001111)), 7)  * 0.125) # Unit = %
    data['MessageCounter_spn4206'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00001111)), 15)  * 1.0) # Unit = count
    data['MessageChecksum_spn4207'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = count
    return data

# TC1
def PGN_256(msg, data):
    data['TransmissionGearShiftInhibitRequest_spn681'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['TransmissionTorqueConverterLockupRequest_spn682'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['DisengageDrivelineRequest_spn683'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['TransmissionReverseGearShiftInhibitRequest_spn4242'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['RequestedPercentClutchSlip_spn684'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 0.4) # Unit = %
    data['TransmissionRequestedGear_spn525'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) - 125.0 # Unit = gear value
    data['DisengageDifferentialLockRequest-FrontAxle1_spn685'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['DisengageDifferentialLockRequest-FrontAxle2_spn686'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['DisengageDifferentialLockRequest-RearAxle1_spn687'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['DisengageDifferentialLockRequest-RearAxle2_spn688'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['DisengageDifferentialLockRequest-Central_spn689'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['DisengageDifferentialLockRequest-CentralFront_spn690'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['DisengageDifferentialLockRequest-CentralRear_spn691'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['TransmissionLoadReductionInhibitRequest_spn5762'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['TransmissionMode1_spn1852'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['TransmissionMode2_spn1853'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['TransmissionMode3_spn1854'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['TransmissionMode4_spn1855'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['TransmissionAuto-Neutral(ManualReturn)Request_spn7695'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['TransmissionRequestedLaunchGear_spn4255'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00111100) >> 2)), 15)  * 1.0) # Unit = bit
    data['TransmissionShiftSelectorDisplayModeSwitch_spn2985'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['TransmissionMode5_spn4246'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['TransmissionMode6_spn4247'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['TransmissionMode7_spn4248'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['TransmissionMode8_spn4249'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# XBR
def PGN_1024(msg, data):
    data['ExternalAccelerationDemand_spn2920'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64291)  * 0.000488) - 15.687 # Unit = m/sÂ²
    data['XBREBIMode_spn2914'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['XBRPriority_spn2915'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['XBRControlMode_spn2916'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['XBRurgency_spn4099'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 0.4) # Unit = %
    data['XBRMessageCounter_spn3189'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00001111)), 15)  * 1.0) # Unit = count
    data['XBRMessageChecksum_spn3188'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = count
    return data

# GPV4
def PGN_1792(msg, data):
    data['ValveLoadSensePressure_spn4086'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 5.0) # Unit = kPa
    data['ValvePilotPressure_spn4087'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 16.0) # Unit = kPa
    data['ValveAssemblyLoadsensePressure_spn4088'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 5.0) # Unit = kPa
    data['ValveAssemblySupplyPressure_spn4089'] = ( enforceMaxV(( (int(msg[10:12], 16)) + ((int(msg[12:14], 16)) << 8 )), 64255)  * 5.0) # Unit = kPa
    return data

# AUXIO5
def PGN_2048(msg, data):
    data['AuxiliaryI/OChannel_6_spn4155'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 1.0) # Unit = count
    data['AuxiliaryI/OChannel_5_spn4156'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 1.0) # Unit = count
    data['AuxiliaryI/OChannel_4_spn4157'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 1.0) # Unit = count
    data['AuxiliaryI/OChannel_3_spn4158'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 1.0) # Unit = count
    return data

# SRASI
def PGN_2304(msg, data):
    data['StaticRollAngle_spn5582'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) - 125.0 # Unit = deg
    data['StaticRollAngleStatus_spn5583'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000111)), 7)  * 1.0) # Unit = bit
    return data

# CCVS2
def PGN_2560(msg, data):
    data['CruiseControlDisableCommand_spn5603'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['CruiseControlResumeCommand_spn5604'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['CruiseControlPauseCommand_spn5605'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['CruiseControlSetCommand_spn9843'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['IdleSpeedRequest_spn8438'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 )), 64255)  * 0.125) # Unit = rpm
    data['IdleControlEnableState_spn8439'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['IdleControlRequestActivation_spn8440'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['RemoteRoadSpeedLimitRequest_spn9569'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) # Unit = km/h
    return data

# AEBS2
def PGN_2816(msg, data):
    data['DriveractivationdemandforAdvancedEmergencyBrakingSystem_spn5681'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['AEBS2messageCounter_spn5682'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00001111)), 15)  * 1.0) # Unit = count
    data['AEBS2messagechecksum_spn5683'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = count
    return data

# EEC16
def PGN_3072(msg, data):
    data['AcceleratorPedal3Position_spn28'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 0.4) # Unit = %
    data['ReadyForClutchEngagementStatus_spn7847'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EngineClutchEngageRequestStatus_spn7844'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    return data

# TC2
def PGN_3328(msg, data):
    data['TransmissionMode9_spn6569'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['TransmissionMode10_spn6570'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['TransmissionPre-DefinedMaximumGearActivationRequest_spn11751'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['TransmissionOutputShaftBrakeRequest_spn11752'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['TransmissionRequestedReverseLaunchGear_spn11753'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['SelectedMaximumGearLimitActivationRequest_spn11754'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['TransmissionMode11_spn12949'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['TransmissionMode12_spn12950'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['TransmissionMode13_spn12951'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['TransmissionMode14_spn12952'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['TransmissionMode15_spn12953'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['TransmissionMode16_spn12954'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['TransmissionMode17_spn12955'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['TransmissionMode18_spn12956'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['TransmissionMode19_spn12957'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['TransmissionMode20_spn12958'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['DisengageDifferentialLockRequest-RearAxle3_spn13072'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    return data

# HVESSC1
def PGN_6912(msg, data):
    data['HVESSHigh-VoltageBusConnectCommand_spn8123'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESSPower-DownCommand_spn8124'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESSHigh-VoltageBusActiveIsolationTestCommand_spn8125'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HVESSHigh-VoltageBusPassiveIsolationTestCommand_spn8126'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['HVESSCellBalancingCommand_spn8127'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESSEnableInternalChargerCommand_spn8213'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESSOperationConsent_spn8412'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HVESSHigh-VoltageBusHighSideResistorConnectRequest_spn8433'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['HVESSHigh-VoltageBusLowSideResistorConnectRequest_spn8434'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESSControl1Counter_spn13027'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['HVESSControl1CRC_spn13028'] = ( enforceMaxV(( (int(msg[14:16], 16))), 255)  * 1.0) # Unit = count
    return data

# TC3
def PGN_7168(msg, data):
    data['TransmissionOverrideControlMode_spn7037'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['TransmissionOverrideControlModePriority_spn7038'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['MessageCounter_spn7041'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = count
    data['TransmissionRequestedOutputShaftSpeed_spn7039'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 )), 64255)  * 0.25) - 8031.75 # Unit = rpm
    data['TransmissionRequestedTorque/TorqueLimit_spn7040'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) - 125.0 # Unit = %
    data['MessageChecksum_spn7042'] = ( enforceMaxV(( (int(msg[14:16], 16))), 255)  * 1.0) # Unit = count
    return data

# EIC
def PGN_7424(msg, data):
    data['EngineTimingAdvance_spn7355'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64259)  * 0.007812) - 200.0 # Unit = deg
    return data

# ALTC
def PGN_7680(msg, data):
    data['AlternatorSetpointVoltageCommand_spn7589'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.001) # Unit = V
    data['AlternatorExcitationMaximumCurrentLimit_spn7590'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 0.25) # Unit = A
    data['AlternatorTorqueRampTimeCommand_spn7591'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 0.1) # Unit = s
    data['AlternatorTorqueRampMaximumSpeedCommand_spn7592'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 32.0) # Unit = rpm
    return data

# MG1IC
def PGN_9728(msg, data):
    data['Motor/Generator1InverterControlCRC_spn10157'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator1InverterControlCounter_spn10158'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator1InverterControlLimitsRequestOverrideMode_spn10159'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator1InverterControlLimitsRequestOverrideMaximum_spn10160'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator1InverterControlLimitsRequestOverrideMinimum_spn10161'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11110000) >> 4) + ((int(msg[8:10], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator1InverterControlSetpointModeRequest_spn10162'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b11111000) >> 3)), 31)  * 1.0) # Unit = bit
    data['Motor/Generator1InverterControlSetpointRequest_spn10163'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64259)  * 0.003906) - 125.0 # Unit = %
    return data

# MG2IC
def PGN_9984(msg, data):
    data['Motor/Generator2InverterControlCRC_spn10223'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator2InverterControlCounter_spn10224'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator2InverterControlLimitsRequestOverrideMode_spn10225'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator2InverterControlLimitsRequestOverrideMaximum_spn10226'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator2InverterControlLimitsRequestOverrideMinimum_spn10227'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11110000) >> 4) + ((int(msg[8:10], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator2InverterControlSetpointModeRequest_spn10228'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b11111000) >> 3)), 31)  * 1.0) # Unit = bit
    data['Motor/Generator2InverterControlSetpointRequest_spn10229'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64259)  * 0.003906) - 125.0 # Unit = %
    return data

# MG1IRLR1
def PGN_10240(msg, data):
    data['Motor/Generator1InverterRateLimitsRequest1CRC_spn10794'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator1InverterRateLimitsRequest1Counter_spn10795'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator1InverterRateLimitsRequestAbsoluteSpeedRateLimit_spn10796'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4) + ((int(msg[4:6], 16)) << 4 )), 1004)  * 1.0) # Unit = %/s
    return data

# MG2IRLR1
def PGN_10496(msg, data):
    data['Motor/Generator2InverterRateLimitsRequest1CRC_spn10832'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator2InverterRateLimitsRequest1Counter_spn10833'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator2InverterRateLimitsRequestAbsoluteSpeedRateLimit_spn10834'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4) + ((int(msg[4:6], 16)) << 4 )), 1004)  * 1.0) # Unit = %/s
    return data

# HVESP1C1
def PGN_10752(msg, data):
    data['HVESP1High-VoltageBusConnectCommand_spn11029'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP1Power-DownCommand_spn11030'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESP1High-VoltageBusActiveIsolationTestCommand_spn11031'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HVESP1High-VoltageBusPassiveIsolationTestCommand_spn11032'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['HVESP1CellBalancingCommand_spn11033'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP1EnableInternalChargerCommand_spn11034'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESP1OperationConsent_spn11035'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HVESP1High-VoltageBusHighSideResistorConnectRequest_spn11036'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['HVESP1High-VoltageBusLowSideResistorConnectRequest_spn11037'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP1Control1Counter_spn13029'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['HVESP1Control1CRC_spn13030'] = ( enforceMaxV(( (int(msg[14:16], 16))), 255)  * 1.0) # Unit = count
    return data

# HVESP2C1
def PGN_11008(msg, data):
    data['HVESP2High-VoltageBusConnectCommand_spn11145'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP2Power-DownCommand_spn11146'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESP2High-VoltageBusActiveIsolationTestCommand_spn11147'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HVESP2High-VoltageBusPassiveIsolationTestCommand_spn11148'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['HVESP2CellBalancingCommand_spn11149'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP2EnableInternalChargerCommand_spn11150'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESP2OperationConsent_spn11151'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HVESP2High-VoltageBusHighSideResistorConnectRequest_spn11152'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['HVESP2High-VoltageBusLowSideResistorConnectRequest_spn11153'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP2Control1Counter_spn13031'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['HVESP2Control1CRC_spn13032'] = ( enforceMaxV(( (int(msg[14:16], 16))), 255)  * 1.0) # Unit = count
    return data

# HVESP3C1
def PGN_11264(msg, data):
    data['HVESP3High-VoltageBusConnectCommand_spn11261'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP3Power-DownCommand_spn11262'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESP3High-VoltageBusActiveIsolationTestCommand_spn11263'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HVESP3High-VoltageBusPassiveIsolationTestCommand_spn11264'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['HVESP3CellBalancingCommand_spn11265'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP3EnableInternalChargerCommand_spn11266'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESP3OperationConsent_spn11267'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HVESP3High-VoltageBusHighSideResistorConnectRequest_spn11268'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['HVESP3High-VoltageBusLowSideResistorConnectRequest_spn11269'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP3Control1Counter_spn13033'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['HVESP3Control1CRC_spn13034'] = ( enforceMaxV(( (int(msg[14:16], 16))), 255)  * 1.0) # Unit = count
    return data

# HVESP4C1
def PGN_11520(msg, data):
    data['HVESP4High-VoltageBusConnectCommand_spn11377'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP4Power-DownCommand_spn11378'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESP4High-VoltageBusActiveIsolationTestCommand_spn11379'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HVESP4High-VoltageBusPassiveIsolationTestCommand_spn11380'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['HVESP4CellBalancingCommand_spn11381'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP4EnableInternalChargerCommand_spn11382'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESP4OperationConsent_spn11383'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HVESP4High-VoltageBusHighSideResistorConnectRequest_spn11384'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['HVESP4High-VoltageBusLowSideResistorConnectRequest_spn11385'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP4Control1Counter_spn13035'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['HVESP4Control1CRC_spn13036'] = ( enforceMaxV(( (int(msg[14:16], 16))), 255)  * 1.0) # Unit = count
    return data

# HVESP5C1
def PGN_11776(msg, data):
    data['HVESP5High-VoltageBusConnectCommand_spn11493'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP5Power-DownCommand_spn11494'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESP5High-VoltageBusActiveIsolationTestCommand_spn11495'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HVESP5High-VoltageBusPassiveIsolationTestCommand_spn11496'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['HVESP5CellBalancingCommand_spn11497'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP5EnableInternalChargerCommand_spn11498'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESP5OperationConsent_spn11499'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HVESP5High-VoltageBusHighSideResistorConnectRequest_spn11500'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['HVESP5High-VoltageBusLowSideResistorConnectRequest_spn11501'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP5Control1Counter_spn13037'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['HVESP5Control1CRC_spn13038'] = ( enforceMaxV(( (int(msg[14:16], 16))), 255)  * 1.0) # Unit = count
    return data

# HVESP6C1
def PGN_12032(msg, data):
    data['HVESP6High-VoltageBusConnectCommand_spn11609'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP6Power-DownCommand_spn11610'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESP6High-VoltageBusActiveIsolationTestCommand_spn11611'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HVESP6High-VoltageBusPassiveIsolationTestCommand_spn11612'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['HVESP6CellBalancingCommand_spn11613'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP6EnableInternalChargerCommand_spn11614'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESP6OperationConsent_spn11615'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HVESP6High-VoltageBusHighSideResistorConnectRequest_spn11616'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['HVESP6High-VoltageBusLowSideResistorConnectRequest_spn11617'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP6Control1Counter_spn13039'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['HVESP6Control1CRC_spn13040'] = ( enforceMaxV(( (int(msg[14:16], 16))), 255)  * 1.0) # Unit = count
    return data

# DTS
def PGN_20224(msg, data):
    data['DataTransferManufacturerID_spn12993'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16) & 0b00000111) << 8 )), 2047)  * 1.0) # Unit = bit
    data['TotalWeeklyMessageInstances_spn12997'] = ( enforceMaxV(( (int(msg[22:24], 16)) + ((int(msg[24:26], 16)) << 8 )), 65535)  * 1.0) # Unit = count
    data['LongestWeeklyMessageInstance_spn12998'] = ( enforceMaxV(( (int(msg[26:28], 16)) + ((int(msg[28:30], 16)) << 8 ) + ((int(msg[30:32], 16)) << 16 )), 16777215)  * 1.0) # Unit = count
    data['TotalWeeklyMessageBytes_spn12999'] = ( enforceMaxV(( (int(msg[32:34], 16)) + ((int(msg[34:36], 16)) << 8 ) + ((int(msg[36:38], 16)) << 16 ) + ((int(msg[38:40], 16)) << 24 )), 4294967295)  * 1.0) # Unit = count
    data['TotalMonthlyMessageInstances_spn13000'] = ( enforceMaxV(( (int(msg[40:42], 16)) + ((int(msg[42:44], 16)) << 8 )), 65535)  * 1.0) # Unit = count
    data['LongestMonthlyMessageInstance_spn13001'] = ( enforceMaxV(( (int(msg[44:46], 16)) + ((int(msg[46:48], 16)) << 8 ) + ((int(msg[48:50], 16)) << 16 )), 16777215)  * 1.0) # Unit = count
    data['TotalWeeklyMessageBytes_spn13002'] = ( enforceMaxV(( (int(msg[50:52], 16)) + ((int(msg[52:54], 16)) << 8 ) + ((int(msg[54:56], 16)) << 16 ) + ((int(msg[56:58], 16)) << 24 )), 4294967295)  * 1.0) # Unit = count
    data['TotalDailyMessageInstances_spn12994'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 65535)  * 1.0) # Unit = count
    data['LongestDailyMessageInstance_spn12995'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 ) + ((int(msg[12:14], 16)) << 16 )), 16777215)  * 1.0) # Unit = count
    data['TotalDailyMessageBytes_spn12996'] = ( enforceMaxV(( (int(msg[14:16], 16)) + ((int(msg[16:18], 16)) << 8 ) + ((int(msg[18:20], 16)) << 16 ) + ((int(msg[20:22], 16)) << 24 )), 4294967295)  * 1.0) # Unit = count
    return data

# EVSE1C1
def PGN_21248(msg, data):
    data['EVSE1ConnectorLockCommand_spn12864'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    return data

# WINCH3
def PGN_21504(msg, data):
    data['WinchPositionReset_spn12312'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    return data

# ASC8
def PGN_21760(msg, data):
    data['LiftAxle3PositionCommand_spn12300'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    return data

# MG2IC2
def PGN_22016(msg, data):
    data['Motor/Generator2InverterControl2CRC_spn11764'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator2InverterControl2Counter_spn11765'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator2InverterPIDControlApplicableMode_spn11766'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator2InverterPIDControlNormalizedDifferentialGain_spn11767'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 0.03125) # Unit = %/(%/s)
    data['Motor/Generator2InverterPIDControlNormalizedIntegralGain_spn11768'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 0.015625) # Unit = %/(%*s)
    data['Motor/Generator2InverterPIDControlNormalizedProportionalGain_spn11769'] = ( enforceMaxV(( (int(msg[10:12], 16)) + ((int(msg[12:14], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) # Unit = %/%
    data['Motor/Generator2InverterPIDControlFeed-ForwardTorque_spn12295'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11110000) >> 4) + ((int(msg[14:16], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    return data

# MG1IC2
def PGN_22272(msg, data):
    data['Motor/Generator1InverterControl2CRC_spn11758'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator1InverterControl2Counter_spn11759'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator1InverterPIDControlApplicableMode_spn11760'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator1InverterPIDControlNormalizedDifferentialGain_spn11761'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 0.03125) # Unit = %/(%/s)
    data['Motor/Generator1InverterPIDControlNormalizedIntegralGain_spn11762'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 0.015625) # Unit = %/(%*s)
    data['Motor/Generator1InverterPIDControlNormalizedProportionalGain_spn11763'] = ( enforceMaxV(( (int(msg[10:12], 16)) + ((int(msg[12:14], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) # Unit = %/%
    data['Motor/Generator1InverterPIDControlFeed-ForwardTorque_spn12294'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11110000) >> 4) + ((int(msg[14:16], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    return data

# HCI2
def PGN_22528(msg, data):
    data['HoistCommand_spn11729'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.005) - 150.0 # Unit = %
    data['HoistDetentStatus_spn11730'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    return data

# MG2IIR
def PGN_22784(msg, data):
    data['Motor/Generator2InverterHigh-VoltageBusActiveIsolationTestCommand_spn10806'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator2InverterHigh-VoltageBusPassiveIsolationTestCommand_spn10807'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator2InverterHigh-VoltageBusHighSideResistorConnectRequest_spn10808'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator2InverterHigh-VoltageBusLowSideResistorConnectRequest_spn10809'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# MG1IIR
def PGN_23040(msg, data):
    data['Motor/Generator1InverterHigh-VoltageBusActiveIsolationTestCommand_spn10768'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator1InverterHigh-VoltageBusPassiveIsolationTestCommand_spn10769'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator1InverterHigh-VoltageBusHighSideResistorConnectRequest_spn10770'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator1InverterHigh-VoltageBusLowSideResistorConnectRequest_spn10771'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# MG2IRP
def PGN_23296(msg, data):
    data['Motor/Generator2InverterLimitsRequestPowerCRC_spn10242'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator2InverterLimitsRequestPowerCounter_spn10243'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator2InverterLimitsRequestMechanicalPowerMaximum_spn10244'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4) + ((int(msg[4:6], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator2InverterLimitsRequestMechanicalPowerMinimum_spn10245'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator2InverterLimitsRequestDCSidePowerMaximum_spn10246'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11110000) >> 4) + ((int(msg[10:12], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator2InverterLimitsRequestDCSidePowerMinimum_spn10247'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    return data

# MG2ILRM
def PGN_23552(msg, data):
    data['Motor/Generator2InverterLimitsRequestMechanicalCRC_spn10254'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator2InverterLimitsRequestMechanicalCounter_spn10255'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator2InverterLimitsRequestTorqueMaximum_spn10256'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4) + ((int(msg[4:6], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator2InverterLimitsRequestTorqueMinimum_spn10257'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator2InverterLimitsRequestSpeedMaximum_spn10258'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11110000) >> 4) + ((int(msg[10:12], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator2InverterLimitsRequestSpeedMinimum_spn10259'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    return data

# MG2ILRDC
def PGN_23808(msg, data):
    data['Motor/Generator2InverterLimitsRequestDCSideCRC_spn10270'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator2InverterLimitsRequestDCSideCounter_spn10271'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator2InverterLimitsRequestDCSideVoltageMaximum_spn10272'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4) + ((int(msg[4:6], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator2InverterLimitsRequestDCSideVoltageMinimum_spn10273'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator2InverterLimitsRequestDCSideCurrentMaximum_spn10274'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11110000) >> 4) + ((int(msg[10:12], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator2InverterLimitsRequestDCSideCurrentMinimum_spn10275'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    return data

# MG1ILRDC
def PGN_24064(msg, data):
    data['Motor/Generator1InverterLimitsRequestDCSideCRC_spn10204'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator1InverterLimitsRequestDCSideCounter_spn10205'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator1InverterLimitsRequestDCSideVoltageMaximum_spn10206'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4) + ((int(msg[4:6], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator1InverterLimitsRequestDCSideVoltageMinimum_spn10207'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator1InverterLimitsRequestDCSideCurrentMaximum_spn10208'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11110000) >> 4) + ((int(msg[10:12], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator1InverterLimitsRequestDCSideCurrentMinimum_spn10209'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    return data

# MG1ILRM
def PGN_24320(msg, data):
    data['Motor/Generator1InverterLimitsRequestMechanicalCRC_spn10188'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator1InverterLimitsRequestMechanicalCounter_spn10189'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator1InverterLimitsRequestTorqueMaximum_spn10190'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4) + ((int(msg[4:6], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator1InverterLimitsRequestTorqueMinimum_spn10191'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator1InverterLimitsRequestSpeedMaximum_spn10192'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11110000) >> 4) + ((int(msg[10:12], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator1InverterLimitsRequestSpeedMinimum_spn10193'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    return data

# MG1IRP
def PGN_24576(msg, data):
    data['Motor/Generator1InverterLimitsRequestPowerCRC_spn10176'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator1InverterLimitsRequestPowerCounter_spn10177'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator1InverterLimitsRequestMechanicalPowerMaximum_spn10178'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4) + ((int(msg[4:6], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator1InverterLimitsRequestMechanicalPowerMinimum_spn10179'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator1InverterLimitsRequestDCSidePowerMaximum_spn10180'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11110000) >> 4) + ((int(msg[10:12], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator1InverterLimitsRequestDCSidePowerMinimum_spn10181'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    return data

# PDI
def PGN_24832(msg, data):
    data['PersonnelDetectAlarmReceiveStatus_spn10142'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000111)), 7)  * 1.0) # Unit = bit
    data['PersonnelDetectSequenceCounterEcho_spn10143'] = ( enforceMaxV(( (int(msg[2:4], 16))), 255)  * 1.0) # Unit = count
    return data

# ECCCF
def PGN_25088(msg, data):
    data['ConfiguredEngineCylinderMassFractionBurnedLocation1_spn9935'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 0.4) # Unit = %
    data['ConfiguredEngineCylinderMassFractionBurnedLocation2_spn9936'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 0.4) # Unit = %
    return data

# ECCC
def PGN_25344(msg, data):
    data['EngineCylinderMassFractionBurnedLocation1_spn9933'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 0.4) # Unit = %
    data['EngineCylinderMassFractionBurnedLocation2_spn9934'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 0.4) # Unit = %
    return data

# ECPTF
def PGN_25600(msg, data):
    data['ConfiguredEngineCylinderPressureTiming1_spn9845'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.0125) - 360.0 # Unit = deg
    data['ConfiguredEngineCylinderPressureTiming2_spn9846'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.0125) - 360.0 # Unit = deg
    data['ConfiguredEngineCylinderPressureTiming3_spn9847'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.0125) - 360.0 # Unit = deg
    data['ConfiguredEngineCylinderPressureTiming4_spn9848'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.0125) - 360.0 # Unit = deg
    return data

# ECPTC
def PGN_25856(msg, data):
    data['EngineCylinderPressureTiming1_spn9849'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.0125) - 360.0 # Unit = deg
    data['EngineCylinderPressureTiming2_spn9850'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.0125) - 360.0 # Unit = deg
    data['EngineCylinderPressureTiming3_spn9851'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.0125) - 360.0 # Unit = deg
    data['EngineCylinderPressureTiming4_spn9852'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.0125) - 360.0 # Unit = deg
    return data

# EAGCPC
def PGN_26112(msg, data):
    data['GeneratorCoolantPumpEnableCommand_spn9829'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['GeneratorCoolantPumpPowerHold_spn9830'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['GeneratorCoolantPumpSpeedCommand_spn9831'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 )), 64255)  * 0.5) # Unit = rpm
    data['GeneratorCoolantPumpPercentSpeedCommand_spn9832'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 0.5) # Unit = %
    return data

# EAGCFC
def PGN_26368(msg, data):
    data['GeneratorCoolantFanEnableCommand_spn9816'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['GeneratorCoolantFanPowerHold_spn9817'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['GeneratorCoolantFanSpeedCommand_spn9818'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 )), 64255)  * 0.5) # Unit = rpm
    data['GeneratorCoolantFanPercentSpeedCommand_spn9819'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 0.5) # Unit = %
    return data

# OBP1
def PGN_26624(msg, data):
    data['OnBoardProgrammingTargetECUAddress_spn9766'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = SA
    data['OnBoardProgrammingStatus_spn9767'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['OBPInterlock-OverallStatus_spn9768'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['OBPInterlock-EngineSpeed_spn9769'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['OBPInterlock-KeySwitchPosition_spn9770'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['OBPInterlock-ParkBrake_spn9771'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['OBPInterlock-PowerSupplyInsufficient_spn9772'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['OBPInterlock-TargetNotReady_spn9773'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['OBPKeySwitchRequest_spn9775'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['OnBoardProgrammingProgress_spn9774'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.5) # Unit = %
    return data

# MCIC1
def PGN_26880(msg, data):
    data['OperatorStationLocationSetting_spn9661'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) # Unit = ID
    data['TrollingModeSettingCommand_spn9662'] = ( enforceMaxV(( (int(msg[2:4], 16))), 255)  * 1.0) # Unit = bit
    data['EngineThrottleSynchronizationModeCommand_spn9663'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['EngineTrollingModeSetSpeed_spn9664'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.125) # Unit = rpm
    return data

# MCI2
def PGN_27136(msg, data):
    data['OperatorStationInControlLocation_spn9654'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) # Unit = ID
    data['OperatorStationLockout_spn9655'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EngineThrottleSynchronizationModeCurrentSetting_spn9656'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00111100) >> 2)), 15)  * 1.0) # Unit = bit
    data['TrollingMode(ExtendedRange)_spn9657'] = ( enforceMaxV(( (int(msg[4:6], 16))), 255)  * 1.0) # Unit = bit
    data['TrollingModeCurrentSetting_spn9658'] = ( enforceMaxV(( (int(msg[6:8], 16))), 255)  * 1.0) # Unit = bit
    data['VesselEngineSetSpeed_spn9659'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.125) # Unit = rpm
    data['VesselSpeedControlMode_spn9660'] = ( enforceMaxV(( (int(msg[12:14], 16))), 255)  * 1.0) # Unit = bit
    return data

# WSPSCC
def PGN_27392(msg, data):
    data['WellStimulationPumpSuctionPressureCalibrationSetPointCommand_spn9197'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['WellStimulationPumpDischargePressureCalibrationSetPointCommand_spn9198'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    return data

# WSPT1
def PGN_27904(msg, data):
    data['WellStimulationPumpGearBoxOilPressureLowThreshold_spn8860'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    data['WellStimulationPumpGearBoxOilPressureHighThreshold_spn8861'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    data['WellStimulationPumpGearBoxOilTemperatureLowThreshold_spn8862'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['WellStimulationPumpGearBoxOilTemperatureHighThreshold_spn8863'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['WellStimulationPumpSuctionPressureLowThreshold_spn8864'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.1) - 3212.7 # Unit = kPa
    data['WellStimulationPumpSuctionPressureHighThreshold_spn8865'] = ( enforceMaxV(( (int(msg[16:18], 16)) + ((int(msg[18:20], 16)) << 8 )), 64255)  * 0.1) - 3212.7 # Unit = kPa
    data['WellStimulationPumpDischargePressureHighThreshold_spn8866'] = ( enforceMaxV(( (int(msg[20:22], 16)) + ((int(msg[22:24], 16)) << 8 )), 64255)  * 5.0) # Unit = kPa
    data['WellStimulationPumpCrankshaftSpeedLowThreshold_spn8867'] = ( enforceMaxV(( (int(msg[24:26], 16)) + ((int(msg[26:28], 16)) << 8 )), 64255)  * 0.125) # Unit = rpm
    data['WellStimulationPumpCrankshaftSpeedHighThreshold_spn8868'] = ( enforceMaxV(( (int(msg[28:30], 16)) + ((int(msg[30:32], 16)) << 8 )), 64255)  * 0.125) # Unit = rpm
    data['WellStimulationPumpRodLoadHighThreshold_spn8869'] = ( enforceMaxV(( (int(msg[32:34], 16)) + ((int(msg[34:36], 16)) << 8 )), 64255)  * 5.0) # Unit = kN
    data['WellStimulationPumpPlungerFiringOrder_spn8870'] = ( enforceMaxV(( (int(msg[36:38], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    return data

# ODMCC
def PGN_29184(msg, data):
    data['OilDebrisMonitorConfigurationIdentificationNumber_spn8191'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) # Unit = count
    data['OilDebrisMonitorFerrousBin1CountCommand_spn8192'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 ) + ((int(msg[6:8], 16)) << 16 )), 16449535)  * 1.0) # Unit = count
    data['OilDebrisMonitorFerrousBin2CountCommand_spn8193'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 ) + ((int(msg[12:14], 16)) << 16 )), 16449535)  * 1.0) # Unit = count
    data['OilDebrisMonitorFerrousBin3CountCommand_spn8194'] = ( enforceMaxV(( (int(msg[14:16], 16)) + ((int(msg[16:18], 16)) << 8 ) + ((int(msg[18:20], 16)) << 16 )), 16449535)  * 1.0) # Unit = count
    data['OilDebrisMonitorFerrousBin4CountCommand_spn8195'] = ( enforceMaxV(( (int(msg[20:22], 16)) + ((int(msg[22:24], 16)) << 8 ) + ((int(msg[24:26], 16)) << 16 )), 16449535)  * 1.0) # Unit = count
    data['OilDebrisMonitorFerrousBin5CountCommand_spn8196'] = ( enforceMaxV(( (int(msg[26:28], 16)) + ((int(msg[28:30], 16)) << 8 ) + ((int(msg[30:32], 16)) << 16 )), 16449535)  * 1.0) # Unit = count
    data['OilDebrisMonitorFerrousBin6CountCommand_spn8197'] = ( enforceMaxV(( (int(msg[32:34], 16)) + ((int(msg[34:36], 16)) << 8 ) + ((int(msg[36:38], 16)) << 16 )), 16449535)  * 1.0) # Unit = count
    data['OilDebrisMonitorNon-FerrousBin1CountCommand_spn8198'] = ( enforceMaxV(( (int(msg[38:40], 16)) + ((int(msg[40:42], 16)) << 8 ) + ((int(msg[42:44], 16)) << 16 )), 16449535)  * 1.0) # Unit = count
    data['OilDebrisMonitorNon-FerrousBin2CountCommand_spn8199'] = ( enforceMaxV(( (int(msg[44:46], 16)) + ((int(msg[46:48], 16)) << 8 ) + ((int(msg[48:50], 16)) << 16 )), 16449535)  * 1.0) # Unit = count
    data['OilDebrisMonitorNon-FerrousBin3CountCommand_spn8200'] = ( enforceMaxV(( (int(msg[50:52], 16)) + ((int(msg[52:54], 16)) << 8 ) + ((int(msg[54:56], 16)) << 16 )), 16449535)  * 1.0) # Unit = count
    data['OilDebrisMonitorNon-FerrousBin4CountCommand_spn8201'] = ( enforceMaxV(( (int(msg[56:58], 16)) + ((int(msg[58:60], 16)) << 8 ) + ((int(msg[60:62], 16)) << 16 )), 16449535)  * 1.0) # Unit = count
    data['OilDebrisMonitorNon-FerrousBin5CountCommand_spn8202'] = ( enforceMaxV(( (int(msg[62:64], 16)) + ((int(msg[64:66], 16)) << 8 ) + ((int(msg[66:68], 16)) << 16 )), 16449535)  * 1.0) # Unit = count
    data['OilDebrisMonitorNon-FerrousBin6CountCommand_spn8203'] = ( enforceMaxV(( (int(msg[68:70], 16)) + ((int(msg[70:72], 16)) << 8 ) + ((int(msg[72:74], 16)) << 16 )), 16449535)  * 1.0) # Unit = count
    return data

# EAPMCF3C
def PGN_29440(msg, data):
    data['PropulsionMotorCoolantFan3EnableCommand_spn8063'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['PropulsionMotorCoolantFan3PowerHold_spn8064'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['PropulsionMotorCoolantFan3SpeedCommand_spn8065'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 )), 64255)  * 0.5) # Unit = rpm
    data['PropulsionMotorCoolantFan3PercentSpeedCommand_spn8066'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 0.5) # Unit = %
    return data

# EAPMCF2C
def PGN_29696(msg, data):
    data['PropulsionMotorCoolantFan2EnableCommand_spn8051'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['PropulsionMotorCoolantFan2PowerHold_spn8052'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['PropulsionMotorCoolantFan2SpeedCommand_spn8053'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 )), 64255)  * 0.5) # Unit = rpm
    data['PropulsionMotorCoolantFan2PercentSpeedCommand_spn8054'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 0.5) # Unit = %
    return data

# EAPMCF1C
def PGN_29952(msg, data):
    data['PropulsionMotorCoolantFan1EnableCommand_spn8039'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['PropulsionMotorCoolantFan1PowerHold_spn8040'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['PropulsionMotorCoolantFan1SpeedCommand_spn8041'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 )), 64255)  * 0.5) # Unit = rpm
    data['PropulsionMotorCoolantFan1PercentSpeedCommand_spn8042'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 0.5) # Unit = %
    return data

# EAPECF3C
def PGN_30208(msg, data):
    data['PowerElectronicsCoolantFan3EnableCommand_spn8027'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['PowerElectronicsCoolantFan3PowerHold_spn8028'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['PowerElectronicsCoolantFan3SpeedCommand_spn8029'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 )), 64255)  * 0.5) # Unit = rpm
    data['PowerElectronicsCoolantFan3PercentSpeedCommand_spn8030'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 0.5) # Unit = %
    return data

# EAPECF2C
def PGN_30464(msg, data):
    data['PowerElectronicsCoolantFan2EnableCommand_spn8015'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['PowerElectronicsCoolantFan2PowerHold_spn8016'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['PowerElectronicsCoolantFan2SpeedCommand_spn8017'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 )), 64255)  * 0.5) # Unit = rpm
    data['PowerElectronicsCoolantFan2PercentSpeedCommand_spn8018'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 0.5) # Unit = %
    return data

# EAPECF1C
def PGN_30720(msg, data):
    data['PowerElectronicsCoolantFan1EnableCommand_spn8003'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['PowerElectronicsCoolantFan1PowerHold_spn8004'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['PowerElectronicsCoolantFan1SpeedCommand_spn8005'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 )), 64255)  * 0.5) # Unit = rpm
    data['PowerElectronicsCoolantFan1PercentSpeedCommand_spn8006'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 0.5) # Unit = %
    return data

# EAPMOPC
def PGN_30976(msg, data):
    data['PropulsionMotorOilPumpEnableCommand_spn7991'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['PropulsionMotorOilPumpPowerHold_spn7992'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['PropulsionMotorOilPumpSpeedCommand_spn7993'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 )), 64255)  * 0.5) # Unit = rpm
    data['PropulsionMotorOilPumpPercentSpeedCommand_spn7994'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 0.5) # Unit = %
    return data

# EAPMCPC
def PGN_31232(msg, data):
    data['PropulsionMotorCoolantPumpEnableCommand_spn7979'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['PropulsionMotorCoolantPumpPowerHold_spn7980'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['PropulsionMotorCoolantPumpSpeedCommand_spn7981'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 )), 64255)  * 0.5) # Unit = rpm
    data['PropulsionMotorCoolantPumpPercentSpeedCommand_spn7982'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 0.5) # Unit = %
    return data

# EAPECPC
def PGN_31488(msg, data):
    data['PowerElectronicsCoolantPumpEnableCommand_spn7967'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['PowerElectronicsCoolantPumpPowerHold_spn7968'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['PowerElectronicsCoolantPumpSpeedCommand_spn7969'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 )), 64255)  * 0.5) # Unit = rpm
    data['PowerElectronicsCoolantPumpPercentSpeedCommand_spn7970'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 0.5) # Unit = %
    return data

# EAMC
def PGN_32000(msg, data):
    data['ElectrifiedAccessoryMotorEnableCommand_spn7943'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['ElectrifiedAccessoryMotorPowerHold_spn7944'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['ElectrifiedAccessoryMotorSpeedCommand_spn7945'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 )), 64255)  * 0.5) # Unit = rpm
    data['ElectrifiedAccessoryMotorPercentSpeedCommand_spn7946'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 0.5) # Unit = %
    data['ElectrifiedAccessoryMotor1_spn8292'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000001)), 1)  * 1.0) # Unit = bit
    data['ElectrifiedAccessoryMotor2_spn8293'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00000010) >> 1)), 1)  * 1.0) # Unit = bit
    data['ElectrifiedAccessoryMotor3_spn8294'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00000100) >> 2)), 1)  * 1.0) # Unit = bit
    data['ElectrifiedAccessoryMotor4_spn8295'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00001000) >> 3)), 1)  * 1.0) # Unit = bit
    data['ElectrifiedAccessoryMotor5_spn8296'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00010000) >> 4)), 1)  * 1.0) # Unit = bit
    data['ElectrifiedAccessoryMotor6_spn8297'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00100000) >> 5)), 1)  * 1.0) # Unit = bit
    data['ElectrifiedAccessoryMotor7_spn8298'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b01000000) >> 6)), 1)  * 1.0) # Unit = bit
    data['ElectrifiedAccessoryMotor8_spn8299'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b10000000) >> 7)), 1)  * 1.0) # Unit = bit
    data['ElectrifiedAccessoryMotor9_spn8300'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00000001)), 1)  * 1.0) # Unit = bit
    data['ElectrifiedAccessoryMotor10_spn8301'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00000010) >> 1)), 1)  * 1.0) # Unit = bit
    data['ElectrifiedAccessoryMotor11_spn8302'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00000100) >> 2)), 1)  * 1.0) # Unit = bit
    data['ElectrifiedAccessoryMotor12_spn8303'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00001000) >> 3)), 1)  * 1.0) # Unit = bit
    data['ElectrifiedAccessoryMotor13_spn8304'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00010000) >> 4)), 1)  * 1.0) # Unit = bit
    data['ElectrifiedAccessoryMotor14_spn8305'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00100000) >> 5)), 1)  * 1.0) # Unit = bit
    data['ElectrifiedAccessoryMotor15_spn8306'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b01000000) >> 6)), 1)  * 1.0) # Unit = bit
    return data

# ESRRBR
def PGN_32256(msg, data):
    data['RequestedEngineSpeedAccelerationRateLimit_spn7760'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 1.0) # Unit = rpm/s
    data['RequestedEngineSpeedDecelerationRateLimit_spn7761'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 1.0) # Unit = rpm/s
    return data

# HSC1
def PGN_32768(msg, data):
    data['HybridSystemProtectionOverrideRequest_spn7557'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HybridSystemPropulsionDisableRequest_spn7558'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HybridSystemRegenerativeBrakingDisableRequest_spn7559'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HybridSystemShutdownCommand_spn7560'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['OperatorVehicleModeRequest_spn7888'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['HybridPropulsionModeRequest_spn7889'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['ExternalEnergySourceConnectionDemand_spn7890'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['HVESChargeConsent_spn10148'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['ConnectedEnergySourceType_spn13154'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['StoredEnergySourceCharge/DischargeRateRequest_spn7891'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 0.4) # Unit = %
    data['StoredEnergySourceSetPointRequest_spn7892'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.4) # Unit = %
    data['HybridPropulsionModeRequestedMaximumSpeed_spn9706'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 1.0) # Unit = km/h
    data['HybridPropulsionModeRequestedDistance_spn9707'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.03125) # Unit = km
    return data

# AFTSC
def PGN_33024(msg, data):
    data['AftertreatmentThermalManagementInhibitRequest_spn7331'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['RequesttoPermitDEFHydraulicStiffnessCheck_spn7515'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['RequesttoPermitSCRDosingTestInjection_spn7516'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b01110000) >> 4)), 7)  * 1.0) # Unit = bit
    data['AftertreatmentSystemEnableStatus_spn7851'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['AftertreatmentDieselExhaustFluidDoserReadyStatus_spn8149'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    return data

# TCCI
def PGN_33280(msg, data):
    data['ColdInflationPressureSetting_spn6974'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 )), 64255)  * 1.0) # Unit = kPa
    data['UnderPressurePercentageThresholdSetting_spn6975'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 0.5) # Unit = %
    data['ExtremeUnderPressurePercentageThresholdSetting_spn6976'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.5) # Unit = %
    data['OverPressurePercentageThresholdSetting_spn6977'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 0.5) # Unit = %
    data['OverTemperatureSetting_spn6978'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['TireSensorEnableSetting_spn7587'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    return data

# PCIC
def PGN_33536(msg, data):
    data['PayloadCalibrationSetPointCommand_spn6871'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['PayloadCalibrationCommandedWeight_spn6872'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 )), 64255)  * 2.0) # Unit = kg
    data['PayloadCorrectionFactorCommand_spn6873'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) - 125.0 # Unit = %
    return data

# AFT1PSC
def PGN_33792(msg, data):
    data['Aftertreatment1ParticulateSensorShutdownRequest_spn6782'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment1ParticulateSensorRegenerationRequest_spn6783'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment1ParticulateSensorDewpoint_spn6784'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment1ParticulateSensorExhaustTemperature_spn6785'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['Aftertreatment1ParticulateSensorExhaustVelocity_spn6829'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64259)  * 0.003906) # Unit = km/h
    return data

# CM2
def PGN_34048(msg, data):
    data['EngineFan2RequestedPercentSpeed_spn6730'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 0.4) # Unit = %
    data['PerformanceBiasSelection_spn6874'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 0.4) # Unit = %
    data['SCROperatorInducementOverrideSwitch_spn6881'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HeatExchangerDebrisPurgeInhibitSwitch_spn7033'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HeatExchangerDebrisPurgeForceSwitch_spn7034'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['PredictiveCruiseControlEnableSwitch_spn7436'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['PredictiveCruiseControlDeactivationRequest_spn7437'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EngineStop-StartDisableCommand_spn7759'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['ElevatedEngineSpeedAllowedSwitch_spn7579'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['AftertreatmentRegenerationEngineSpeedAllowedSwitch_spn7580'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['PredictiveCruiseControlMaximumPositiveOffset_spn7438'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.125) # Unit = km/h
    data['PredictiveCruiseControlMaximumNegativeOffset_spn7439'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 0.125) - 31.25 # Unit = km/h
    data['TransmissionAuto-Neutral(ManualReturn)EnableSwitch_spn7694'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['AftertreatmentSystemEnableCommand_spn8148'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['ActiveShiftConsoleRequest_spn8855'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['EngineIdleManagementPendingEventOverride_spn9374'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['VehicleHoodSwitch_spn5575'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    return data

# SPOC
def PGN_34304(msg, data):
    data['SwitchedPowerOutput_4Command_spn5984'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['SwitchedPowerOutput_3Command_spn5985'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['SwitchedPowerOutput_2Command_spn5986'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['SwitchedPowerOutput_1Command_spn5987'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['SwitchedPowerOutput_8Command_spn5988'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['SwitchedPowerOutput_7Command_spn5989'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['SwitchedPowerOutput_6Command_spn5990'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['SwitchedPowerOutput_5Command_spn5991'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['SwitchedPowerOutput_12Command_spn5992'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['SwitchedPowerOutput_11Command_spn5993'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['SwitchedPowerOutput_10Command_spn5994'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['SwitchedPowerOutput_9Command_spn5995'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['SwitchedPowerOutput_16Command_spn5996'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['SwitchedPowerOutput_15Command_spn5997'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['SwitchedPowerOutput_14Command_spn5998'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['SwitchedPowerOutput_13Command_spn5999'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['SwitchedPowerOutput_20Command_spn6000'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['SwitchedPowerOutput_19Command_spn6001'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['SwitchedPowerOutput_18Command_spn6002'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['SwitchedPowerOutput_17Command_spn6003'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['SwitchedPowerOutput_24Command_spn6004'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['SwitchedPowerOutput_23Command_spn6005'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['SwitchedPowerOutput_22Command_spn6006'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['SwitchedPowerOutput_21Command_spn6007'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['SwitchedPowerOutput_28Command_spn6008'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['SwitchedPowerOutput_27Command_spn6009'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['SwitchedPowerOutput_26Command_spn6010'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['SwitchedPowerOutput_25Command_spn6011'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['SwitchedPowerOutput_32Command_spn6012'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['SwitchedPowerOutput_31Command_spn6013'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['SwitchedPowerOutput_30Command_spn6014'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['SwitchedPowerOutput_29Command_spn6015'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# ESR
def PGN_34560(msg, data):
    data['DesiredEngineFuelingState_spn5793'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EngineGaseousFuelUsageInhibited_spn6833'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['EngineProtectionDerateOverrideCommand_spn9173'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['RequestedFuelType_spn6317'] = ( enforceMaxV(( (int(msg[2:4], 16))), 255)  * 1.0) # Unit = bit
    data['EngineGaseousFuelSupplyDesiredPressure_spn6715'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.5) # Unit = kPa
    data['EngineFuelingDesiredReason_spn7789'] = ( enforceMaxV(( (int(msg[8:10], 16))), 255)  * 1.0) # Unit = bit
    data['TransmissionIdleGovernorFuelingInhibit_spn7829'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EngineShutdownCommand_spn8614'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['EngineFuelingNotDesiredReason_spn7855'] = ( enforceMaxV(( (int(msg[12:14], 16))), 255)  * 1.0) # Unit = bit
    return data

# RBR
def PGN_34816(msg, data):
    data['UniqueBeaconMessageIdentifierNumber_spn5754'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 1.0) # Unit = count
    data['RadioBeaconDirection_spn5755'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['TransmitterID2_spn5756'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 ) + ((int(msg[10:12], 16)) << 16 )), 16449635)  * 1.0) # Unit = ID
    data['WirelessSignalStrength2_spn5757'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 0.5) - 125.0 # Unit = dBm
    return data

# ECC
def PGN_36608(msg, data):
    data['CoolantLevelEngineProtectionShutdownOverrideCommand_spn5565'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    return data

# SFC
def PGN_36864(msg, data):
    data['SupplementalFanEnableCommand_spn5552'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['SupplementalFanDirectionCommand_spn5553'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['SupplementalFanSpeedCommand_spn5554'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 )), 64255)  * 0.5) # Unit = rpm
    data['SupplementalFanPowerHold_spn5555'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    return data

# VLS1
def PGN_37120(msg, data):
    data['LubricationCycleModeLockCommand_spn5510'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['LubricationCycleSetCommand_spn5511'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00011100) >> 2)), 7)  * 1.0) # Unit = bit
    data['LubricationOperationModeSetCommand_spn5512'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11100000) >> 5)), 7)  * 1.0) # Unit = bit
    data['LubricationPumpEnableCommand_spn5513'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['LubricationTimingCycleCommand_spn5514'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    return data

# HCDI1
def PGN_37376(msg, data):
    data['RequestedFuelMassRate_spn5505'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) # Unit = g/min
    data['HCDoserStatus_spn5506'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000111)), 7)  * 1.0) # Unit = bit
    data['HCDoserInjectingStatus_spn5507'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00011000) >> 3)), 3)  * 1.0) # Unit = bit
    data['DiagnosticStatusofHCDoser_spn5508'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11100000) >> 5)), 7)  * 1.0) # Unit = bit
    data['HydrocarbonDoserPurgingRequired_spn5509'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment1DPFHydrocarbon_spn10155'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.5) # Unit = %
    return data

# AT1DPFSSC
def PGN_37888(msg, data):
    data['Aftertreatment1DieselParticulateFilterSootMeanCalibrationOffset_spn5495'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    data['Aftertreatment1DieselParticulateFilterSootStandardDeviationCalibrationOffset_spn5496'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    return data

# AT2DPFSSC
def PGN_38144(msg, data):
    data['Aftertreatment2DieselParticulateFilterSootMeanCalibrationOffset_spn5497'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    data['Aftertreatment2DieselParticulateFilterSootStandardDeviationCalibrationOffset_spn5498'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    return data

# LVDSOM
def PGN_38400(msg, data):
    data['LowVoltageDisconnectDesiredOperatingMode_spn5149'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    return data

# NCS
def PGN_38656(msg, data):
    data['CabNoiseControlStatus_spn5059'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['CabNoiseControlTuningStatus_spn5060'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00111100) >> 2)), 15)  * 1.0) # Unit = bit
    return data

# NC1
def PGN_38912(msg, data):
    data['CabNoiseControlCommand_spn5057'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['CabNoiseControlTuningCommand_spn5058'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00011100) >> 2)), 7)  * 1.0) # Unit = bit
    return data

# JLCM
def PGN_39168(msg, data):
    data['Joystick1Lamp1Command_spn4460'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick1Lamp2Command_spn4461'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick1Lamp3Command_spn4462'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick1Lamp4Command_spn4463'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Joystick1Lamp5Command_spn4464'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick1Lamp6Command_spn4465'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick1Lamp7Command_spn4466'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick1Lamp8Command_spn4467'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Joystick1Lamp9Command_spn4468'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick1Lamp10Command_spn4469'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick2Lamp1Command_spn4470'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick2Lamp2Command_spn4471'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Joystick2Lamp3Command_spn4472'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick2Lamp4Command_spn4473'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick2Lamp5Command_spn4474'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick2Lamp6Command_spn4475'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Joystick2Lamp7Command_spn4476'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick2Lamp8Command_spn4477'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick2Lamp9Command_spn4478'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick2Lamp10Command_spn4479'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Joystick3Lamp1Command_spn4480'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick3Lamp2Command_spn4481'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick3Lamp3Command_spn4482'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick3Lamp4Command_spn4483'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Joystick3Lamp5Command_spn4484'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick3Lamp6Command_spn4485'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick3Lamp7Command_spn4486'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick3Lamp8Command_spn4487'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Joystick3Lamp9Command_spn4488'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick3Lamp10Command_spn4489'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    return data

# AUXIO7
def PGN_39936(msg, data):
    data['AuxiliaryI/OChannel_18_spn4167'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) # Unit = count
    data['AuxiliaryI/OChannel_17_spn4168'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) # Unit = count
    data['AuxiliaryI/OChannel_16_spn4169'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) # Unit = count
    data['AuxiliaryI/OChannel_15_spn4170'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) # Unit = count
    data['AuxiliaryI/OChannel_22_spn4171'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) # Unit = count
    data['AuxiliaryI/OChannel_21_spn4172'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 1.0) # Unit = count
    data['AuxiliaryI/OChannel_20_spn4173'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 1.0) # Unit = count
    data['AuxiliaryI/OChannel_19_spn4174'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 1.0) # Unit = count
    return data

# AUXIO6
def PGN_40192(msg, data):
    data['AuxiliaryI/OChannel_10_spn4159'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) # Unit = count
    data['AuxiliaryI/OChannel_9_spn4160'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) # Unit = count
    data['AuxiliaryI/OChannel_8_spn4161'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) # Unit = count
    data['AuxiliaryI/OChannel_7_spn4162'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) # Unit = count
    data['AuxiliaryI/OChannel_14_spn4163'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) # Unit = count
    data['AuxiliaryI/OChannel_13_spn4164'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 1.0) # Unit = count
    data['AuxiliaryI/OChannel_12_spn4165'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 1.0) # Unit = count
    data['AuxiliaryI/OChannel_11_spn4166'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 1.0) # Unit = count
    return data

# AUXIO4
def PGN_42240(msg, data):
    data['AuxiliaryI/O_84_spn3907'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_83_spn3906'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_82_spn3905'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_81_spn3904'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_88_spn3911'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_87_spn3910'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_86_spn3909'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_85_spn3908'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_92_spn3915'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_91_spn3914'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_90_spn3913'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_89_spn3912'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_96_spn3919'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_95_spn3918'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_94_spn3917'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_93_spn3916'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_100_spn3923'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_99_spn3922'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_98_spn3921'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_97_spn3920'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_104_spn3927'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_103_spn3926'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_102_spn3925'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_101_spn3924'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_108_spn3931'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_107_spn3930'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_106_spn3929'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_105_spn3928'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_112_spn3935'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_111_spn3934'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_110_spn3933'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_109_spn3932'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# AUXIO3
def PGN_42496(msg, data):
    data['AuxiliaryI/O_52_spn3875'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_51_spn3874'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_50_spn3873'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_49_spn3872'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_56_spn3879'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_55_spn3878'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_54_spn3877'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_53_spn3876'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_60_spn3883'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_59_spn3882'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_58_spn3881'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_57_spn3880'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_64_spn3887'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_63_spn3886'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_62_spn3885'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_61_spn3884'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_68_spn3891'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_67_spn3890'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_66_spn3889'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_65_spn3888'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_72_spn3895'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_71_spn3894'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_70_spn3893'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_69_spn3892'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_76_spn3899'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_75_spn3898'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_74_spn3897'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_73_spn3896'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_80_spn3903'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_79_spn3902'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_78_spn3901'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_77_spn3900'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# AUXIO2
def PGN_42752(msg, data):
    data['AuxiliaryI/O_20_spn3843'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_19_spn3842'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_18_spn3841'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_17_spn3840'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_24_spn3847'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_23_spn3846'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_22_spn3845'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_21_spn3844'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_28_spn3851'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_27_spn3850'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_26_spn3849'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_25_spn3848'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_32_spn3855'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_31_spn3854'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_30_spn3853'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_29_spn3852'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_36_spn3859'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_35_spn3858'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_34_spn3857'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_33_spn3856'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_40_spn3863'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_39_spn3862'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_38_spn3861'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_37_spn3860'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_44_spn3867'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_43_spn3866'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_42_spn3865'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_41_spn3864'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_48_spn3871'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_47_spn3870'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_46_spn3869'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_45_spn3868'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# FLIC
def PGN_43264(msg, data):
    data['LaneDepartureWarningEnableCommand_spn3564'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['LaneKeepingAssistEnableCommand_spn9751'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['LaneCenteringEnableCommand_spn9752'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['RequestedActiveSteeringDriverPreferenceMode_spn9760'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000111)), 7)  * 1.0) # Unit = bit
    return data

# TPRS
def PGN_44544(msg, data):
    data['TireLocation_spn3192'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = bit
    data['ReferenceTirePressureSetting_spn3193'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 8.0) # Unit = kPa
    return data

# CTL
def PGN_52992(msg, data):
    data['EngineSpeedLimitRequest-MinimumContinuous_spn1784'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 32.0) # Unit = rpm
    data['EngineSpeedLimitRequest-MaximumContinuous_spn1785'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 32.0) # Unit = rpm
    data['EngineTorqueLimitRequest-MinimumContinuous_spn1786'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) - 125.0 # Unit = %
    data['EngineTorqueLimitRequest-MaximumContinuous_spn1787'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) - 125.0 # Unit = %
    data['MinimumContinuousRetarderSpeedLimitRequest_spn1788'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 32.0) # Unit = rpm
    data['MaximumContinuousRetarderSpeedLimitRequest_spn1789'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 32.0) # Unit = rpm
    data['MinimumContinuousRetarderTorqueLimitRequest_spn1790'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 1.0) - 125.0 # Unit = %
    data['MaximumContinuousRetarderTorqueLimitRequest_spn1791'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 1.0) - 125.0 # Unit = %
    return data

# CL
def PGN_53248(msg, data):
    data['IlluminationBrightnessPercent_spn1487'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 0.4) # Unit = %
    data['SwitchBacklightIlluminationBrightnessPercent_spn5532'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 0.4) # Unit = %
    data['SwitchIndicationIlluminationBrightnessPercent_spn6820'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 0.4) # Unit = %
    data['OperatorDesiredDisplayModeCommand1_spn13079'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['OperatorDesiredDisplayModeCommand2_spn13080'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    return data

# ASC6
def PGN_53504(msg, data):
    data['LevelPresetFrontAxleLeft_spn1732'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.1) - 3200.0 # Unit = mm
    data['LevelPresetFrontAxleRight_spn1757'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.1) - 3200.0 # Unit = mm
    data['LevelPresetRearAxleLeft_spn1758'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.1) - 3200.0 # Unit = mm
    data['LevelPresetRearAxleRight_spn1735'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.1) - 3200.0 # Unit = mm
    return data

# ASC2
def PGN_53760(msg, data):
    data['Automatictractionhelp(loadtransfer)_spn2984'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['KneelingRequestLeftSide_spn1749'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['KneelingRequestRightSide_spn1748'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['KneelingControlModeRequest_spn1747'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['NominalLevelRequestFrontAxle_spn1751'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['NominalLevelRequestRearAxle_spn1750'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['LevelControlModeRequest_spn1753'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['LiftAxle1PositionCommand_spn1752'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['LiftAxle2PositionCommand_spn1828'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['DamperStiffnessRequestFrontAxle_spn1718'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 0.4) # Unit = %
    data['DamperStiffnessRequestRearAxle_spn1719'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.4) # Unit = %
    data['DamperStiffnessRequestLift/TagAxle_spn1720'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 0.4) # Unit = %
    data['KneelingCommand-FrontAxle_spn1830'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['KneelingCommand-RearAxle_spn1829'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Prohibitairsuspensioncontrol_spn3215'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['AllowLevelControlDuringBrakingCommand_spn5293'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['SpeedDependentLevelControlRequest_spn5295'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['ProhibitAutomaticAirSuspensionControl_spn5274'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Memorylevelrequest_spn5433'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    return data

# TDA
def PGN_54528(msg, data):
    data['Adjustseconds_spn1603'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 0.25) # Unit = s
    data['Adjustminutes_spn1604'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) # Unit = min
    data['Adjusthours_spn1605'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) # Unit = h
    data['Adjustmonth_spn1606'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) # Unit = months
    data['Adjustday_spn1607'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.25) # Unit = days
    data['Adjustyear_spn1608'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 1.0) + 1985.0 # Unit = years
    data['Adjustlocalminuteoffset_spn1609'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 1.0) - 125.0 # Unit = min
    data['Adjustlocalhouroffset_spn1610'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 1.0) - 125.0 # Unit = h
    return data

# ATS
def PGN_56320(msg, data):
    data['Anti-theftEncryptionSeedPresentIndicator_spn1194'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Anti-theftPasswordValidIndicator_spn1195'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Anti-theftComponentStatusStates_spn1196'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Anti-theftModifyPasswordStates_spn1197'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# ATR
def PGN_56576(msg, data):
    data['Anti-theftEncryptionIndicatorStates_spn1199'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00000110) >> 1)), 3)  * 1.0) # Unit = bit
    data['Anti-theftDesiredExitModeStates_spn1200'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00011000) >> 3)), 3)  * 1.0) # Unit = bit
    data['Anti-theftCommandStates_spn1201'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11100000) >> 5)), 7)  * 1.0) # Unit = bit
    return data

# RESET
def PGN_56832(msg, data):
    data['TripGroup1_spn988'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['TripGroup2-Proprietary_spn989'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['ServiceComponentIdentification_spn1584'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) # Unit = ID
    data['EngineBuildHoursReset_spn1211'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['SteeringStraightAheadPositionReset_spn3600'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['EngineSparkPlugSecondaryVoltageTrackingReset_spn6218'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['EngineIgnitionControlMaintenanceHoursReset_spn6219'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['BinLiftCountReset_spn6898'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['TireConfigurationInformation_spn6985'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['TireSensorInformation_spn6986'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    return data

# CM1
def PGN_57344(msg, data):
    data['EngineFan1RequestedPercentSpeed_spn986'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 0.4) # Unit = %
    data['CabInteriorTemperatureCommand_spn1691'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['AuxiliaryHeaterCoolantPumpRequest_spn1684'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['BatteryMainSwitchHoldRequest_spn1682'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['OperatorSeatDirectionSwitch_spn1714'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['SeatBeltSwitch_spn1856'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['ParkBrakeCommand_spn5630'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['VehicleLimitingSpeedGovernorDecrementSwitch_spn1655'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['VehicleLimitingSpeedGovernorIncrementSwitch_spn1654'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['VehicleLimitingSpeedGovernorEnableSwitch_spn1653'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['AftertreatmentRegenerationInhibitSwitch_spn3695'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['AftertreatmentRegenerationForceSwitch_spn3696'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['AutomaticGearShiftingEnableSwitch_spn1666'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['EngineAutomaticStartEnableSwitch_spn1656'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryHeaterModeRequest_spn1683'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['RequestEngineZoneHeating_spn1685'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['RequestCabZoneHeating_spn1686'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['SelectedMaximumVehicleSpeedLimit_spn2596'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 1.0) # Unit = count
    return data

# ERC1
def PGN_61440(msg, data):
    data['RetarderTorqueMode_spn900'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['RetarderEnable-BrakeAssistSwitch_spn571'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['RetarderEnable-ShiftAssistSwitch_spn572'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['ActualRetarder-PercentTorque_spn520'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) - 125.0 # Unit = %
    data['IntendedRetarderPercentTorque_spn1085'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) - 125.0 # Unit = %
    data['EngineCoolantLoadIncrease_spn1082'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['RetarderRequestingBrakeLight_spn1667'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['RetarderRoadSpeedLimitSwitch_spn4233'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['RetarderRoadSpeedExceededStatus_spn4234'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['SourceAddressofControllingDeviceforRetarderControl_spn1480'] = ( enforceMaxV(( (int(msg[8:10], 16))), 255)  * 1.0) # Unit = SA
    data['DriversDemandRetarder-PercentTorque_spn1715'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 1.0) - 125.0 # Unit = %
    data['RetarderSelectionnon-engine_spn1716'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 0.4) # Unit = %
    data['ActualMaximumAvailableRetarder-PercentTorque_spn1717'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 1.0) - 125.0 # Unit = %
    return data

# EBC1
def PGN_61441(msg, data):
    data['ASREngineControlActive_spn561'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['ASRBrakeControlActive_spn562'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Anti-LockBraking(ABS)Active_spn563'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['EBSBrakeSwitch_spn1121'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['BrakePedalPosition_spn521'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 0.4) # Unit = %
    data['ABSOff-roadSwitch_spn575'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['ASROff-roadSwitch_spn576'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['ASRHillHolderSwitch_spn577'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['TractionControlOverrideSwitch_spn1238'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['AcceleratorInterlockSwitch_spn972'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EngineDerateSwitch_spn971'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['EngineAuxiliaryShutdownSwitch_spn970'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['RemoteAcceleratorEnableSwitch_spn969'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['EngineRetarderSelection_spn973'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.4) # Unit = %
    data['ABSFullyOperational_spn1243'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EBSRedWarningSignal_spn1439'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['ABS/EBSAmberWarningSignal(PoweredVehicle)_spn1438'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['ATC/ASRInformationSignal_spn1793'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['SourceAddressofControllingDeviceforBrakeControl_spn1481'] = ( enforceMaxV(( (int(msg[12:14], 16))), 255)  * 1.0) # Unit = SA
    data['RailroadModeSwitch_spn7941'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Haltbrakeswitch_spn2911'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['TrailerABSStatus_spn1836'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Tractor-MountedTrailerABSWarningSignal_spn1792'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# ETC1
def PGN_61442(msg, data):
    data['TransmissionDrivelineEngaged_spn560'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['TransmissionTorqueConverterLockupEngaged_spn573'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['TransmissionShiftInProcess_spn574'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['TransmissionTorqueConverterLockupTransitioninProcess_spn4816'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Transmission1OutputShaftSpeed_spn191'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 )), 64255)  * 0.125) # Unit = rpm
    data['PercentClutchSlip_spn522'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 0.4) # Unit = %
    data['EngineMomentaryOverspeedEnable_spn606'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['ProgressiveShiftDisable_spn607'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['MomentaryEngineMaximumPowerEnable_spn5015'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Transmission1InputShaftSpeed_spn161'] = ( enforceMaxV(( (int(msg[10:12], 16)) + ((int(msg[12:14], 16)) << 8 )), 64255)  * 0.125) # Unit = rpm
    data['SourceAddressofControllingDeviceforTransmissionControl_spn1482'] = ( enforceMaxV(( (int(msg[14:16], 16))), 255)  * 1.0) # Unit = SA
    return data

# EEC2
def PGN_61443(msg, data):
    data['AcceleratorPedal1LowIdleSwitch_spn558'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['AcceleratorPedalKickdownSwitch_spn559'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['RoadSpeedLimitStatus_spn1437'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['AcceleratorPedal2LowIdleSwitch_spn2970'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['AcceleratorPedalPosition1_spn91'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 0.4) # Unit = %
    data['EnginePercentLoadAtCurrentSpeed_spn92'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) # Unit = %
    data['RemoteAcceleratorPedalPosition_spn974'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 0.4) # Unit = %
    data['AcceleratorPedal2Position_spn29'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.4) # Unit = %
    data['VehicleAccelerationRateLimitStatus_spn2979'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['MomentaryEngineMaximumPowerEnableFeedback_spn5021'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['DPFThermalManagementActive_spn5399'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['SCRThermalManagementActive_spn5400'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['ActualMaximumAvailableEngine-PercentTorque_spn3357'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 0.4) # Unit = %
    data['EstimatedPumping-PercentTorque_spn5398'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 1.0) - 125.0 # Unit = %
    return data

# EEC1
def PGN_61444(msg, data):
    data['EngineTorqueMode_spn899'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['ActualEngine-PercentTorque(Fractional)_spn4154'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11110000) >> 4)), 7)  * 0.125) # Unit = %
    data['DriversDemandEngine-PercentTorque_spn512'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) - 125.0 # Unit = %
    data['ActualEngine-PercentTorque_spn513'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) - 125.0 # Unit = %
    data['EngineSpeed_spn190'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 0.125) # Unit = rpm
    data['SourceAddressofControllingDeviceforEngineControl_spn1483'] = ( enforceMaxV(( (int(msg[10:12], 16))), 255)  * 1.0) # Unit = SA
    data['EngineStarterMode_spn1675'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['EngineDemandâPercentTorque_spn2432'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 1.0) - 125.0 # Unit = %
    return data

# ETC2
def PGN_61445(msg, data):
    data['TransmissionSelectedGear_spn524'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) - 125.0 # Unit = gear value
    data['TransmissionActualGearRatio_spn526'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 )), 64255)  * 0.001) # Unit = Ratio
    data['TransmissionCurrentGear_spn523'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) - 125.0 # Unit = gear value
    return data

# EAC1
def PGN_61446(msg, data):
    data['Location_spn927'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = bit
    data['DifferentialLockState-FrontAxle1_spn567'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['DifferentialLockState-FrontAxle2_spn568'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['DifferentialLockState-RearAxle1_spn569'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['DifferentialLockState-RearAxle2_spn570'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['DifferentialLockState-Central_spn564'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['DifferentialLockState-CentralFront_spn565'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['DifferentialLockState-CentralRear_spn566'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['DifferentialLockState-RearAxle3_spn7716'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Frontaxlegroupengagementstatus_spn3819'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Rearaxlegroupengagementstatus_spn3820'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['DogClutchRearAxle2_spn12285'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    return data

# FLI1
def PGN_61447(msg, data):
    data['LaneDepartureLeft_spn3565'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['LaneDepartureRight_spn3566'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['LaneDepartureImminentRightSide_spn1701'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['LaneDepartureImminentLeftSide_spn1700'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['DriverAlertnessWarning_spn7473'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000111)), 7)  * 1.0) # Unit = bit
    data['RightSideLaneDepartureOpticalWarningCommand_spn8135'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['LeftSideLaneDepartureOpticalWarningCommand_spn8136'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['RightSideLaneDepartureAcousticalWarningCommand_spn8137'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['LeftSideLaneDepartureAcousticalWarningCommand_spn8138'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['RightSideLaneDepartureHapticWarningCommand_spn9749'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['LeftSideLaneDepartureHapticWarningCommand_spn9750'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    return data

# HPG
def PGN_61448(msg, data):
    data['HydraulicPressure_spn1762'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 2.0) # Unit = kPa
    data['EngineHydraulicPressureGovernorModeIndicator_spn1763'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EngineHydraulicPressureGovernorSwitch_spn1764'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['FireApparatusPumpEngagement_spn2599'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['FireApparatusOkayToPumpInterlock_spn6702'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['HydraulicIntakePressure_spn6707'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64292)  * 0.000122) - 1.0 # Unit = MPa
    data['HydraulicDischargePressureSetPoint_spn6708'] = ( enforceMaxV(( (int(msg[10:12], 16)) + ((int(msg[12:14], 16)) << 8 )), 64255)  * 2.0) # Unit = kPa
    data['HydraulicPressureGovernorIdleSwitch_spn6705'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HydraulicPressureGovernorDecreaseSwitch_spn6704'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HydraulicPressureGovernorIncreaseSwitch_spn6703'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HydraulicPressureGovernorPresetSwitch_spn6706'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# VDC2
def PGN_61449(msg, data):
    data['SteeringWheelAngle_spn1807'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64225)  * 0.000977) - 31.374 # Unit = rad
    data['SteeringWheelTurnCounter_spn1811'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00111111)), 61)  * 1.0) - 32.0 # Unit = turns
    data['SteeringWheelAngleSensorType_spn1812'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['YawRate_spn1808'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64262)  * 0.000122) - 3.92 # Unit = rad/s
    data['LateralAcceleration_spn1809'] = ( enforceMaxV(( (int(msg[10:12], 16)) + ((int(msg[12:14], 16)) << 8 )), 64291)  * 0.000488) - 15.687 # Unit = m/sÂ²
    data['LongitudinalAcceleration_spn1810'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 0.1) - 12.5 # Unit = m/sÂ²
    return data

# EGF1
def PGN_61450(msg, data):
    data['EngineExhaustGasRecirculation1MassFlowRate_spn2659'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) # Unit = kg/h
    data['EngineIntakeAirMassFlowRate_spn132'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) # Unit = kg/h
    data['EngineExhaustGasRecirculation2MassFlowRate_spn5257'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.05) # Unit = kg/h
    data['TargetFreshAirMassFlow_spn12758'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.05) # Unit = kg/h
    return data

# ESC1
def PGN_61451(msg, data):
    data['ActualInnerwheelsteeringangle_spn2927'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['AxleLocation_spn2928'] = ( enforceMaxV(( (int(msg[4:6], 16))), 255)  * 1.0) # Unit = bit
    data['StatusofSteeringAxle_spn2923'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['SteerableLiftAxleLoweringInhibit_spn2922'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['SteeringType_spn2924'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['TypeofSteeringForces_spn2925'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['TypeofSteeringTransmission_spn2926'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    return data

# ETC8
def PGN_61452(msg, data):
    data['TransmissionTorqueConverterRatio_spn3030'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.001) # Unit = Ratio
    data['TransmissionClutch/ConverterInputSpeed_spn5052'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.125) # Unit = rpm
    data['TransmissionShiftInhibitReason_spn10152'] = ( enforceMaxV(( (int(msg[8:10], 16))), 255)  * 1.0) # Unit = bit
    data['TransmissionTorqueConverterLockupInhibitReason_spn10151'] = ( enforceMaxV(( (int(msg[10:12], 16))), 255)  * 1.0) # Unit = bit
    data['TransmissionTorqueConverterLockupInhibitIndicator_spn10150'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    return data

# LOI
def PGN_61453(msg, data):
    data['BladeControlModeSwitch_spn3156'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['DesiredGradeOffsetSwitch_spn3157'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['BladeAutoModeCommand_spn3158'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['LeftBladeControlModeOperatorControl_spn3334'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['RightBladeControlModeOperatorControl_spn3335'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['LeftDesiredBladeOffsetOperatorControl_spn3336'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['RightDesiredBladeOffsetOperatorControl_spn3337'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Side-shiftBladeControlModeOperatorControl_spn3338'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['Side-shiftDesiredBladeOffsetOperatorControl_spn3339'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['SetElevationSensor_1ReferenceElevation_spn5405'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['SetElevationSensor_2ReferenceElevation_spn5406'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# AT1IG1
def PGN_61454(msg, data):
    data['EngineExhaust1NOx1_spn3216'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) - 200.0 # Unit = ppm
    data['EngineExhaust1PercentOxygen1_spn3217'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.000514) - 12.0 # Unit = %
    data['EngineExhaust1GasSensor1PowerInRange_spn3218'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment1IntakeGasSensor1atTemperature_spn3219'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['EngineExhaust1NOx1ReadingStable_spn3220'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment1IntakeWide-RangePercentOxygen1ReadingStable_spn3221'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment1IntakeGasSensor1HeaterPreliminaryFMI_spn3222'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['Aftertreatment1IntakeGasSensor1HeaterControl_spn3223'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b01100000) >> 5)), 3)  * 1.0) # Unit = bit
    data['EngineExhaust1NOxSensor1PreliminaryFMI_spn3224'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['EngineExhaust1NOxSensor1Self-diagnosisStatus_spn5714'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11100000) >> 5)), 7)  * 1.0) # Unit = bit
    data['Aftertreatment1IntakeOxygenSensor1PreliminaryFMI_spn3225'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    return data

# AT1OG1
def PGN_61455(msg, data):
    data['Aftertreatment1OutletNOx1_spn3226'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) - 200.0 # Unit = ppm
    data['Aftertreatment1OutletPercentOxygen1_spn3227'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.000514) - 12.0 # Unit = %
    data['Aftertreatment1OutletGasSensor1PowerInRange_spn3228'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment1OutletGasSensor1atTemperature_spn3229'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment1OutletNOx1ReadingStable_spn3230'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment1OutletWide-RangePercentOxygen1ReadingStable_spn3231'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment1OutletGasSensor1HeaterPreliminaryFMI_spn3232'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['Aftertreatment1OutletGasSensor1HeaterControl_spn3233'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b01100000) >> 5)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment1OutletNOxSensor1PreliminaryFMI_spn3234'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['Aftertreatment1OutletNOxSensor1Self-diagnosisStatus_spn5713'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11100000) >> 5)), 7)  * 1.0) # Unit = bit
    data['Aftertreatment1OutletOxygenSensor1PreliminaryFMI_spn3235'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    return data

# AT2IG1
def PGN_61456(msg, data):
    data['EngineExhaust2NOx1_spn3255'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) - 200.0 # Unit = ppm
    data['EngineExhaust2PercentOxygen1_spn3256'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.000514) - 12.0 # Unit = %
    data['EngineExhaust2GasSensor1PowerInRange_spn3257'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment2IntakeGasSensor1atTemperature_spn3258'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['EngineExhaust2NOx1ReadingStable_spn3259'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment2IntakeWide-RangePercentOxygen1ReadingStable_spn3260'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment2IntakeGasSensor1HeaterPreliminaryFMI_spn3261'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['Aftertreatment2IntakeGasSensor1HeaterControl_spn3262'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b01100000) >> 5)), 3)  * 1.0) # Unit = bit
    data['EngineExhaust2NOxSensor1PreliminaryFMI_spn3263'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['EngineExhaust2NOxSensor1Self-diagnosisStatus_spn5716'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11100000) >> 5)), 7)  * 1.0) # Unit = bit
    data['Aftertreatment2IntakeOxygenSensor1PreliminaryFMI_spn3264'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['EngineExhaust2GasSensor2PowerSupply_spn8485'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b01100000) >> 5)), 3)  * 1.0) # Unit = bit
    return data

# AT2OG1
def PGN_61457(msg, data):
    data['Aftertreatment2OutletNOx1_spn3265'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) - 200.0 # Unit = ppm
    data['Aftertreatment2OutletPercentOxygen1_spn3266'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.000514) - 12.0 # Unit = %
    data['Aftertreatment2OutletGasSensor1PowerInRange_spn3267'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment2OutletGasSensor1atTemperature_spn3268'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment2OutletNOx1ReadingStable_spn3269'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment2OutletWide-RangePercentOxygen1ReadingStable_spn3270'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment2OutletGasSensor1HeaterPreliminaryFMI_spn3271'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['Aftertreatment2OutletGasSensor1HeaterControl_spn3272'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b01100000) >> 5)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment2OutletNOxSensor1PreliminaryFMI_spn3273'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['Aftertreatment2OutletNOxSensor1Self-diagnosisStatus_spn5715'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11100000) >> 5)), 7)  * 1.0) # Unit = bit
    data['Aftertreatment2OutletOxygenSensor1PreliminaryFMI_spn3274'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['Aftertreatment2Outlet2GasSensorPowerSupply_spn8486'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b01100000) >> 5)), 3)  * 1.0) # Unit = bit
    return data

# FWSS1
def PGN_61458(msg, data):
    data['FifthWheelVerticalForce_spn3308'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 5.0) # Unit = N
    data['FifthWheelDrawbarForce_spn3309'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 10.0) - 320000.0 # Unit = N
    data['FifthWheelRollMoment_spn3310'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 10.0) - 320000.0 # Unit = N
    data['FifthWheelRollWarningIndicator_spn3317'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    return data

# SSI
def PGN_61459(msg, data):
    data['PitchAngle_spn3318'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.002) - 64.0 # Unit = deg
    data['RollAngle_spn3319'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.002) - 64.0 # Unit = deg
    data['PitchRate_spn3322'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.002) - 64.0 # Unit = deg/s
    data['PitchAngleFigureofMerit_spn3323'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['RollAngleFigureofMerit_spn3324'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['PitchRateFigureofMerit_spn3325'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['PitchandRollCompensated_spn3326'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['RollandPitchMeasurementLatency_spn3327'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 0.5) # Unit = ms
    return data

# BI
def PGN_61460(msg, data):
    data['RelativeBladeHeight_spn3365'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.1) - 3200.0 # Unit = mm
    data['BladeRotationAngle_spn3331'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64259)  * 0.007812) - 200.0 # Unit = deg
    data['RelativeBladeHeightandBladeRotationAngleMeasurementLatency_spn3366'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.5) # Unit = ms
    data['RelativeBladeHeightFigureofMerit_spn3367'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['BladeRotationAngleFigureofMerit_spn3332'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    return data

# RGTACRP
def PGN_61461(msg, data):
    data['RequestedGeneratorTotalACReactivePower_spn3383'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 1.0) - 2000000000.0 # Unit = VA
    data['RequestedGeneratorOverallPowerFactor_spn3384'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64292)  * 6.1e-05) - 1.0 # Unit = 
    data['RequestedGeneratorOverallPowerFactorLagging_spn3385'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    return data

# CCS
def PGN_61462(msg, data):
    data['EngineCylinder1CombustionStatus_spn3387'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EngineCylinder2CombustionStatus_spn3388'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['EngineCylinder3CombustionStatus_spn3389'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['EngineCylinder4CombustionStatus_spn3390'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['EngineCylinder5CombustionStatus_spn3391'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EngineCylinder6CombustionStatus_spn3392'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['EngineCylinder7CombustionStatus_spn3393'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['EngineCylinder8CombustionStatus_spn3394'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['EngineCylinder9CombustionStatus_spn3395'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EngineCylinder10CombustionStatus_spn3396'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['EngineCylinder11CombustionStatus_spn3397'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['EngineCylinder12CombustionStatus_spn3398'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['EngineCylinder13CombustionStatus_spn3399'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EngineCylinder14CombustionStatus_spn3400'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['EngineCylinder15CombustionStatus_spn3401'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['EngineCylinder16CombustionStatus_spn3402'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['EngineCylinder17CombustionStatus_spn3403'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EngineCylinder18CombustionStatus_spn3404'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['EngineCylinder19CombustionStatus_spn3405'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['EngineCylinder20CombustionStatus_spn3406'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['EngineCylinder21CombustionStatus_spn3407'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EngineCylinder22CombustionStatus_spn3408'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['EngineCylinder23CombustionStatus_spn3409'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['EngineCylinder24CombustionStatus_spn3410'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# KL1
def PGN_61463(msg, data):
    data['EngineCylinder1KnockLevel_spn1352'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) # Unit = %
    data['EngineCylinder2KnockLevel_spn1353'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) # Unit = %
    data['EngineCylinder3KnockLevel_spn1354'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) # Unit = %
    data['EngineCylinder4KnockLevel_spn1355'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) # Unit = %
    data['EngineCylinder5KnockLevel_spn1356'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) # Unit = %
    data['EngineCylinder6KnockLevel_spn1357'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 1.0) # Unit = %
    data['EngineCylinder7KnockLevel_spn1358'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 1.0) # Unit = %
    data['EngineCylinder8KnockLevel_spn1359'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 1.0) # Unit = %
    return data

# KL2
def PGN_61464(msg, data):
    data['EngineCylinder9KnockLevel_spn1360'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) # Unit = %
    data['EngineCylinder10KnockLevel_spn1361'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) # Unit = %
    data['EngineCylinder11KnockLevel_spn1362'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) # Unit = %
    data['EngineCylinder12KnockLevel_spn1363'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) # Unit = %
    data['EngineCylinder13KnockLevel_spn1364'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) # Unit = %
    data['EngineCylinder14KnockLevel_spn1365'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 1.0) # Unit = %
    data['EngineCylinder15KnockLevel_spn1366'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 1.0) # Unit = %
    data['EngineCylinder16KnockLevel_spn1367'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 1.0) # Unit = %
    return data

# KL3
def PGN_61465(msg, data):
    data['EngineCylinder17KnockLevel_spn1368'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) # Unit = %
    data['EngineCylinder18KnockLevel_spn1369'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) # Unit = %
    data['EngineCylinder19KnockLevel_spn1370'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) # Unit = %
    data['EngineCylinder20KnockLevel_spn1371'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) # Unit = %
    data['EngineCylinder21KnockLevel_spn1372'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) # Unit = %
    data['EngineCylinder22KnockLevel_spn1373'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 1.0) # Unit = %
    data['EngineCylinder23KnockLevel_spn1374'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 1.0) # Unit = %
    data['EngineCylinder24KnockLevel_spn1375'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 1.0) # Unit = %
    return data

# TFAC
def PGN_61466(msg, data):
    data['EngineThrottleActuator1ControlCommand_spn3464'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    data['EngineThrottleActuator2ControlCommand_spn3465'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    data['EngineFuelActuator1ControlCommand_spn633'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    data['EngineFuelActuator2ControlCommand_spn1244'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    return data

# RGAAC
def PGN_61468(msg, data):
    data['RequestedGeneratorAverageLine-LineACRMSVoltage_spn3386'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211350614)  * 0.007812) # Unit = V
    return data

# SAS
def PGN_61469(msg, data):
    data['SteeringWheelAngle_spn3683'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64225)  * 0.000977) - 31.374 # Unit = rad
    data['SteeringWheelAngleRangeCounter_spn3684'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00111111)), 61)  * 1.0) - 32.0 # Unit = range
    data['SteeringWheelAngleRangeCounterType_spn3685'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['SteeringWheelAngleRange_spn3686'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64225)  * 0.000977) - 31.374 # Unit = rad
    data['SteeringAngleSensorActiveMode_spn3687'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['SteeringAngleSensorCalibrated_spn3688'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['MessageCounter_spn3689'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00001111)), 15)  * 1.0) # Unit = count
    data['MessageChecksum_spn3690'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = count
    return data

# GC2
def PGN_61470(msg, data):
    data['GeneratorGoverningBias_spn3938'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.004) - 125.0 # Unit = %
    data['EngineSelf-InducedDerateInhibit_spn8429'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EngineLoadSetpointRequest_spn8430'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 0.5) # Unit = kW
    return data

# ESSI1
def PGN_61473(msg, data):
    data['EngineSpeed1_spn4201'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.5) # Unit = rpm
    data['EngineSpeed2_spn723'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.5) # Unit = rpm
    data['EngineSpeed3_spn4202'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.5) # Unit = rpm
    data['EngineSpeedSensor3TimingPatternStatus_spn4205'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['EngineSpeedSensor2TimingPatternStatus_spn4204'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['EngineSpeedSensor1TimingPatternStatus_spn4203'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# A1SCRDSI1
def PGN_61475(msg, data):
    data['Aftertreatment1DieselExhaustFluidActualDosingQuantity_spn4331'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.3) # Unit = g/h
    data['Aftertreatment1SCRSystem1State_spn4332'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Aftertreatment1SCRSystem2State_spn7524'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['Aftertreatment1DieselExhaustFluidActualQuantityofIntegrator_spn4333'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 0.1) # Unit = g
    data['Aftertreatment1DieselExhaustFluidDoser1AbsolutePressure_spn4334'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 8.0) # Unit = kPa
    data['Aftertreatment1DieselExhaustFluidActualDosingQuantity(HighRange)_spn6595'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.05) # Unit = g/min
    return data

# A1SCRDSR1
def PGN_61476(msg, data):
    data['Aftertreatment1DieselExhaustFluidDosingRequestedQuantity_spn4348'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.3) # Unit = g/h
    data['Aftertreatment1SCRSystemRequestedState_spn4349'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Aftertreatment1DieselExhaustFluidHydraulicStiffnessCheckPermissionStatus_spn7517'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment1DieselExhaustFluidDosingTestInjectionPermissionStatus_spn7518'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment1DieselExhaustFluidRequestedQuantityofIntegrator_spn4350'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 0.1) # Unit = g
    data['Aftertreatment1DieselExhaustFluidDosingRequestedQuantity(HighRange)_spn6593'] = ( enforceMaxV(( (int(msg[10:12], 16)) + ((int(msg[12:14], 16)) << 8 )), 64255)  * 0.05) # Unit = g/min
    return data

# A1SCRAI
def PGN_61477(msg, data):
    data['Aftertreatment1OutletNH3_spn4377'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) - 200.0 # Unit = ppm
    data['Aftertreatment1OutletNH3SensorPreliminaryFMI_spn4378'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['Aftertreatment1OutletNH3ReadingStable_spn4379'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment1OutletNH3GasSensorPowerInRange_spn4380'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment1OutletNH3GasSensoratTemperature_spn4381'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment1OutletNH3GasSensorHeaterPreliminaryFMI_spn4382'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['Aftertreatment1OutletNH3GasSensorHeaterControl_spn4383'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    return data

# A2SCRDSI1
def PGN_61478(msg, data):
    data['Aftertreatment2DieselExhaustFluidActualDosingQuantity_spn4384'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.3) # Unit = g/h
    data['Aftertreatment2SCRSystem1State_spn4385'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Aftertreatment2SCRSystem2State_spn7525'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['Aftertreatment2DieselExhaustFluidActualQuantityofIntegrator_spn4386'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 0.1) # Unit = g
    data['Aftertreatment2DieselExhaustFluidDoser1AbsolutePressure_spn4387'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 8.0) # Unit = kPa
    data['Aftertreatment2DieselExhaustFluidActualDosingQuantity(HighRange)_spn6596'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.05) # Unit = g/min
    return data

# A2SCRDSR1
def PGN_61479(msg, data):
    data['Aftertreatment2DieselExhaustFluidDosingRequestedQuantity_spn4401'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.3) # Unit = g/h
    data['Aftertreatment2SCRSystemRequestedState_spn4402'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Aftertreatment2DieselExhaustFluidHydraulicStiffnessCheckPermissionStatus_spn7519'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment2DieselExhaustFluidDosingTestInjectionPermissionStatus_spn7520'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment2DieselExhaustFluidRequestedQuantityofIntegrator_spn4403'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 0.1) # Unit = g
    data['Aftertreatment2DieselExhaustFluidDosingRequestedQuantity(HighRange)_spn6594'] = ( enforceMaxV(( (int(msg[10:12], 16)) + ((int(msg[12:14], 16)) << 8 )), 64255)  * 0.05) # Unit = g/min
    data['Aftertreatment2DieselExhaustFluidPumpHeaterCommand_spn7087'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 0.4) # Unit = %
    return data

# A2SCRAI
def PGN_61480(msg, data):
    data['Aftertreatment2OutletNH3_spn4443'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) - 200.0 # Unit = ppm
    data['Aftertreatment2OutletNH3SensorPreliminaryFMI_spn4444'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['Aftertreatment2OutletNH3ReadingStable_spn4445'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment2OutletNH3GasSensorPowerInRange_spn4446'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment2OutletNH3GasSensoratTemperature_spn4447'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment2OutletNH3GasSensorHeaterPreliminaryFMI_spn4448'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['Aftertreatment2OutletNH3GasSensorHeaterControl_spn4449'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    return data

# SSI2
def PGN_61481(msg, data):
    data['PitchAngle(ExtendedRange)_spn4976'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 )), 16193548)  * 3.1e-05) - 250.0 # Unit = deg
    data['RollAngle(ExtendedRange)_spn4977'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 ) + ((int(msg[10:12], 16)) << 16 )), 16193548)  * 3.1e-05) - 250.0 # Unit = deg
    data['PitchAngleCompensation(ExtendedRange)_spn4978'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['PitchAngleFigureofMerit(ExtendedRange)_spn4979'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['RollAngleCompensation(ExtendedRange)_spn4980'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['RollAngleFigureofMerit(ExtendedRange)_spn4981'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['RollandPitchMeasurementLatency(ExtendedRange)_spn4982'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 0.5) # Unit = ms
    return data

# ARI
def PGN_61482(msg, data):
    data['PitchRate(ExtendedRange)_spn4983'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64131)  * 0.007812) - 250.0 # Unit = deg/s
    data['RollRate(ExtendedRange)_spn4984'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64131)  * 0.007812) - 250.0 # Unit = deg/s
    data['YawRate(ExtendedRange)_spn4985'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64131)  * 0.007812) - 250.0 # Unit = deg/s
    data['PitchRateFigureofMerit(ExtendedRange)_spn4986'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['RollRateFigureofMerit(ExtendedRange)_spn4987'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['YawRateFigureofMerit(ExtendedRange)_spn4988'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['AngularRateMeasurementLatency_spn4989'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 0.5) # Unit = ms
    return data

# CN
def PGN_61483(msg, data):
    data['CrashCounter_spn4974'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00001111)), 15)  * 1.0) # Unit = count
    data['CrashChecksum_spn4975'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = count
    return data

# MSI2
def PGN_61484(msg, data):
    data['MagnetForwardCurrent_spn5008'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 1.0) # Unit = A
    data['MagnetReverseCurrent_spn5009'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) # Unit = A
    data['MaterialLiftSwitch_spn5010'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['MaterialDropSwitch_spn5011'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['GeneratorCurrentBoostActiveStatus_spn5012'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['MaterialLiftActiveStatus_spn5013'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['MaterialDropActiveStatus_spn5014'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['LiftRelayControl_spn5402'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['DropRelayControl_spn5403'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['MagnetGeneratorControl_spn5551'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# ACCS
def PGN_61485(msg, data):
    data['LateralAcceleration(ExtendedRange)_spn5347'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.01) - 320.0 # Unit = m/sÂ²
    data['LongitudinalAcceleration(ExtendedRange)_spn5348'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.01) - 320.0 # Unit = m/sÂ²
    data['VerticalAcceleration(ExtendedRange)_spn5349'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.01) - 320.0 # Unit = m/sÂ²
    data['LateralAccelerationFigureofMerit(ExtendedRange)_spn5350'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['LongitudinalAccelerationFigureofMerit(ExtendedRange)_spn5351'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['VerticalAccelerationFigureofMerit(ExtendedRange)_spn5352'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['SupportVariableTransmissionRepetitionRateforAccelerationSensor_spn5353'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# ETCC
def PGN_61486(msg, data):
    data['EngineTurbochargerWastegateActuator1Command_spn5386'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    data['EngineTurbochargerWastegateActuator2Command_spn5387'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    data['EngineExhaustBank1PressureRegulatorControlCommand_spn649'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    data['EngineTurbochargerCompressorBlowoffActuator1Command_spn6201'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    return data

# AEBS1
def PGN_61487(msg, data):
    data['ForwardCollisionAdvancedEmergencyBrakingSystemState_spn5676'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Collisionwarninglevel_spn5677'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['Relevantobjectdetectedforadvancedemergencybrakingsystem_spn5678'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000111)), 7)  * 1.0) # Unit = bit
    data['Bendoffprobabilityofrelevantobject_spn5679'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00111000) >> 3)), 7)  * 1.0) # Unit = bit
    data['Timetocollisionwithrelevantobject_spn5680'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 0.05) # Unit = s
    data['RoadDepartureAdvancedEmergencyBrakingSystemState_spn9748'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    return data

# WS
def PGN_61488(msg, data):
    data['WirelessRollingMessageCounter_spn5750'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 1.0) # Unit = count
    data['TransmitterCommandState_spn5751'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['TransmitterID1_spn5752'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 ) + ((int(msg[10:12], 16)) << 16 )), 16449635)  * 1.0) # Unit = ID
    data['WirelessSignalStrength1_spn5753'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 0.5) - 125.0 # Unit = dBm
    return data

# WAND
def PGN_61489(msg, data):
    data['WandAngle_spn5821'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.002) - 64.0 # Unit = deg
    data['WandSensorFigureofMerit_spn5822'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    return data

# LDISP
def PGN_61490(msg, data):
    data['MeasuredLinearDisplacement_spn5823'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.1) # Unit = mm
    data['LinearDisplacementSensorSensorFigureofMerit_spn5824'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    return data

# A1SCRAI2
def PGN_61491(msg, data):
    data['Aftertreatment1SCRIntermediateNH3_spn5848'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.1) - 200.0 # Unit = ppm
    data['Aftertreatment1SCRIntermediateNH3SensorPreliminaryFMI_spn5849'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['Aftertreatment1SCRIntermediateNH3ReadingStable_spn5850'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment1SCRIntermediateNH3SensorPowerInRange_spn5851'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment1SCRIntermediateNH3SensoratTemperature_spn5852'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment1SCRIntermediateNH3SensorHeaterPreliminaryFMI_spn5853'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['Aftertreatment1SCRIntermediateNH3SensorHeaterControl_spn5854'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    return data

# A2SCRAI2
def PGN_61492(msg, data):
    data['Aftertreatment2SCRIntermediateNH3_spn5855'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.1) - 200.0 # Unit = ppm
    data['Aftertreatment2SCRIntermediateNH3SensorPreliminaryFMI_spn5856'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['Aftertreatment2SCRIntermediateNH3ReadingStable_spn5857'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment2SCRIntermediateNH3SensorPowerInRange_spn5858'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment2SCRIntermediateNH3SensoratTemperature_spn5859'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment2SCRIntermediateNH3SensorHeaterPreliminaryFMI_spn5860'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['Aftertreatment2SCRIntermediateNH3SensorHeaterControl_spn5861'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    return data

# HVESSS2
def PGN_61494(msg, data):
    data['HVESSDischargePowerLimitDuetoStateofCharge_spn8103'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESSDischargePowerLimitDuetoBatteryTemperature_spn8104'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESSDischargePowerLimitDuetoBatteryDiagnosticCondition_spn8105'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HVESSDischargePowerLimitDuetoBatteryorCellVoltage_spn8106'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['HVESSDischargePowerLimitDuetoBatteryCurrent_spn8107'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESSDischargePowerLimitDuetoanUndefinedCause_spn8108'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESSChargePowerLimitDuetoStateofCharge_spn8109'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESSChargePowerLimitDuetoBatteryTemperature_spn8110'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESSChargePowerLimitDuetoBatteryDiagnosticCondition_spn8111'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HVESSChargePowerLimitDuetoBatteryorCellVoltage_spn8112'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['HVESSChargePowerLimitDuetoBatteryCurrent_spn8113'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESSChargePowerLimitDuetoanUndefinedCause_spn8114'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    return data

# ETBA1
def PGN_61495(msg, data):
    data['EngineTurbochargerCompressorBlowoffActuator1PreliminaryFMI_spn6311'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['EngineTurbochargerCompressorBlowoffActuator1TemperatureStatus_spn6312'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11100000) >> 5)), 7)  * 1.0) # Unit = bit
    data['EngineTurbochargerCompressorBlowoffActuator1Temperature_spn6313'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['EngineTurbochargerCompressorBlowoffActuator1DesiredPosition_spn6314'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 0.4) # Unit = %
    data['EngineTurbochargerCompressorBlowoffActuator1Position_spn6315'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 0.4) # Unit = %
    data['EngineTurbochargerCompressorBlowoffActuator1OperationStatus_spn6316'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    return data

# ETFR
def PGN_61496(msg, data):
    data['EngineGasSubstitutionFuelPercentageCommand_spn6386'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 0.5) # Unit = %
    data['EngineCylinderGasMassFlowRateCommand_spn6387'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 )), 64292)  * 6.1e-05) # Unit = kg/s
    data['EngineCylinderDieselMassFlowRateCommand_spn6388'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64292)  * 6.1e-05) # Unit = kg/s
    data['EngineCylinderTorque_spn6389'] = ( enforceMaxV(( (int(msg[10:12], 16)) + ((int(msg[12:14], 16)) << 8 )), 64255)  * 1.0) # Unit = Nm
    data['EngineDualFuelModeCommand_spn6792'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    return data

# EASI
def PGN_61497(msg, data):
    data['EngineDesiredAirFuelRatio_spn6392'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.001) # Unit = Ratio
    data['EngineFuelSystem1TotalIntakeMassAirFlowRate_spn6393'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64226)  * 0.000977) # Unit = kg/s
    data['EngineFuelSystem2TotalIntakeMassAirFlowRate_spn8310'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64226)  * 0.000977) # Unit = kg/s
    return data

# ECCI1
def PGN_61498(msg, data):
    data['EngineCylinder1HeatRelease_spn6396'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64292)  * 0.000122) - 1.0 # Unit = kJ/l
    data['EngineCylinder1PeakPressure_spn6397'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder1SynchronousKnockLevel_spn6398'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) # Unit = %
    data['EngineCylinder1PressureSensorPreliminaryFMI_spn6399'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['EngineCylinder1LowFrequencyKnockLevel_spn7609'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 1.0) # Unit = %
    data['EngineCylinder1MaximumPressureIncreaseRate_spn7629'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 16.0) # Unit = kPa/deg crank angle
    return data

# ECCI2
def PGN_61499(msg, data):
    data['EngineCylinder2HeatRelease_spn6400'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64292)  * 0.000122) - 1.0 # Unit = kJ/l
    data['EngineCylinder2PeakPressure_spn6401'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder2SynchronousKnockLevel_spn6402'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) # Unit = %
    data['EngineCylinder2PressureSensorPreliminaryFMI_spn6403'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['EngineCylinder2LowFrequencyKnockLevel_spn7610'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 1.0) # Unit = %
    data['EngineCylinder2MaximumPressureIncreaseRate_spn7630'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 16.0) # Unit = kPa/deg crank angle
    return data

# ECCI3
def PGN_61500(msg, data):
    data['EngineCylinder3HeatRelease_spn6404'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64292)  * 0.000122) - 1.0 # Unit = kJ/l
    data['EngineCylinder3PeakPressure_spn6405'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder3SynchronousKnockLevel_spn6406'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) # Unit = %
    data['EngineCylinder3PressureSensorPreliminaryFMI_spn6407'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['EngineCylinder3LowFrequencyKnockLevel_spn7611'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 1.0) # Unit = %
    data['EngineCylinder3MaximumPressureIncreaseRate_spn7631'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 16.0) # Unit = kPa/deg crank angle
    return data

# ECCI4
def PGN_61501(msg, data):
    data['EngineCylinder4HeatRelease_spn6408'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64292)  * 0.000122) - 1.0 # Unit = kJ/l
    data['EngineCylinder4PeakPressure_spn6409'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder4SynchronousKnockLevel_spn6410'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) # Unit = %
    data['EngineCylinder4PressureSensorPreliminaryFMI_spn6411'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['EngineCylinder4LowFrequencyKnockLevel_spn7612'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 1.0) # Unit = %
    data['EngineCylinder4MaximumPressureIncreaseRate_spn7632'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 16.0) # Unit = kPa/deg crank angle
    return data

# ECCI5
def PGN_61502(msg, data):
    data['EngineCylinder5HeatRelease_spn6412'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64292)  * 0.000122) - 1.0 # Unit = kJ/l
    data['EngineCylinder5PeakPressure_spn6413'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder5SynchronousKnockLevel_spn6414'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) # Unit = %
    data['EngineCylinder5PressureSensorPreliminaryFMI_spn6415'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['EngineCylinder5LowFrequencyKnockLevel_spn7613'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 1.0) # Unit = %
    data['EngineCylinder5MaximumPressureIncreaseRate_spn7633'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 16.0) # Unit = kPa/deg crank angle
    return data

# ECCI6
def PGN_61503(msg, data):
    data['EngineCylinder6HeatRelease_spn6416'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64292)  * 0.000122) - 1.0 # Unit = kJ/l
    data['EngineCylinder6PeakPressure_spn6417'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder6SynchronousKnockLevel_spn6418'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) # Unit = %
    data['EngineCylinder6PressureSensorPreliminaryFMI_spn6419'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['EngineCylinder6LowFrequencyKnockLevel_spn7614'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 1.0) # Unit = %
    data['EngineCylinder6MaximumPressureIncreaseRate_spn7634'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 16.0) # Unit = kPa/deg crank angle
    return data

# ECCI7
def PGN_61504(msg, data):
    data['EngineCylinder7HeatRelease_spn6420'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64292)  * 0.000122) - 1.0 # Unit = kJ/l
    data['EngineCylinder7PeakPressure_spn6421'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder7SynchronousKnockLevel_spn6422'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) # Unit = %
    data['EngineCylinder7PressureSensorPreliminaryFMI_spn6423'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['EngineCylinder7LowFrequencyKnockLevel_spn7615'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 1.0) # Unit = %
    data['EngineCylinder7MaximumPressureIncreaseRate_spn7635'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 16.0) # Unit = kPa/deg crank angle
    return data

# ECCI8
def PGN_61505(msg, data):
    data['EngineCylinder8HeatRelease_spn6424'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64292)  * 0.000122) - 1.0 # Unit = kJ/l
    data['EngineCylinder8PeakPressure_spn6425'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder8SynchronousKnockLevel_spn6426'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) # Unit = %
    data['EngineCylinder8PressureSensorPreliminaryFMI_spn6427'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['EngineCylinder8LowFrequencyKnockLevel_spn7616'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 1.0) # Unit = %
    data['EngineCylinder8MaximumPressureIncreaseRate_spn7636'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 16.0) # Unit = kPa/deg crank angle
    return data

# ECCI9
def PGN_61506(msg, data):
    data['EngineCylinder9HeatRelease_spn6428'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64292)  * 0.000122) - 1.0 # Unit = kJ/l
    data['EngineCylinder9PeakPressure_spn6429'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder9SynchronousKnockLevel_spn6430'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) # Unit = %
    data['EngineCylinder9PressureSensorPreliminaryFMI_spn6431'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['EngineCylinder9LowFrequencyKnockLevel_spn7617'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 1.0) # Unit = %
    data['EngineCylinder9MaximumPressureIncreaseRate_spn7637'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 16.0) # Unit = kPa/deg crank angle
    return data

# ECCI10
def PGN_61507(msg, data):
    data['EngineCylinder10HeatRelease_spn6432'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64292)  * 0.000122) - 1.0 # Unit = kJ/l
    data['EngineCylinder10PeakPressure_spn6433'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder10SynchronousKnockLevel_spn6434'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) # Unit = %
    data['EngineCylinder10PressureSensorPreliminaryFMI_spn6435'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['EngineCylinder10LowFrequencyKnockLevel_spn7618'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 1.0) # Unit = %
    data['EngineCylinder10MaximumPressureIncreaseRate_spn7638'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 16.0) # Unit = kPa/deg crank angle
    return data

# ECCI11
def PGN_61508(msg, data):
    data['EngineCylinder11HeatRelease_spn6436'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64292)  * 0.000122) - 1.0 # Unit = kJ/l
    data['EngineCylinder11PeakPressure_spn6437'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder11SynchronousKnockLevel_spn6438'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) # Unit = %
    data['EngineCylinder11PressureSensorPreliminaryFMI_spn6439'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['EngineCylinder11LowFrequencyKnockLevel_spn7619'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 1.0) # Unit = %
    data['EngineCylinder11MaximumPressureIncreaseRate_spn7639'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 16.0) # Unit = kPa/deg crank angle
    return data

# ECCI12
def PGN_61509(msg, data):
    data['EngineCylinder12HeatRelease_spn6440'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64292)  * 0.000122) - 1.0 # Unit = kJ/l
    data['EngineCylinder12PeakPressure_spn6441'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder12SynchronousKnockLevel_spn6442'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) # Unit = %
    data['EngineCylinder12PressureSensorPreliminaryFMI_spn6443'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['EngineCylinder12LowFrequencyKnockLevel_spn7620'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 1.0) # Unit = %
    data['EngineCylinder12MaximumPressureIncreaseRate_spn7640'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 16.0) # Unit = kPa/deg crank angle
    return data

# ECCI13
def PGN_61510(msg, data):
    data['EngineCylinder13HeatRelease_spn6444'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64292)  * 0.000122) - 1.0 # Unit = kJ/l
    data['EngineCylinder13PeakPressure_spn6445'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder13SynchronousKnockLevel_spn6446'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) # Unit = %
    data['EngineCylinder13PressureSensorPreliminaryFMI_spn6447'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['EngineCylinder13LowFrequencyKnockLevel_spn7621'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 1.0) # Unit = %
    data['EngineCylinder13MaximumPressureIncreaseRate_spn7641'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 16.0) # Unit = kPa/deg crank angle
    return data

# ECCI14
def PGN_61511(msg, data):
    data['EngineCylinder14HeatRelease_spn6448'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64292)  * 0.000122) - 1.0 # Unit = kJ/l
    data['EngineCylinder14PeakPressure_spn6449'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder14SynchronousKnockLevel_spn6450'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) # Unit = %
    data['EngineCylinder14PressureSensorPreliminaryFMI_spn6451'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['EngineCylinder14LowFrequencyKnockLevel_spn7622'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 1.0) # Unit = %
    data['EngineCylinder14MaximumPressureIncreaseRate_spn7642'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 16.0) # Unit = kPa/deg crank angle
    return data

# ECCI15
def PGN_61512(msg, data):
    data['EngineCylinder15HeatRelease_spn6452'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64292)  * 0.000122) - 1.0 # Unit = kJ/l
    data['EngineCylinder15PeakPressure_spn6453'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder15SynchronousKnockLevel_spn6454'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) # Unit = %
    data['EngineCylinder15PressureSensorPreliminaryFMI_spn6455'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['EngineCylinder15LowFrequencyKnockLevel_spn7623'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 1.0) # Unit = %
    data['EngineCylinder15MaximumPressureIncreaseRate_spn7643'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 16.0) # Unit = kPa/deg crank angle
    return data

# ECCI16
def PGN_61513(msg, data):
    data['EngineCylinder16HeatRelease_spn6456'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64292)  * 0.000122) - 1.0 # Unit = kJ/l
    data['EngineCylinder16PeakPressure_spn6457'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder16SynchronousKnockLevel_spn6458'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) # Unit = %
    data['EngineCylinder16PressureSensorPreliminaryFMI_spn6459'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['EngineCylinder16LowFrequencyKnockLevel_spn7624'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 1.0) # Unit = %
    data['EngineCylinder16MaximumPressureIncreaseRate_spn7644'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 16.0) # Unit = kPa/deg crank angle
    return data

# ECCI17
def PGN_61514(msg, data):
    data['EngineCylinder17HeatRelease_spn6460'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64292)  * 0.000122) - 1.0 # Unit = kJ/l
    data['EngineCylinder17PeakPressure_spn6461'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder17SynchronousKnockLevel_spn6462'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) # Unit = %
    data['EngineCylinder17PressureSensorPreliminaryFMI_spn6463'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['EngineCylinder17LowFrequencyKnockLevel_spn7625'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 1.0) # Unit = %
    data['EngineCylinder17MaximumPressureIncreaseRate_spn7645'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 16.0) # Unit = kPa/deg crank angle
    return data

# ECCI18
def PGN_61515(msg, data):
    data['EngineCylinder18HeatRelease_spn6464'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64292)  * 0.000122) - 1.0 # Unit = kJ/l
    data['EngineCylinder18PeakPressure_spn6465'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder18SynchronousKnockLevel_spn6466'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) # Unit = %
    data['EngineCylinder18PressureSensorPreliminaryFMI_spn6467'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['EngineCylinder18LowFrequencyKnockLevel_spn7626'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 1.0) # Unit = %
    data['EngineCylinder18MaximumPressureIncreaseRate_spn7646'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 16.0) # Unit = kPa/deg crank angle
    return data

# ECCI19
def PGN_61516(msg, data):
    data['EngineCylinder19HeatRelease_spn6468'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64292)  * 0.000122) - 1.0 # Unit = kJ/l
    data['EngineCylinder19PeakPressure_spn6469'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder19SynchronousKnockLevel_spn6470'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) # Unit = %
    data['EngineCylinder19PressureSensorPreliminaryFMI_spn6471'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['EngineCylinder19LowFrequencyKnockLevel_spn7627'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 1.0) # Unit = %
    data['EngineCylinder19MaximumPressureIncreaseRate_spn7647'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 16.0) # Unit = kPa/deg crank angle
    return data

# ECCI20
def PGN_61517(msg, data):
    data['EngineCylinder20HeatRelease_spn6472'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64292)  * 0.000122) - 1.0 # Unit = kJ/l
    data['EngineCylinder20PeakPressure_spn6473'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder20SynchronousKnockLevel_spn6474'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) # Unit = %
    data['EngineCylinder20PressureSensorPreliminaryFMI_spn6475'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['EngineCylinder20LowFrequencyKnockLevel_spn7628'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 1.0) # Unit = %
    data['EngineCylinder20MaximumPressureIncreaseRate_spn7648'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 16.0) # Unit = kPa/deg crank angle
    return data

# ECCAI1
def PGN_61518(msg, data):
    data['EngineCylinder1IndicatedMeanEffectivePressure_spn6483'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64292)  * 0.000122) - 1.0 # Unit = MPa
    data['EngineCylinder1AverageStartofCombustionTiming_spn6484'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64131)  * 0.007812) - 250.0 # Unit = deg
    data['EngineCylinder1AverageCenterofCombustionTiming_spn6485'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64131)  * 0.007812) - 250.0 # Unit = deg
    data['EngineCylinder1AverageCombustionDuration_spn6486'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64259)  * 0.007812) # Unit = deg
    return data

# ECCAI2
def PGN_61519(msg, data):
    data['EngineCylinder2IndicatedMeanEffectivePressure_spn6487'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64292)  * 0.000122) - 1.0 # Unit = MPa
    data['EngineCylinder2AverageStartofCombustionTiming_spn6488'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64131)  * 0.007812) - 250.0 # Unit = deg
    data['EngineCylinder2AverageCenterofCombustionTiming_spn6489'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64131)  * 0.007812) - 250.0 # Unit = deg
    data['EngineCylinder2AverageCombustionDuration_spn6490'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64259)  * 0.007812) # Unit = deg
    return data

# ECCAI3
def PGN_61520(msg, data):
    data['EngineCylinder3IndicatedMeanEffectivePressure_spn6491'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64292)  * 0.000122) - 1.0 # Unit = MPa
    data['EngineCylinder3AverageStartofCombustionTiming_spn6492'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64131)  * 0.007812) - 250.0 # Unit = deg
    data['EngineCylinder3AverageCenterofCombustionTiming_spn6493'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64131)  * 0.007812) - 250.0 # Unit = deg
    data['EngineCylinder3AverageCombustionDuration_spn6494'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64259)  * 0.007812) # Unit = deg
    return data

# ECCAI4
def PGN_61521(msg, data):
    data['EngineCylinder4IndicatedMeanEffectivePressure_spn6495'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64292)  * 0.000122) - 1.0 # Unit = MPa
    data['EngineCylinder4AverageStartofCombustionTiming_spn6496'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64131)  * 0.007812) - 250.0 # Unit = deg
    data['EngineCylinder4AverageCenterofCombustionTiming_spn6497'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64131)  * 0.007812) - 250.0 # Unit = deg
    data['EngineCylinder4AverageCombustionDuration_spn6498'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64259)  * 0.007812) # Unit = deg
    return data

# ECCAI5
def PGN_61522(msg, data):
    data['EngineCylinder5IndicatedMeanEffectivePressure_spn6499'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64292)  * 0.000122) - 1.0 # Unit = MPa
    data['EngineCylinder5AverageStartofCombustionTiming_spn6500'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64131)  * 0.007812) - 250.0 # Unit = deg
    data['EngineCylinder5AverageCenterofCombustionTiming_spn6501'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64131)  * 0.007812) - 250.0 # Unit = deg
    data['EngineCylinder5AverageCombustionDuration_spn6502'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64259)  * 0.007812) # Unit = deg
    return data

# ECCAI6
def PGN_61523(msg, data):
    data['EngineCylinder6IndicatedMeanEffectivePressure_spn6503'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64292)  * 0.000122) - 1.0 # Unit = MPa
    data['EngineCylinder6AverageStartofCombustionTiming_spn6504'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64131)  * 0.007812) - 250.0 # Unit = deg
    data['EngineCylinder6AverageCenterofCombustionTiming_spn6505'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64131)  * 0.007812) - 250.0 # Unit = deg
    data['EngineCylinder6AverageCombustionDuration_spn6506'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64259)  * 0.007812) # Unit = deg
    return data

# ECCAI7
def PGN_61524(msg, data):
    data['EngineCylinder7IndicatedMeanEffectivePressure_spn6507'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64292)  * 0.000122) - 1.0 # Unit = MPa
    data['EngineCylinder7AverageStartofCombustionTiming_spn6508'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64131)  * 0.007812) - 250.0 # Unit = deg
    data['EngineCylinder7AverageCenterofCombustionTiming_spn6509'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64131)  * 0.007812) - 250.0 # Unit = deg
    data['EngineCylinder7AverageCombustionDuration_spn6510'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64259)  * 0.007812) # Unit = deg
    return data

# ECCAI8
def PGN_61525(msg, data):
    data['EngineCylinder8IndicatedMeanEffectivePressure_spn6511'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64292)  * 0.000122) - 1.0 # Unit = MPa
    data['EngineCylinder8AverageStartofCombustionTiming_spn6512'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64131)  * 0.007812) - 250.0 # Unit = deg
    data['EngineCylinder8AverageCenterofCombustionTiming_spn6513'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64131)  * 0.007812) - 250.0 # Unit = deg
    data['EngineCylinder8AverageCombustionDuration_spn6514'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64259)  * 0.007812) # Unit = deg
    return data

# ECCAI9
def PGN_61526(msg, data):
    data['EngineCylinder9IndicatedMeanEffectivePressure_spn6515'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64292)  * 0.000122) - 1.0 # Unit = MPa
    data['EngineCylinder9AverageStartofCombustionTiming_spn6516'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64131)  * 0.007812) - 250.0 # Unit = deg
    data['EngineCylinder9AverageCenterofCombustionTiming_spn6517'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64131)  * 0.007812) - 250.0 # Unit = deg
    data['EngineCylinder9AverageCombustionDuration_spn6518'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64259)  * 0.007812) # Unit = deg
    return data

# ECCAI10
def PGN_61527(msg, data):
    data['EngineCylinder10IndicatedMeanEffectivePressure_spn6519'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64292)  * 0.000122) - 1.0 # Unit = MPa
    data['EngineCylinder10AverageStartofCombustionTiming_spn6520'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64131)  * 0.007812) - 250.0 # Unit = deg
    data['EngineCylinder10AverageCenterofCombustionTiming_spn6521'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64131)  * 0.007812) - 250.0 # Unit = deg
    data['EngineCylinder10AverageCombustionDuration_spn6522'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64259)  * 0.007812) # Unit = deg
    return data

# ECCAI11
def PGN_61528(msg, data):
    data['EngineCylinder11IndicatedMeanEffectivePressure_spn6523'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64292)  * 0.000122) - 1.0 # Unit = MPa
    data['EngineCylinder11AverageStartofCombustionTiming_spn6524'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64131)  * 0.007812) - 250.0 # Unit = deg
    data['EngineCylinder11AverageCenterofCombustionTiming_spn6525'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64131)  * 0.007812) - 250.0 # Unit = deg
    data['EngineCylinder11AverageCombustionDuration_spn6526'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64259)  * 0.007812) # Unit = deg
    return data

# ECCAI12
def PGN_61529(msg, data):
    data['EngineCylinder12IndicatedMeanEffectivePressure_spn6527'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64292)  * 0.000122) - 1.0 # Unit = MPa
    data['EngineCylinder12AverageStartofCombustionTiming_spn6528'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64131)  * 0.007812) - 250.0 # Unit = deg
    data['EngineCylinder12AverageCenterofCombustionTiming_spn6529'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64131)  * 0.007812) - 250.0 # Unit = deg
    data['EngineCylinder12AverageCombustionDuration_spn6530'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64259)  * 0.007812) # Unit = deg
    return data

# ECCAI13
def PGN_61530(msg, data):
    data['EngineCylinder13IndicatedMeanEffectivePressure_spn6531'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64292)  * 0.000122) - 1.0 # Unit = MPa
    data['EngineCylinder13AverageStartofCombustionTiming_spn6532'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64131)  * 0.007812) - 250.0 # Unit = deg
    data['EngineCylinder13AverageCenterofCombustionTiming_spn6533'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64131)  * 0.007812) - 250.0 # Unit = deg
    data['EngineCylinder13AverageCombustionDuration_spn6534'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64259)  * 0.007812) # Unit = deg
    return data

# ECCAI14
def PGN_61531(msg, data):
    data['EngineCylinder14IndicatedMeanEffectivePressure_spn6535'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64292)  * 0.000122) - 1.0 # Unit = MPa
    data['EngineCylinder14AverageStartofCombustionTiming_spn6536'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64131)  * 0.007812) - 250.0 # Unit = deg
    data['EngineCylinder14AverageCenterofCombustionTiming_spn6537'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64131)  * 0.007812) - 250.0 # Unit = deg
    data['EngineCylinder14AverageCombustionDuration_spn6538'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64259)  * 0.007812) # Unit = deg
    return data

# ECCAI15
def PGN_61532(msg, data):
    data['EngineCylinder15IndicatedMeanEffectivePressure_spn6539'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64292)  * 0.000122) - 1.0 # Unit = MPa
    data['EngineCylinder15AverageStartofCombustionTiming_spn6540'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64131)  * 0.007812) - 250.0 # Unit = deg
    data['EngineCylinder15AverageCenterofCombustionTiming_spn6541'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64131)  * 0.007812) - 250.0 # Unit = deg
    data['EngineCylinder15AverageCombustionDuration_spn6542'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64259)  * 0.007812) # Unit = deg
    return data

# ECCAI16
def PGN_61533(msg, data):
    data['EngineCylinder16IndicatedMeanEffectivePressure_spn6543'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64292)  * 0.000122) - 1.0 # Unit = MPa
    data['EngineCylinder16AverageStartofCombustionTiming_spn6544'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64131)  * 0.007812) - 250.0 # Unit = deg
    data['EngineCylinder16AverageCenterofCombustionTiming_spn6545'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64131)  * 0.007812) - 250.0 # Unit = deg
    data['EngineCylinder16AverageCombustionDuration_spn6546'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64259)  * 0.007812) # Unit = deg
    return data

# ECCAI17
def PGN_61534(msg, data):
    data['EngineCylinder17IndicatedMeanEffectivePressure_spn6547'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64292)  * 0.000122) - 1.0 # Unit = MPa
    data['EngineCylinder17AverageStartofCombustionTiming_spn6548'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64131)  * 0.007812) - 250.0 # Unit = deg
    data['EngineCylinder17AverageCenterofCombustionTiming_spn6549'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64131)  * 0.007812) - 250.0 # Unit = deg
    data['EngineCylinder17AverageCombustionDuration_spn6550'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64259)  * 0.007812) # Unit = deg
    return data

# ECCAI18
def PGN_61535(msg, data):
    data['EngineCylinder18IndicatedMeanEffectivePressure_spn6551'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64292)  * 0.000122) - 1.0 # Unit = MPa
    data['EngineCylinder18AverageStartofCombustionTiming_spn6552'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64131)  * 0.007812) - 250.0 # Unit = deg
    data['EngineCylinder18AverageCenterofCombustionTiming_spn6553'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64131)  * 0.007812) - 250.0 # Unit = deg
    data['EngineCylinder18AverageCombustionDuration_spn6554'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64259)  * 0.007812) # Unit = deg
    return data

# ECCAI19
def PGN_61536(msg, data):
    data['EngineCylinder19IndicatedMeanEffectivePressure_spn6555'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64292)  * 0.000122) - 1.0 # Unit = MPa
    data['EngineCylinder19AverageStartofCombustionTiming_spn6556'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64131)  * 0.007812) - 250.0 # Unit = deg
    data['EngineCylinder19AverageCenterofCombustionTiming_spn6557'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64131)  * 0.007812) - 250.0 # Unit = deg
    data['EngineCylinder19AverageCombustionDuration_spn6558'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64259)  * 0.007812) # Unit = deg
    return data

# ECCAI20
def PGN_61537(msg, data):
    data['EngineCylinder20IndicatedMeanEffectivePressure_spn6559'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64292)  * 0.000122) - 1.0 # Unit = MPa
    data['EngineCylinder20AverageStartofCombustionTiming_spn6560'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64131)  * 0.007812) - 250.0 # Unit = deg
    data['EngineCylinder20AverageCenterofCombustionTiming_spn6561'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64131)  * 0.007812) - 250.0 # Unit = deg
    data['EngineCylinder20AverageCombustionDuration_spn6562'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64259)  * 0.007812) # Unit = deg
    return data

# ETC12
def PGN_61538(msg, data):
    data['TransmissionHydrostaticLoop1Pressure_spn6583'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 1.0) # Unit = kPa
    data['TransmissionHydrostaticLoop2Pressure_spn6584'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 1.0) # Unit = kPa
    data['TransmissionDirectionalOutputShaftSpeed_spn6585'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 1.0) - 32127.0 # Unit = rpm
    data['TransmissionIntermediateShaftSpeed_spn160'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.125) # Unit = rpm
    return data

# GFI5
def PGN_61539(msg, data):
    data['EngineGaseousFuelValveNominalDurationCommand_spn6656'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 2.0) # Unit = Âµs
    data['EngineGaseousFuelValveNominalStartofActuationCommand_spn6657'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64259)  * 0.007812) - 400.0 # Unit = deg
    data['EnginePre-ChamberFuelValveNominalDurationCommand_spn9650'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 2.0) # Unit = Âµs
    data['EnginePre-ChamberFuelValveNominalStartofActuationCommand_spn9651'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64259)  * 0.007812) - 400.0 # Unit = deg
    return data

# EGFVDC1
def PGN_61540(msg, data):
    data['EngineGaseousFuelValve1DurationCommand_spn6658'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 2.0) # Unit = Âµs
    data['EngineGaseousFuelValve2DurationCommand_spn6659'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 2.0) # Unit = Âµs
    data['EngineGaseousFuelValve3DurationCommand_spn6660'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 2.0) # Unit = Âµs
    data['EngineGaseousFuelValve4DurationCommand_spn6661'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 2.0) # Unit = Âµs
    return data

# EGFVDC2
def PGN_61541(msg, data):
    data['EngineGaseousFuelValve5DurationCommand_spn6662'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 2.0) # Unit = Âµs
    data['EngineGaseousFuelValve6DurationCommand_spn6663'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 2.0) # Unit = Âµs
    data['EngineGaseousFuelValve7DurationCommand_spn6664'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 2.0) # Unit = Âµs
    data['EngineGaseousFuelValve8DurationCommand_spn6665'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 2.0) # Unit = Âµs
    return data

# EGFVDC3
def PGN_61542(msg, data):
    data['EngineGaseousFuelValve9DurationCommand_spn6666'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 2.0) # Unit = Âµs
    data['EngineGaseousFuelValve10DurationCommand_spn6667'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 2.0) # Unit = Âµs
    data['EngineGaseousFuelValve11DurationCommand_spn6668'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 2.0) # Unit = Âµs
    data['EngineGaseousFuelValve12DurationCommand_spn6669'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 2.0) # Unit = Âµs
    return data

# EGFVDC4
def PGN_61543(msg, data):
    data['EngineGaseousFuelValve13DurationCommand_spn6670'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 2.0) # Unit = Âµs
    data['EngineGaseousFuelValve14DurationCommand_spn6671'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 2.0) # Unit = Âµs
    data['EngineGaseousFuelValve15DurationCommand_spn6672'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 2.0) # Unit = Âµs
    data['EngineGaseousFuelValve16DurationCommand_spn6673'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 2.0) # Unit = Âµs
    return data

# EGFVDC5
def PGN_61544(msg, data):
    data['EngineGaseousFuelValve17DurationCommand_spn6674'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 2.0) # Unit = Âµs
    data['EngineGaseousFuelValve18DurationCommand_spn6675'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 2.0) # Unit = Âµs
    data['EngineGaseousFuelValve19DurationCommand_spn6676'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 2.0) # Unit = Âµs
    data['EngineGaseousFuelValve20DurationCommand_spn6677'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 2.0) # Unit = Âµs
    return data

# EGFVSOAC1
def PGN_61545(msg, data):
    data['EngineGaseousFuelValve1StartofActuationCommand_spn6678'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64259)  * 0.007812) - 400.0 # Unit = deg
    data['EngineGaseousFuelValve2StartofActuationCommand_spn6679'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64259)  * 0.007812) - 400.0 # Unit = deg
    data['EngineGaseousFuelValve3StartofActuationCommand_spn6680'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64259)  * 0.007812) - 400.0 # Unit = deg
    data['EngineGaseousFuelValve4StartofActuationCommand_spn6681'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64259)  * 0.007812) - 400.0 # Unit = deg
    return data

# EGFVSOAC2
def PGN_61546(msg, data):
    data['EngineGaseousFuelValve5StartofActuationCommand_spn6682'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64259)  * 0.007812) - 400.0 # Unit = deg
    data['EngineGaseousFuelValve6StartofActuationCommand_spn6683'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64259)  * 0.007812) - 400.0 # Unit = deg
    data['EngineGaseousFuelValve7StartofActuationCommand_spn6684'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64259)  * 0.007812) - 400.0 # Unit = deg
    data['EngineGaseousFuelValve8StartofActuationCommand_spn6685'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64259)  * 0.007812) - 400.0 # Unit = deg
    return data

# EGFVSOAC3
def PGN_61547(msg, data):
    data['EngineGaseousFuelValve9StartofActuationCommand_spn6686'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64259)  * 0.007812) - 400.0 # Unit = deg
    data['EngineGaseousFuelValve10StartofActuationCommand_spn6687'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64259)  * 0.007812) - 400.0 # Unit = deg
    data['EngineGaseousFuelValve11StartofActuationCommand_spn6688'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64259)  * 0.007812) - 400.0 # Unit = deg
    data['EngineGaseousFuelValve12StartofActuationCommand_spn6689'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64259)  * 0.007812) - 400.0 # Unit = deg
    return data

# EGFVSOAC4
def PGN_61548(msg, data):
    data['EngineGaseousFuelValve13StartofActuationCommand_spn6690'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64259)  * 0.007812) - 400.0 # Unit = deg
    data['EngineGaseousFuelValve14StartofActuationCommand_spn6691'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64259)  * 0.007812) - 400.0 # Unit = deg
    data['EngineGaseousFuelValve15StartofActuationCommand_spn6692'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64259)  * 0.007812) - 400.0 # Unit = deg
    data['EngineGaseousFuelValve16StartofActuationCommand_spn6693'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64259)  * 0.007812) - 400.0 # Unit = deg
    return data

# EGFVSOAC5
def PGN_61549(msg, data):
    data['EngineGaseousFuelValve17StartofActuationCommand_spn6694'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64259)  * 0.007812) - 400.0 # Unit = deg
    data['EngineGaseousFuelValve18StartofActuationCommand_spn6695'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64259)  * 0.007812) - 400.0 # Unit = deg
    data['EngineGaseousFuelValve19StartofActuationCommand_spn6696'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64259)  * 0.007812) - 400.0 # Unit = deg
    data['EngineGaseousFuelValve20StartofActuationCommand_spn6697'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64259)  * 0.007812) - 400.0 # Unit = deg
    return data

# FPAC
def PGN_61550(msg, data):
    data['EngineFuelInjectionPump1FuelControlValveCommand_spn6719'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    data['EngineFuelInjectionPump2FuelControlValveCommand_spn6720'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    return data

# HVESSD1
def PGN_61584(msg, data):
    data['HVESSAvailableDischargePower_spn5917'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) # Unit = kW
    data['HVESSAvailableChargePower_spn5918'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) # Unit = kW
    data['HVESSVoltageLevel_spn5919'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['HVESSCurrent_spn5920'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.05) - 1600.0 # Unit = A
    return data

# HVESSD2
def PGN_61585(msg, data):
    data['HVESSFastUpdateStateofCharge_spn5921'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.0015625) # Unit = %
    data['HVESSHighestCellVoltage_spn5922'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.001) # Unit = V
    data['HVESSLowestCellVoltage_spn5923'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.001) # Unit = V
    data['HVESSCellVoltageDifferentialStatus_spn5924'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    return data

# HVESSD3
def PGN_61586(msg, data):
    data['HVESSHighestCellTemperature_spn8075'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['HVESSLowestCellTemperature_spn8076'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['HVESSAverageCellTemperature_spn8077'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['HVESSCellTemperatureDifferentialStatus_spn8078'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    return data

# HVESSD4
def PGN_61587(msg, data):
    data['HVESSDischargeCapacity_spn8079'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.01) # Unit = Ah
    data['HVESSChargeCapacity_spn8080'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.01) # Unit = Ah
    data['HVESSCellBalancingCount_spn8081'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 1.0) # Unit = count
    return data

# HVESSD5
def PGN_61588(msg, data):
    data['HVESSDischargeCurrentLimit_spn8082'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) - 1600.0 # Unit = A
    data['HVESSChargeCurrentLimit_spn8083'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) - 1600.0 # Unit = A
    data['HVESSMinimumCellStateofCharge_spn8084'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.0015625) # Unit = %
    data['HVESSMaximumCellStateofCharge_spn8085'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.0015625) # Unit = %
    return data

# HVESSD6
def PGN_61589(msg, data):
    data['HVESSBusVoltage_spn8086'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['HVESSIgnitionVoltage_spn8087'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    data['HVESSIntakeCoolantTemperature_spn8088'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['HVESSOutletCoolantTemperature_spn8089'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['HVESSElectronicsTemperature_spn8204'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['HVESSTemperature_spn9119'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    return data

# HVESSS1
def PGN_61590(msg, data):
    data['HVESSHigh-VoltageBus(Positive)ContactorState_spn8091'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESSHigh-VoltageBus(Negative)ContactorState_spn8092'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESSHigh-VoltageBusDisconnectForewarning_spn8093'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['HVESSHigh-VoltageBusPre-ChargeRelayState_spn8094'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESSCenterofPackContactorState_spn8095'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESSHigh-VoltageBusActiveIsolationTestStatus_spn8096'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['HVESSHigh-VoltageBusPassiveIsolationTestStatus_spn8097'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['HVESSHVILStatus_spn8098'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HVESSInertiaSwitchStatus_spn8099'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['HVESSStateofChargeStatus_spn8100'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['HVESSCellBalanceStatus_spn8101'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HVESSCellBalancingActive_spn8102'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['HVESSInternalChargerStatus_spn8207'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESSStatus1Counter_spn13013'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['HVESSHigh-VoltageBusConnectionStatus_spn8413'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['HVESSOperationalStatus_spn8414'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['HVESSNumberofHVESPsReady_spn12905'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 1.0) # Unit = count
    data['HVESSStatus1CRC_spn13014'] = ( enforceMaxV(( (int(msg[14:16], 16))), 255)  * 1.0) # Unit = count
    return data

# HVESSD7
def PGN_61600(msg, data):
    data['HVESSDischargeEnergyCapacity_spn8205'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 )), 16449535)  * 0.001) # Unit = kWh
    data['HVESSChargeEnergyCapacity_spn8206'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 ) + ((int(msg[10:12], 16)) << 16 )), 16449535)  * 0.001) # Unit = kWh
    data['HVESSMaximumChargeVoltageLimit_spn8090'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    return data

# DCAC_AI1_S2
def PGN_61640(msg, data):
    data['DC/ACAccessoryInverter1DCSidePower_spn8889'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.0625) # Unit = kW
    data['DC/ACAccessoryInverter1DCSideVoltage_spn8890'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['DC/ACAccessoryInverter1DCSideCurrent_spn8891'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.0625) # Unit = A
    data['DC/ACAccessoryInverter1DCSideNegativetoChassisGroundVoltage_spn9582'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    return data

# DCAC_AI1_V
def PGN_61641(msg, data):
    data['DC/ACAccessoryInverter1IgnitionVoltage_spn9209'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['DC/ACAccessoryInverter1UnswitchedSLIVoltage_spn9210'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    return data

# DCAC_AI1_FDBK2
def PGN_61642(msg, data):
    data['DC/ACAccessoryInverter1PowerLimitedduetoDCSideCurrent_spn9211'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['DC/ACAccessoryInverter1PowerLimitedduetoACSideRMSCurrent_spn9212'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['DC/ACAccessoryInverter1PowerLimitedduetoDCSideVoltageMinimum_spn9213'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['DC/ACAccessoryInverter1FrequencyCommandbelowMinimum_spn9214'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['DC/ACAccessoryInverter1FrequencyCommandexceedsMaximum_spn9215'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['DC/ACAccessoryInverter1PowerLimitedduetoControllerTemperature_spn9216'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['DC/ACAccessoryInverter1PowerLimitedduetoElectronicFilterTemperature_spn9217'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['DC/ACAccessoryInverter1PowerLimitedduetoPowerElectronicsTemperature_spn9218'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['DC/ACAccessoryInverter1PowerLimitedduetoRateofChangeLimit_spn9219'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['DC/ACAccessoryInverter1PowerLimitedduetoUndefinedReason_spn9220'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    return data

# DCAC_AI2_S2
def PGN_61643(msg, data):
    data['DC/ACAccessoryInverter2DCSidePower_spn9236'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.0625) # Unit = kW
    data['DC/ACAccessoryInverter2DCSideVoltage_spn9237'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['DC/ACAccessoryInverter2DCSideCurrent_spn9238'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.0625) # Unit = A
    data['DC/ACAccessoryInverter2DCSideNegativetoChassisGroundVoltage_spn9583'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    return data

# DCAC_AI2_V
def PGN_61644(msg, data):
    data['DC/ACAccessoryInverter2IgnitionVoltage_spn9239'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['DC/ACAccessoryInverter2UnswitchedSLIVoltage_spn9240'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    return data

# DCAC_AI2_FDBK2
def PGN_61645(msg, data):
    data['DC/ACAccessoryInverter2PowerLimitedduetoDCSideCurrent_spn9241'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['DC/ACAccessoryInverter2PowerLimitedduetoACSideRMSCurrent_spn9242'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['DC/ACAccessoryInverter2PowerLimitedduetoDCSideVoltageMinimum_spn9243'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['DC/ACAccessoryInverter2FrequencyCommandbelowMinimum_spn9244'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['DC/ACAccessoryInverter2FrequencyCommandexceedsMaximum_spn9245'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['DC/ACAccessoryInverter2PowerLimitedduetoControllerTemperature_spn9246'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['DC/ACAccessoryInverter2PowerLimitedduetoElectronicFilterTemperature_spn9247'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['DC/ACAccessoryInverter2PowerLimitedduetoPowerElectronicsTemperature_spn9248'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['DC/ACAccessoryInverter2PowerLimitedduetoRateofChangeLimit_spn9249'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['DC/ACAccessoryInverter2PowerLimitedduetoUndefinedReason_spn9250'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    return data

# ECCR
def PGN_61648(msg, data):
    data['NumberofEngineCylinderstoExcludefromCombustion_spn6991'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) # Unit = count
    data['EngineCylinder1ExcludefromCombustionRequest_spn6992'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EngineCylinder2ExcludefromCombustionRequest_spn6993'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['EngineCylinder3ExcludefromCombustionRequest_spn6994'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['EngineCylinder4ExcludefromCombustionRequest_spn6995'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['EngineCylinder5ExcludefromCombustionRequest_spn6996'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EngineCylinder6ExcludefromCombustionRequest_spn6997'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['EngineCylinder7ExcludefromCombustionRequest_spn6998'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['EngineCylinder8ExcludefromCombustionRequest_spn6999'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['EngineCylinder9ExcludefromCombustionRequest_spn7000'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EngineCylinder10ExcludefromCombustionRequest_spn7001'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['EngineCylinder11ExcludefromCombustionRequest_spn7002'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['EngineCylinder12ExcludefromCombustionRequest_spn7003'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['EngineCylinder13ExcludefromCombustionRequest_spn7004'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EngineCylinder14ExcludefromCombustionRequest_spn7005'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['EngineCylinder15ExcludefromCombustionRequest_spn7006'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['EngineCylinder16ExcludefromCombustionRequest_spn7007'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['EngineCylinder17ExcludefromCombustionRequest_spn7008'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EngineCylinder18ExcludefromCombustionRequest_spn7009'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['EngineCylinder19ExcludefromCombustionRequest_spn7010'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['EngineCylinder20ExcludefromCombustionRequest_spn7011'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['EngineCylinder21ExcludefromCombustionRequest_spn7012'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EngineCylinder22ExcludefromCombustionRequest_spn7013'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['EngineCylinder23ExcludefromCombustionRequest_spn7014'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['EngineCylinder24ExcludefromCombustionRequest_spn7015'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# ECBA1
def PGN_61649(msg, data):
    data['EngineCylinderHeadBypassActuator1PreliminaryFMI_spn7088'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['EngineCylinderHeadBypassActuator1TemperatureStatus_spn7089'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11100000) >> 5)), 7)  * 1.0) # Unit = bit
    data['EngineCylinderHeadBypassActuator1Temperature_spn7090'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['EngineCylinderHeadBypassActuator1DesiredPosition_spn7091'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 0.4) # Unit = %
    data['EngineCylinderHeadBypassActuator1Position_spn7092'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 0.4) # Unit = %
    data['EngineCylinderHeadBypassActuator1OperationStatus_spn7093'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    return data

# EEC18
def PGN_61650(msg, data):
    data['EngineCylinderHeadBypassActuator1Command_spn7094'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    data['EngineIntakeAirSourceValve_spn6330'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EngineExhaustGasRestrictionValvePosition_spn8151'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    return data

# PCC1
def PGN_61651(msg, data):
    data['PredictiveCruiseControlSetSpeedOffset_spn7316'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64259)  * 0.003906) - 125.0 # Unit = km/h
    data['PredictiveCruiseControlState_spn7317'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['VehicleSpeedControlOverrideRequest_spn7429'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['PredictiveCruiseControlEventinRange_spn7431'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['RoadwayPresentGrade_spn7432'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 0.125) - 16.0 # Unit = %
    data['RoadwayNextGrade_spn7433'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.125) - 16.0 # Unit = %
    data['PredictiveCruiseControlSpeedEventIndicator_spn7434'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['VehicleSpeedControlOverrideEventIndicator_spn7435'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['PredictiveCruiseControlDrivelineDisengageInhibitRequest_spn7430'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['RoadwayNextGradeDistance_spn9199'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 25.0) # Unit = m
    return data

# DCAC_AI1_CMD
def PGN_61654(msg, data):
    data['DC/ACAccessoryInverter1DeviceMaximumFrequency_spn8328'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) # Unit = Hz
    data['DC/ACAccessoryInverter1DeviceMinimumFrequency_spn8329'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) # Unit = Hz
    data['DC/ACAccessoryInverter1DeviceRatedFrequency_spn8330'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) # Unit = Hz
    data['DC/ACAccessoryInverter1DeviceRatedRMSVoltage_spn8331'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 2.0) # Unit = V
    data['DC/ACAccessoryInverter1DeviceFrequencyRateofChangeLimit_spn8332'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 2.0) # Unit = Hz/s
    data['DC/ACAccessoryInverter1FrequencyCommand_spn8333'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 1.0) # Unit = Hz
    data['DC/ACAccessoryInverter1Device1Status_spn8334'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000111)), 7)  * 1.0) # Unit = bit
    data['DC/ACAccessoryInverter1Device2Status_spn8335'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00111000) >> 3)), 7)  * 1.0) # Unit = bit
    data['DC/ACAccessoryInverter1OperationalCommand_spn8336'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['DC/ACAccessoryInverter1ACSideMotorStartingRMSVoltageRequest_spn9528'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 2.0) # Unit = V
    return data

# DCAC_AI1_FDBK
def PGN_61655(msg, data):
    data['DC/ACAccessoryInverter1Frequency_spn8337'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) # Unit = Hz
    data['DC/ACAccessoryInverter1ACSideRMSVoltage_spn8338'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 2.0) # Unit = V
    data['DC/ACAccessoryInverter1ACSidePower_spn8339'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 0.1) # Unit = kW
    data['DC/ACAccessoryInverter1ACSideRMSCurrent_spn9200'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 0.03125) # Unit = A
    data['DC/ACAccessoryInverter1OperationalStatus_spn8340'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000111)), 7)  * 1.0) # Unit = bit
    data['DC/ACAccessoryInverter1LoadshedRequest_spn8341'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00011000) >> 3)), 3)  * 1.0) # Unit = bit
    data['DC/ACAccessoryInverter1HVILStatus_spn8851'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b01100000) >> 5)), 3)  * 1.0) # Unit = bit
    return data

# DCAC_AI2_CMD
def PGN_61658(msg, data):
    data['DC/ACAccessoryInverter2DeviceMaximumFrequency_spn8342'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) # Unit = Hz
    data['DC/ACAccessoryInverter2DeviceMinimumFrequency_spn8343'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) # Unit = Hz
    data['DC/ACAccessoryInverter2DeviceRatedFrequency_spn8344'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) # Unit = Hz
    data['DC/ACAccessoryInverter2DeviceRatedRMSVoltage_spn8345'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 2.0) # Unit = V
    data['DC/ACAccessoryInverter2DeviceFrequencyRateofChangeLimit_spn8346'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 2.0) # Unit = Hz/s
    data['DC/ACAccessoryInverter2FrequencyCommand_spn8347'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 1.0) # Unit = Hz
    data['DC/ACAccessoryInverter2Device1Status_spn8348'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000111)), 7)  * 1.0) # Unit = bit
    data['DC/ACAccessoryInverter2Device2Status_spn8349'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00111000) >> 3)), 7)  * 1.0) # Unit = bit
    data['DC/ACAccessoryInverter2OperationalCommand_spn8350'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['DC/ACAccessoryInverter2ACSideMotorStartingRMSVoltageRequest_spn9534'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 2.0) # Unit = V
    return data

# DCAC_AI2_FDBK
def PGN_61659(msg, data):
    data['DC/ACAccessoryInverter2Frequency_spn8351'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) # Unit = Hz
    data['DC/ACAccessoryInverter2ACSideRMSVoltage_spn8352'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 2.0) # Unit = V
    data['DC/ACAccessoryInverter2ACSidePower_spn8353'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 0.1) # Unit = kW
    data['DC/ACAccessoryInverter2ACSideRMSCurrent_spn9201'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 0.03125) # Unit = A
    data['DC/ACAccessoryInverter2OperationalStatus_spn8354'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000111)), 7)  * 1.0) # Unit = bit
    data['DC/ACAccessoryInverter2LoadshedRequest_spn8355'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00011000) >> 3)), 3)  * 1.0) # Unit = bit
    data['DC/ACAccessoryInverter2HVILStatus_spn8852'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b01100000) >> 5)), 3)  * 1.0) # Unit = bit
    return data

# DCAC_AI3_CMD
def PGN_61662(msg, data):
    data['DC/ACAccessoryInverter3DeviceMaximumFrequency_spn8356'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) # Unit = Hz
    data['DC/ACAccessoryInverter3DeviceMinimumFrequency_spn8357'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) # Unit = Hz
    data['DC/ACAccessoryInverter3DeviceRatedFrequency_spn8358'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) # Unit = Hz
    data['DC/ACAccessoryInverter3DeviceRatedRMSVoltage_spn8359'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 2.0) # Unit = V
    data['DC/ACAccessoryInverter3DeviceFrequencyRateofChangeLimit_spn8360'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 2.0) # Unit = Hz/s
    data['DC/ACAccessoryInverter3FrequencyCommand_spn8361'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 1.0) # Unit = Hz
    data['DC/ACAccessoryInverter3Device1Status_spn8362'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000111)), 7)  * 1.0) # Unit = bit
    data['DC/ACAccessoryInverter3Device2Status_spn8363'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00111000) >> 3)), 7)  * 1.0) # Unit = bit
    data['DC/ACAccessoryInverter3OperationalCommand_spn8364'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['DC/ACAccessoryInverter3ACSideMotorStartingRMSVoltageRequest_spn9540'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 2.0) # Unit = V
    return data

# DCAC_AI3_FDBK
def PGN_61663(msg, data):
    data['DC/ACAccessoryInverter3Frequency_spn8365'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) # Unit = Hz
    data['DC/ACAccessoryInverter3ACSideRMSVoltage_spn8366'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 2.0) # Unit = V
    data['DC/ACAccessoryInverter3ACSidePower_spn8367'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 0.1) # Unit = kW
    data['DC/ACAccessoryInverter3ACSideRMSCurrent_spn9202'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 0.03125) # Unit = A
    data['DC/ACAccessoryInverter3OperationalStatus_spn8368'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000111)), 7)  * 1.0) # Unit = bit
    data['DC/ACAccessoryInverter3LoadshedRequest_spn8369'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00011000) >> 3)), 3)  * 1.0) # Unit = bit
    data['DC/ACAccessoryInverter3HVILStatus_spn8853'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b01100000) >> 5)), 3)  * 1.0) # Unit = bit
    return data

# DCAC_AI4_CMD
def PGN_61666(msg, data):
    data['DC/ACAccessoryInverter4DeviceMaximumFrequency_spn8370'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) # Unit = Hz
    data['DC/ACAccessoryInverter4DeviceMinimumFrequency_spn8371'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) # Unit = Hz
    data['DC/ACAccessoryInverter4DeviceRatedFrequency_spn8372'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) # Unit = Hz
    data['DC/ACAccessoryInverter4DeviceRatedRMSVoltage_spn8373'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 2.0) # Unit = V
    data['DC/ACAccessoryInverter4DeviceFrequencyRateofChangeLimit_spn8374'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 2.0) # Unit = Hz/s
    data['DC/ACAccessoryInverter4FrequencyCommand_spn8375'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 1.0) # Unit = Hz
    data['DC/ACAccessoryInverter4Device1Status_spn8376'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000111)), 7)  * 1.0) # Unit = bit
    data['DC/ACAccessoryInverter4Device2Status_spn8377'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00111000) >> 3)), 7)  * 1.0) # Unit = bit
    data['DC/ACAccessoryInverter4OperationalCommand_spn8378'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['DC/ACAccessoryInverter4ACSideMotorStartingRMSVoltageRequest_spn9546'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 2.0) # Unit = V
    return data

# DCAC_AI4_FDBK
def PGN_61667(msg, data):
    data['DC/ACAccessoryInverter4Frequency_spn8379'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) # Unit = Hz
    data['DC/ACAccessoryInverter4ACSideRMSVoltage_spn8380'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 2.0) # Unit = V
    data['DC/ACAccessoryInverter4ACSidePower_spn8381'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 0.1) # Unit = kW
    data['DC/ACAccessoryInverter4ACSideRMSCurrent_spn9203'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 0.03125) # Unit = A
    data['DC/ACAccessoryInverter4OperationalStatus_spn8382'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000111)), 7)  * 1.0) # Unit = bit
    data['DC/ACAccessoryInverter4LoadshedRequest_spn8383'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00011000) >> 3)), 3)  * 1.0) # Unit = bit
    data['DC/ACAccessoryInverter4HVILStatus_spn8854'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b01100000) >> 5)), 3)  * 1.0) # Unit = bit
    return data

# ITO1
def PGN_61669(msg, data):
    data['EngineCylinder1IgnitionTimingOffset_spn7356'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 0.1) - 12.5 # Unit = deg
    data['EngineCylinder2IgnitionTimingOffset_spn7357'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 0.1) - 12.5 # Unit = deg
    data['EngineCylinder3IgnitionTimingOffset_spn7358'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 0.1) - 12.5 # Unit = deg
    data['EngineCylinder4IgnitionTimingOffset_spn7359'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 0.1) - 12.5 # Unit = deg
    data['EngineCylinder5IgnitionTimingOffset_spn7360'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.1) - 12.5 # Unit = deg
    data['EngineCylinder6IgnitionTimingOffset_spn7361'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 0.1) - 12.5 # Unit = deg
    data['EngineCylinder7IgnitionTimingOffset_spn7362'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 0.1) - 12.5 # Unit = deg
    data['EngineCylinder8IgnitionTimingOffset_spn7363'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 0.1) - 12.5 # Unit = deg
    return data

# ITO2
def PGN_61670(msg, data):
    data['EngineCylinder9IgnitionTimingOffset_spn7364'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 0.1) - 12.5 # Unit = deg
    data['EngineCylinder10IgnitionTimingOffset_spn7365'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 0.1) - 12.5 # Unit = deg
    data['EngineCylinder11IgnitionTimingOffset_spn7366'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 0.1) - 12.5 # Unit = deg
    data['EngineCylinder12IgnitionTimingOffset_spn7367'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 0.1) - 12.5 # Unit = deg
    data['EngineCylinder13IgnitionTimingOffset_spn7368'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.1) - 12.5 # Unit = deg
    data['EngineCylinder14IgnitionTimingOffset_spn7369'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 0.1) - 12.5 # Unit = deg
    data['EngineCylinder15IgnitionTimingOffset_spn7370'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 0.1) - 12.5 # Unit = deg
    data['EngineCylinder16IgnitionTimingOffset_spn7371'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 0.1) - 12.5 # Unit = deg
    return data

# ITO3
def PGN_61671(msg, data):
    data['EngineCylinder17IgnitionTimingOffset_spn7372'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 0.1) - 12.5 # Unit = deg
    data['EngineCylinder18IgnitionTimingOffset_spn7373'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 0.1) - 12.5 # Unit = deg
    data['EngineCylinder19IgnitionTimingOffset_spn7374'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 0.1) - 12.5 # Unit = deg
    data['EngineCylinder20IgnitionTimingOffset_spn7375'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 0.1) - 12.5 # Unit = deg
    data['EngineCylinder21IgnitionTimingOffset_spn7376'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.1) - 12.5 # Unit = deg
    data['EngineCylinder22IgnitionTimingOffset_spn7377'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 0.1) - 12.5 # Unit = deg
    data['EngineCylinder23IgnitionTimingOffset_spn7378'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 0.1) - 12.5 # Unit = deg
    data['EngineCylinder24IgnitionTimingOffset_spn7379'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 0.1) - 12.5 # Unit = deg
    return data

# TFAC2
def PGN_61672(msg, data):
    data['EngineFuelActuator3ControlCommand_spn7593'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    data['EngineFuelActuator4ControlCommand_spn7594'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    return data

# AT1IG3
def PGN_61673(msg, data):
    data['EngineExhaust1NOx2_spn7649'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) - 200.0 # Unit = ppm
    data['Aftertreatment1IntakePercentOxygen2_spn7650'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.000514) - 12.0 # Unit = %
    data['Aftertreatment1IntakeGasSensor2PowerInRange_spn7651'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment1IntakeGasSensor2atTemperature_spn7652'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['EngineExhaust1NOx2ReadingStable_spn7653'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment1IntakeWide-RangePercentOxygen2ReadingStable_spn7654'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment1IntakeGasSensor2HeaterPreliminaryFMI_spn7655'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['Aftertreatment1IntakeGasSensor2HeaterControl_spn7656'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b01100000) >> 5)), 3)  * 1.0) # Unit = bit
    data['EngineExhaust1NOxSensor2PreliminaryFMI_spn7657'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['EngineExhaust1NOxSensor2Self-diagnosisStatus_spn7658'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11100000) >> 5)), 7)  * 1.0) # Unit = bit
    data['Aftertreatment1IntakeOxygenSensor2PreliminaryFMI_spn7659'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    return data

# AT1OG3
def PGN_61674(msg, data):
    data['Aftertreatment1OutletNOx2_spn7660'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) - 200.0 # Unit = ppm
    data['Aftertreatment1OutletPercentOxygen2_spn7661'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.000514) - 12.0 # Unit = %
    data['Aftertreatment1OutletGasSensor2PowerInRange_spn7662'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment1OutletGasSensor2atTemperature_spn7663'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment1OutletNOx2ReadingStable_spn7664'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment1OutletWide-RangePercentOxygen2ReadingStable_spn7665'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment1OutletGasSensor2HeaterPreliminaryFMI_spn7666'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['Aftertreatment1OutletGasSensor2HeaterControl_spn7667'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b01100000) >> 5)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment1OutletNOxSensor2PreliminaryFMI_spn7668'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['Aftertreatment1OutletNOxSensor2Self-diagnosisStatus_spn7669'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11100000) >> 5)), 7)  * 1.0) # Unit = bit
    data['Aftertreatment1OutletOxygenSensor2PreliminaryFMI_spn7670'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    return data

# AT2IGS2
def PGN_61675(msg, data):
    data['EngineExhaust2NOx2_spn7671'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) - 200.0 # Unit = ppm
    data['Aftertreatment2IntakePercentOxygen2_spn7672'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.000514) - 12.0 # Unit = %
    data['Aftertreatment2IntakeGasSensor2PowerInRange_spn7673'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment2IntakeGasSensor2atTemperature_spn7674'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['EngineExhaust2NOx2ReadingStable_spn7675'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment2IntakeWide-RangePercentOxygen2ReadingStable_spn7676'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment2IntakeGasSensor2HeaterPreliminaryFMI_spn7677'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['Aftertreatment2IntakeGasSensor2HeaterControl_spn7678'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b01100000) >> 5)), 3)  * 1.0) # Unit = bit
    data['EngineExhaust2NOxSensor2PreliminaryFMI_spn7679'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['EngineExhaust2NOxSensor2Self-diagnosisStatus_spn7680'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11100000) >> 5)), 7)  * 1.0) # Unit = bit
    data['Aftertreatment2IntakeOxygenSensor2PreliminaryFMI_spn7681'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    return data

# AT2OGS2
def PGN_61676(msg, data):
    data['Aftertreatment2OutletNOx2_spn7682'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) - 200.0 # Unit = ppm
    data['Aftertreatment2OutletPercentOxygen2_spn7683'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.000514) - 12.0 # Unit = %
    data['Aftertreatment2OutletGasSensor2PowerInRange_spn7684'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment2OutletGasSensor2atTemperature_spn7685'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment2OutletNOx2ReadingStable_spn7686'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment2OutletWide-RangePercentOxygen2ReadingStable_spn7687'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment2OutletGasSensor2HeaterPreliminaryFMI_spn7688'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['Aftertreatment2OutletGasSensor2HeaterControl_spn7689'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b01100000) >> 5)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment2OutletNOxSensor2PreliminaryFMI_spn7690'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['Aftertreatment2OutletNOxSensor2Self-diagnosisStatus_spn7691'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11100000) >> 5)), 7)  * 1.0) # Unit = bit
    data['Aftertreatment2OutletOxygenSensor2PreliminaryFMI_spn7692'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    return data

# ENGSC
def PGN_61677(msg, data):
    data['EngineStartRequest_spn7745'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EngineStartConsent_spn7746'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00011100) >> 2)), 7)  * 1.0) # Unit = bit
    data['TransmissionShiftSelectorRequestedVehicleDirection_spn7788'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11100000) >> 5)), 7)  * 1.0) # Unit = bit
    data['EngineStartAbortRequest_spn7747'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EngineStarter1Feedback_spn7748'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00011100) >> 2)), 7)  * 1.0) # Unit = bit
    data['EngineStarter2Feedback_spn7749'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11100000) >> 5)), 7)  * 1.0) # Unit = bit
    data['EngineStartControlMessageCounter_spn7750'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['EngineStartControlChecksum_spn7751'] = ( enforceMaxV(( (int(msg[14:16], 16))), 255)  * 1.0) # Unit = count
    return data

# ENGSA
def PGN_61685(msg, data):
    data['EngineStartControlMessageRate_spn7752'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EngineStarterCommand_spn7753'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00011100) >> 2)), 7)  * 1.0) # Unit = bit
    data['EngineStartRequestLatchStatus_spn7754'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['OperatorEngineStartConsentSummary_spn7755'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['AutomaticEngineStartConsentSummary_spn7756'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['EngineStartArbitratorMessageCounter_spn7757'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['EngineStartArbitratorChecksum_spn7758'] = ( enforceMaxV(( (int(msg[14:16], 16))), 255)  * 1.0) # Unit = count
    return data

# EVC
def PGN_61689(msg, data):
    data['EngineValveControlModule1PreliminaryFMI_spn7770'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['EngineValveControlModule2PreliminaryFMI_spn7771'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['EngineValveControlModule3PreliminaryFMI_spn7772'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['EngineValveControlModule4PreliminaryFMI_spn7773'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['EngineValveControlModule5PreliminaryFMI_spn7774'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['EngineValveControlModule6PreliminaryFMI_spn7775'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['EngineValveControlModule7PreliminaryFMI_spn7776'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['EngineValveControlModule8PreliminaryFMI_spn7777'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    return data

# ETC13
def PGN_61690(msg, data):
    data['MaximumForwardTransmissionOutputShaftSpeed_spn7779'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.125) # Unit = rpm
    data['MaximumReverseTransmissionOutputShaftSpeed_spn7780'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.125) # Unit = rpm
    data['SourceAddressofActiveorPendingTransmissionRequestedGear_spn8613'] = ( enforceMaxV(( (int(msg[8:10], 16))), 255)  * 1.0) # Unit = SA
    data['TransmissionMode11Indicator_spn12939'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['TransmissionMode12Indicator_spn12940'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['TransmissionMode13Indicator_spn12941'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['TransmissionMode14Indicator_spn12942'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['TransmissionMode15Indicator_spn12943'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['TransmissionMode16Indicator_spn12944'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['TransmissionMode17Indicator_spn12945'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['TransmissionMode18Indicator_spn12946'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['TransmissionMode19Indicator_spn12947'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['TransmissionMode20Indicator_spn12948'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    return data

# A1SCRDSR3
def PGN_61691(msg, data):
    data['Aftertreatment1DieselExhaustFluidRequestedQuantityofIntegrator(HighResolution)_spn7783'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.001) # Unit = g
    data['Aftertreatment1DieselExhaustFluidDoserValve1Command_spn8442'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    return data

# A2SCRDSR3
def PGN_61692(msg, data):
    data['Aftertreatment2DieselExhaustFluidRequestedQuantityofIntegrator(HighResolution)_spn7784'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.001) # Unit = g
    return data

# A1SCRDSI4
def PGN_61693(msg, data):
    data['Aftertreatment1DieselExhaustFluidActualQuantityofIntegrator(HighResolution)_spn7786'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.001) # Unit = g
    return data

# A2SCRDSI4
def PGN_61694(msg, data):
    data['Aftertreatment2DieselExhaustFluidActualQuantityofIntegrator(HighResolution)_spn7787'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.001) # Unit = g
    return data

# GTRACE
def PGN_61699(msg, data):
    data['GeneratorTripkWHoursExport_spn7831'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 1.0) # Unit = kWh
    data['GeneratorTripkVArHoursExport_spn7832'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 ) + ((int(msg[12:14], 16)) << 16 ) + ((int(msg[14:16], 16)) << 24 )), 4211081215)  * 1.0) # Unit = kVArh
    return data

# ESSI2
def PGN_61700(msg, data):
    data['EngineSpeed4_spn7846'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.5) # Unit = rpm
    return data

# HPD
def PGN_61701(msg, data):
    data['HydraulicLinePressure_spn7939'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 1.0) # Unit = kPa
    data['MechanicalMovementAngle_spn7940'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64259)  * 0.007812) # Unit = deg
    return data

# WSP1
def PGN_61702(msg, data):
    data['WellStimulationPumpSuctionPressure_spn8154'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.1) - 3212.7 # Unit = kPa
    data['WellStimulationPumpDischargePressure_spn8155'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 5.0) # Unit = kPa
    return data

# WSP2
def PGN_61703(msg, data):
    data['WellStimulationPumpGearBoxOilPressure_spn8156'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    data['WellStimulationPumpGearBoxOilTemperature_spn8157'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['WellStimulationPumpSpeed_spn8158'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 0.125) # Unit = rpm
    data['WellStimulationPumpGearBoxOutletOilTemperature_spn12812'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    return data

# HVESSMS1
def PGN_61704(msg, data):
    data['HVESSModule1OperationalStatus_spn8214'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESSModule2OperationalStatus_spn8215'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESSModule3OperationalStatus_spn8216'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HVESSModule4OperationalStatus_spn8217'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['HVESSModule5OperationalStatus_spn8218'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESSModule6OperationalStatus_spn8219'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESSModule7OperationalStatus_spn8220'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HVESSModule8OperationalStatus_spn8221'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['HVESSModule9OperationalStatus_spn8222'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESSModule10OperationalStatus_spn8223'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESSModule11OperationalStatus_spn8224'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HVESSModule12OperationalStatus_spn8225'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['HVESSModule13OperationalStatus_spn8226'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESSModule14OperationalStatus_spn8227'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESSModule15OperationalStatus_spn8228'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HVESSModule16OperationalStatus_spn8229'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# HVESSTS1
def PGN_61705(msg, data):
    data['HVESSThermalManagementSystemSLIInputPower_spn8230'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.5) # Unit = W
    data['HVESSThermalManagementSystemHigh-VoltageInputPower_spn8231'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.5) # Unit = W
    data['HVESSThermalManagementSystemCompressorSpeed_spn8232'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 32.0) # Unit = rpm
    data['HVESSThermalManagementSystemRelativeHumidty_spn8233'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 0.4) # Unit = %
    data['HVESSThermalManagementSystemHeaterStatus_spn8234'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESSThermalManagementSystemHVILStatus_spn12813'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESSThermalManagementSystemMode_spn8235'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['HVESSThermalManagementSystemCoolantLevel_spn12897'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    return data

# HVESSD8
def PGN_61706(msg, data):
    data['HVESSHighestCellVoltageModuleNumber_spn8236'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) # Unit = count
    data['HVESSHighestCellVoltageCellNumber_spn8237'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) # Unit = count
    data['HVESSLowestCellVoltageModuleNumber_spn8238'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) # Unit = count
    data['HVESSLowestCellVoltageCellNumber_spn8239'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) # Unit = count
    data['HVESSAverageCellVoltage_spn8240'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.001) # Unit = V
    return data

# HVESSD9
def PGN_61707(msg, data):
    data['HVESSHighestCellTemperatureModuleNumber_spn8241'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) # Unit = count
    data['HVESSHighestCellTemperatureCellNumber_spn8242'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) # Unit = count
    data['HVESSLowestCellTemperatureModuleNumber_spn8243'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) # Unit = count
    data['HVESSLowestCellTemperatureCellNumber_spn8244'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) # Unit = count
    return data

# HVESSD10
def PGN_61708(msg, data):
    data['HVESSHighestCellStateofChargeModuleNumber_spn8245'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) # Unit = count
    data['HVESSHighestCellStateofChargeCellNumber_spn8246'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) # Unit = count
    data['HVESSLowestCellStateofChargeModuleNumber_spn8247'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) # Unit = count
    data['HVESSLowestCellStateofChargeCellNumber_spn8248'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) # Unit = count
    data['HVESSHigh-VoltageBusActiveIsolationTestResults_spn8431'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.1) # Unit = ohm/V
    data['HVESSHigh-VoltageBusPassiveIsolationTestResults_spn8432'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.1) # Unit = ohm/V
    return data

# GFI6
def PGN_61709(msg, data):
    data['EngineFuelValve2DifferentialPressure_spn6885'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    return data

# DTBI1
def PGN_61710(msg, data):
    data['DumpBodyRollAngle_spn8312'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64259)  * 0.007812) - 200.0 # Unit = deg
    data['DumpBodyRaiseAngle_spn8313'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64259)  * 0.007812) - 200.0 # Unit = deg
    data['DumpBodyRaisePositionRelativetoRecommendedMaximum_spn8314'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.005) - 150.0 # Unit = %
    data['DumpBodyEjectorBladePosition_spn8315'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 0.4) # Unit = %
    return data

# EOI2
def PGN_61711(msg, data):
    data['EngineSelf-InducedDerateLoad_spn8435'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.5) # Unit = kW
    data['EnginePowerDerateRequest_spn8436'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.5) # Unit = kW
    return data

# B2
def PGN_61712(msg, data):
    data['DemandedBrakeApplicationPressure_spn8484'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    data['BrakePedalSwitch2_spn603'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    return data

# GFP3
def PGN_61713(msg, data):
    data['EngineFuelValve1DifferentialPressure(HighResolution)_spn8494'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.0078125) - 100.0 # Unit = kPa
    data['EngineGaseousFuelSupplyFilterDifferentialPressure_spn12301'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.0078125) - 100.0 # Unit = kPa
    data['EngineGaseousFuelSupplyFilterIntakePressure_spn12302'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.5) # Unit = kPa
    return data

# DCDC1C
def PGN_61714(msg, data):
    data['DC/DC1OperationalCommand_spn8560'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['DC/DC1LowSideVoltageBuckSetpoint_spn8561'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    data['DC/DC1HighSideVoltageBoostSetpoint_spn8562'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['DC/DC1LowSideVoltageBuckDefaultSetpoint_spn9515'] = ( enforceMaxV(( (int(msg[10:12], 16)) + ((int(msg[12:14], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    return data

# DCDC1OS
def PGN_61715(msg, data):
    data['DC/DC1OperationalStatus_spn8569'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['DC/DC1HVILStatus_spn8570'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['DC/DC1LoadshedRequest_spn8571'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['DC/DC1PowerLimitduetoHighSideCurrent_spn8572'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['DC/DC1PowerLimitduetoLowSideCurrent_spn8573'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['DC/DC1PowerLimitduetoHighSideVoltageMinimum_spn8574'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['DC/DC1PowerLimitduetoHighSideVoltageMaximum_spn8575'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['DC/DC1PowerLimitduetoLowSideVoltageMinimum_spn8576'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['DC/DC1PowerLimitduetoLowSideVoltageMaximum_spn8577'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['DC/DC1PowerLimitduetoConverterTemperature_spn8578'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['DC/DC1PowerLimitduetoElectronicFilterTemperature_spn8579'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['DC/DC1PowerLimitduetoPowerElectronicsTemperature_spn8580'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['DC/DC1PowerLimitduetoSLIBatteryTerminalVoltage_spn8581'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['DC/DC1PowerLimitduetoSLIBatteryTerminalCurrent_spn8583'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['DC/DC1PowerLimitduetoSLIBatteryTerminalTemperature_spn8582'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['DC/DC1PowerLimitduetoUndefinedReason_spn8584'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    return data

# DCDC1VC
def PGN_61716(msg, data):
    data['DC/DC1LowSideVoltage_spn8585'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    data['DC/DC1LowSideCurrent_spn8586'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.1) - 3212.7 # Unit = A
    data['DC/DC1HighSideVoltage_spn8587'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['DC/DC1HighSideCurrent_spn8588'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.1) - 3212.7 # Unit = A
    return data

# DCDC1SBS
def PGN_61717(msg, data):
    data['DC/DC1SLIBatteryTerminalVoltage_spn8589'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    data['DC/DC1SLIBatteryTerminalCurrent_spn8590'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.1) - 3212.7 # Unit = A
    data['DC/DC1SLIBatteryTerminalTemperature_spn8591'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    return data

# WSP3
def PGN_61718(msg, data):
    data['WellStimulationPumpRodLoad_spn8648'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 5.0) # Unit = kN
    data['WellStimulationPumpCavitationStatus_spn8649'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000111)), 7)  * 1.0) # Unit = bit
    data['WellStimulationPumpFluidEndValveLeak_spn8651'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['WellStimulationPumpFlowRate_spn8650'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 0.5) # Unit = l/min
    data['WellStimulationPumpRatedRodLoadPercent_spn12811'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 0.5) # Unit = %
    return data

# DCDC1S2
def PGN_61719(msg, data):
    data['DC/DC1LowSidePower_spn8820'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) - 1600.0 # Unit = kW
    data['DC/DC1HighSidePower_spn8821'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) - 1600.0 # Unit = kW
    data['DC/DC1HighSideNegativetoChassisGroundVoltage_spn9587'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    return data

# DCDC2C
def PGN_61720(msg, data):
    data['DC/DC2OperationalCommand_spn8892'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['DC/DC2LowSideVoltageBuckSetpoint_spn8893'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    data['DC/DC2HighSideVoltageBoostSetpoint_spn8894'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['DC/DC2LowSideVoltageBuckDefaultSetpoint_spn9516'] = ( enforceMaxV(( (int(msg[10:12], 16)) + ((int(msg[12:14], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    return data

# DCDC2OS
def PGN_61721(msg, data):
    data['DC/DC2OperationalStatus_spn8895'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['DC/DC2HVILStatus_spn8896'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['DC/DC2LoadshedRequest_spn8897'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['DC/DC2PowerLimitduetoHighSideCurrent_spn8898'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['DC/DC2PowerLimitduetoLowSideCurrent_spn8899'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['DC/DC2PowerLimitduetoHighSideVoltageMinimum_spn8900'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['DC/DC2PowerLimitduetoHighSideVoltageMaximum_spn8901'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['DC/DC2PowerLimitduetoLowSideVoltageMinimum_spn8902'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['DC/DC2PowerLimitduetoLowSideVoltageMaximum_spn8903'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['DC/DC2PowerLimitduetoConverterTemperature_spn8904'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['DC/DC2PowerLimitduetoElectronicFilterTemperature_spn8905'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['DC/DC2PowerLimitduetoPowerElectronicsTemperature_spn8906'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['DC/DC2PowerLimitduetoSLIBatteryTerminalVoltage_spn8907'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['DC/DC2PowerLimitduetoSLIBatteryTerminalCurrent_spn8908'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['DC/DC2PowerLimitduetoSLIBatteryTerminalTemperature_spn8909'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['DC/DC2PowerLimitduetoUndefinedReason_spn8910'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    return data

# DCDC2VC
def PGN_61722(msg, data):
    data['DC/DC2LowSideVoltage_spn8911'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    data['DC/DC2LowSideCurrent_spn8912'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.1) - 3212.7 # Unit = A
    data['DC/DC2HighSideVoltage_spn8913'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['DC/DC2HighSideCurrent_spn8914'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.1) - 3212.7 # Unit = A
    return data

# DCDC2SBS
def PGN_61723(msg, data):
    data['DC/DC2SLIBatteryTerminalVoltage_spn8915'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    data['DC/DC2SLIBatteryTerminalCurrent_spn8916'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.1) - 3212.7 # Unit = A
    data['DC/DC2SLIBatteryTerminalTemperature_spn8917'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    return data

# DCDC2S2
def PGN_61724(msg, data):
    data['DC/DC2LowSidePower_spn8918'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) - 1600.0 # Unit = kW
    data['DC/DC2HighSidePower_spn8919'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) - 1600.0 # Unit = kW
    data['DC/DC2HighSideNegativetoChassisGroundVoltage_spn9588'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    return data

# DCDC3C
def PGN_61725(msg, data):
    data['DC/DC3OperationalCommand_spn8947'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['DC/DC3LowSideVoltageBuckSetpoint_spn8948'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    data['DC/DC3HighSideVoltageBoostSetpoint_spn8949'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['DC/DC3LowSideVoltageBuckDefaultSetpoint_spn9517'] = ( enforceMaxV(( (int(msg[10:12], 16)) + ((int(msg[12:14], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    return data

# DCDC3OS
def PGN_61726(msg, data):
    data['DC/DC3OperationalStatus_spn8950'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['DC/DC3HVILStatus_spn8951'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['DC/DC3LoadshedRequest_spn8952'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['DC/DC3PowerLimitduetoHighSideCurrent_spn8953'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['DC/DC3PowerLimitduetoLowSideCurrent_spn8954'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['DC/DC3PowerLimitduetoHighSideVoltageMinimum_spn8955'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['DC/DC3PowerLimitduetoHighSideVoltageMaximum_spn8956'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['DC/DC3PowerLimitduetoLowSideVoltageMinimum_spn8957'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['DC/DC3PowerLimitduetoLowSideVoltageMaximum_spn8958'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['DC/DC3PowerLimitduetoConverterTemperature_spn8959'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['DC/DC3PowerLimitduetoElectronicFilterTemperature_spn8960'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['DC/DC3PowerLimitduetoPowerElectronicsTemperature_spn8961'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['DC/DC3PowerLimitduetoSLIBatteryTerminalVoltage_spn8962'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['DC/DC3PowerLimitduetoSLIBatteryTerminalCurrent_spn8963'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['DC/DC3PowerLimitduetoSLIBatteryTerminalTemperature_spn8964'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['DC/DC3PowerLimitduetoUndefinedReason_spn8965'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    return data

# DCDC3VC
def PGN_61727(msg, data):
    data['DC/DC3LowSideVoltage_spn8966'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    data['DC/DC3LowSideCurrent_spn8967'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.1) - 3212.7 # Unit = A
    data['DC/DC3HighSideVoltage_spn8968'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['DC/DC3HighSideCurrent_spn8969'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.1) - 3212.7 # Unit = A
    return data

# DCDC3SBS
def PGN_61728(msg, data):
    data['DC/DC3SLIBatteryTerminalVoltage_spn8970'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    data['DC/DC3SLIBatteryTerminalCurrent_spn8971'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.1) - 3212.7 # Unit = A
    data['DC/DC3SLIBatteryTerminalTemperature_spn8972'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    return data

# DCDC3S2
def PGN_61729(msg, data):
    data['DC/DC3LowSidePower_spn8973'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) - 1600.0 # Unit = kW
    data['DC/DC3HighSidePower_spn8974'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) - 1600.0 # Unit = kW
    data['DC/DC3HighSideNegativetoChassisGroundVoltage_spn9589'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    return data

# DCDC4C
def PGN_61730(msg, data):
    data['DC/DC4OperationalCommand_spn9002'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['DC/DC4LowSideVoltageBuckSetpoint_spn9003'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    data['DC/DC4HighSideVoltageBoostSetpoint_spn9004'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['DC/DC4LowSideVoltageBuckDefaultSetpoint_spn9518'] = ( enforceMaxV(( (int(msg[10:12], 16)) + ((int(msg[12:14], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    return data

# DCDC4OS
def PGN_61731(msg, data):
    data['DC/DC4OperationalStatus_spn9005'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['DC/DC4HVILStatus_spn9006'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['DC/DC4LoadshedRequest_spn9007'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['DC/DC4PowerLimitduetoHighSideCurrent_spn9008'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['DC/DC4PowerLimitduetoLowSideCurrent_spn9009'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['DC/DC4PowerLimitduetoHighSideVoltageMinimum_spn9010'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['DC/DC4PowerLimitduetoHighSideVoltageMaximum_spn9011'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['DC/DC4PowerLimitduetoLowSideVoltageMinimum_spn9012'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['DC/DC4PowerLimitduetoLowSideVoltageMaximum_spn9013'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['DC/DC4PowerLimitduetoConverterTemperature_spn9014'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['DC/DC4PowerLimitduetoElectronicFilterTemperature_spn9015'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['DC/DC4PowerLimitduetoPowerElectronicsTemperature_spn9016'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['DC/DC4PowerLimitduetoSLIBatteryTerminalVoltage_spn9017'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['DC/DC4PowerLimitduetoSLIBatteryTerminalCurrent_spn9018'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['DC/DC4PowerLimitduetoSLIBatteryTerminalTemperature_spn9019'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['DC/DC4PowerLimitduetoUndefinedReason_spn9020'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    return data

# DCDC4VC
def PGN_61732(msg, data):
    data['DC/DC4LowSideVoltage_spn9021'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    data['DC/DC4LowSideCurrent_spn9022'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.1) - 3212.7 # Unit = A
    data['DC/DC4HighSideVoltage_spn9023'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['DC/DC4HighSideCurrent_spn9024'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.1) - 3212.7 # Unit = A
    return data

# DCDC4SBS
def PGN_61733(msg, data):
    data['DC/DC4SLIBatteryTerminalVoltage_spn9025'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    data['DC/DC4SLIBatteryTerminalCurrent_spn9026'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.1) - 3212.7 # Unit = A
    data['DC/DC4SLIBatteryTerminalTemperature_spn9027'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    return data

# DCDC4S2
def PGN_61734(msg, data):
    data['DC/DC4LowSidePower_spn9028'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) - 1600.0 # Unit = kW
    data['DC/DC4HighSidePower_spn9029'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) - 1600.0 # Unit = kW
    data['DC/DC4HighSideNegativetoChassisGroundVoltage_spn9590'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    return data

# SSI3
def PGN_61735(msg, data):
    data['GradeThresholdIndicator1_spn9181'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['GradeThresholdIndicator2_spn9182'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['GradeThresholdIndicator3_spn9183'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['GradeThresholdIndicator4_spn9184'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['GradeThresholdIndicator5_spn9185'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['GradeThresholdIndicator6_spn9186'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    return data

# DCAC_AI3_S2
def PGN_61736(msg, data):
    data['DC/ACAccessoryInverter3DCSidePower_spn9266'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.0625) # Unit = kW
    data['DC/ACAccessoryInverter3DCSideVoltage_spn9267'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['DC/ACAccessoryInverter3DCSideCurrent_spn9268'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.0625) # Unit = A
    data['DC/ACAccessoryInverter3DCSideNegativetoChassisGroundVoltage_spn9584'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    return data

# DCAC_AI3_V
def PGN_61737(msg, data):
    data['DC/ACAccessoryInverter3IgnitionVoltage_spn9269'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['DC/ACAccessoryInverter3UnswitchedSLIVoltage_spn9270'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    return data

# DCAC_AI3_FDBK2
def PGN_61738(msg, data):
    data['DC/ACAccessoryInverter3PowerLimitedduetoDCSideCurrent_spn9271'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['DC/ACAccessoryInverter3PowerLimitedduetoACSideRMSCurrent_spn9272'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['DC/ACAccessoryInverter3PowerLimitedduetoDCSideVoltageMinimum_spn9273'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['DC/ACAccessoryInverter3FrequencyCommandbelowMinimum_spn9274'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['DC/ACAccessoryInverter3FrequencyCommandexceedsMaximum_spn9275'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['DC/ACAccessoryInverter3PowerLimitedduetoControllerTemperature_spn9276'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['DC/ACAccessoryInverter3PowerLimitedduetoElectronicFilterTemperature_spn9277'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['DC/ACAccessoryInverter3PowerLimitedduetoPowerElectronicsTemperature_spn9278'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['DC/ACAccessoryInverter3PowerLimitedduetoRateofChangeLimit_spn9279'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['DC/ACAccessoryInverter3PowerLimitedduetoUndefinedReason_spn9280'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    return data

# DCAC_AI4_S2
def PGN_61739(msg, data):
    data['DC/ACAccessoryInverter4DCSidePower_spn9296'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.0625) # Unit = kW
    data['DC/ACAccessoryInverter4DCSideVoltage_spn9297'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['DC/ACAccessoryInverter4DCSideCurrent_spn9298'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.0625) # Unit = A
    data['DC/ACAccessoryInverter4DCSideNegativetoChassisGroundVoltage_spn9585'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    return data

# DCAC_AI4_V
def PGN_61740(msg, data):
    data['DC/ACAccessoryInverter4IgnitionVoltage_spn9299'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['DC/ACAccessoryInverter4UnswitchedSLIVoltage_spn9300'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    return data

# DCAC_AI4_FDBK2
def PGN_61741(msg, data):
    data['DC/ACAccessoryInverter4PowerLimitedduetoDCSideCurrent_spn9301'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['DC/ACAccessoryInverter4PowerLimitedduetoACSideRMSCurrent_spn9302'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['DC/ACAccessoryInverter4PowerLimitedduetoDCSideVoltageMinimum_spn9303'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['DC/ACAccessoryInverter4FrequencyCommandbelowMinimum_spn9304'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['DC/ACAccessoryInverter4FrequencyCommandexceedsMaximum_spn9305'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['DC/ACAccessoryInverter4PowerLimitedduetoControllerTemperature_spn9306'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['DC/ACAccessoryInverter4PowerLimitedduetoElectronicFilterTemperature_spn9307'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['DC/ACAccessoryInverter4PowerLimitedduetoPowerElectronicsTemperature_spn9308'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['DC/ACAccessoryInverter4PowerLimitedduetoRateofChangeLimit_spn9309'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['DC/ACAccessoryInverter4PowerLimitedduetoUndefinedReason_spn9310'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    return data

# DCAC_AI5_CMD
def PGN_61742(msg, data):
    data['DC/ACAccessoryInverter5DeviceMaximumFrequency_spn9321'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) # Unit = Hz
    data['DC/ACAccessoryInverter5DeviceMinimumFrequency_spn9322'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) # Unit = Hz
    data['DC/ACAccessoryInverter5DeviceRatedFrequency_spn9323'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) # Unit = Hz
    data['DC/ACAccessoryInverter5DeviceRatedRMSVoltage_spn9324'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 2.0) # Unit = V
    data['DC/ACAccessoryInverter5DeviceFrequencyRateofChangeLimit_spn9325'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 2.0) # Unit = Hz/s
    data['DC/ACAccessoryInverter5FrequencyCommand_spn9326'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 1.0) # Unit = Hz
    data['DC/ACAccessoryInverter5Device1Status_spn9327'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000111)), 7)  * 1.0) # Unit = bit
    data['DC/ACAccessoryInverter5Device2Status_spn9328'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00111000) >> 3)), 7)  * 1.0) # Unit = bit
    data['DC/ACAccessoryInverter5OperationalCommand_spn9329'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['DC/ACAccessoryInverter5ACSideMotorStartingRMSVoltageRequest_spn9552'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 2.0) # Unit = V
    return data

# DCAC_AI5_FDBK
def PGN_61743(msg, data):
    data['DC/ACAccessoryInverter5Frequency_spn9330'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) # Unit = Hz
    data['DC/ACAccessoryInverter5ACSideRMSVoltage_spn9331'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 2.0) # Unit = V
    data['DC/ACAccessoryInverter5ACSidePower_spn9332'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 0.1) # Unit = kW
    data['DC/ACAccessoryInverter5ACSideRMSCurrent_spn9333'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 0.03125) # Unit = A
    data['DC/ACAccessoryInverter5OperationalStatus_spn9334'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000111)), 7)  * 1.0) # Unit = bit
    data['DC/ACAccessoryInverter5LoadshedRequest_spn9335'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00011000) >> 3)), 3)  * 1.0) # Unit = bit
    data['DC/ACAccessoryInverter5HVILStatus_spn9336'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b01100000) >> 5)), 3)  * 1.0) # Unit = bit
    return data

# DCAC_AI5_S2
def PGN_61744(msg, data):
    data['DC/ACAccessoryInverter5DCSidePower_spn9342'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.0625) # Unit = kW
    data['DC/ACAccessoryInverter5DCSideVoltage_spn9343'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['DC/ACAccessoryInverter5DCSideCurrent_spn9344'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.0625) # Unit = A
    data['DC/ACAccessoryInverter5DCSideNegativetoChassisGroundVoltage_spn9586'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    return data

# DCAC_AI5_V
def PGN_61745(msg, data):
    data['DC/ACAccessoryInverter5IgnitionVoltage_spn9345'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['DC/ACAccessoryInverter5UnswitchedSLIVoltage_spn9346'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    return data

# DCAC_AI5_FDBK2
def PGN_61746(msg, data):
    data['DC/ACAccessoryInverter5PowerLimitedduetoDCSideCurrent_spn9347'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['DC/ACAccessoryInverter5PowerLimitedduetoACSideRMSCurrent_spn9348'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['DC/ACAccessoryInverter5PowerLimitedduetoDCSideVoltageMinimum_spn9349'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['DC/ACAccessoryInverter5FrequencyCommandbelowMinimum_spn9350'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['DC/ACAccessoryInverter5FrequencyCommandexceedsMaximum_spn9351'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['DC/ACAccessoryInverter5PowerLimitedduetoControllerTemperature_spn9352'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['DC/ACAccessoryInverter5PowerLimitedduetoElectronicFilterTemperature_spn9353'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['DC/ACAccessoryInverter5PowerLimitedduetoPowerElectronicsTemperature_spn9354'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['DC/ACAccessoryInverter5PowerLimitedduetoRateofChangeLimit_spn9355'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['DC/ACAccessoryInverter5PowerLimitedduetoUndefinedReason_spn9356'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    return data

# EPCVDC1
def PGN_61747(msg, data):
    data['EnginePre-ChamberFuelValve1Duration_spn9591'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 2.0) # Unit = Âµs
    data['EnginePre-ChamberFuelValve2Duration_spn9592'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 2.0) # Unit = Âµs
    data['EnginePre-ChamberFuelValve3Duration_spn9593'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 2.0) # Unit = Âµs
    data['EnginePre-ChamberFuelValve4Duration_spn9594'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 2.0) # Unit = Âµs
    return data

# EPCVDC2
def PGN_61748(msg, data):
    data['EnginePre-ChamberFuelValve5Duration_spn9595'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 2.0) # Unit = Âµs
    data['EnginePre-ChamberFuelValve6Duration_spn9596'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 2.0) # Unit = Âµs
    data['EnginePre-ChamberFuelValve7Duration_spn9597'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 2.0) # Unit = Âµs
    data['EnginePre-ChamberFuelValve8Duration_spn9598'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 2.0) # Unit = Âµs
    return data

# EPCVDC3
def PGN_61749(msg, data):
    data['EnginePre-ChamberFuelValve9Duration_spn9599'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 2.0) # Unit = Âµs
    data['EnginePre-ChamberFuelValve10Duration_spn9600'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 2.0) # Unit = Âµs
    data['EnginePre-ChamberFuelValve11Duration_spn9601'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 2.0) # Unit = Âµs
    data['EnginePre-ChamberFuelValve12Duration_spn9602'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 2.0) # Unit = Âµs
    return data

# EPCVDC4
def PGN_61750(msg, data):
    data['EnginePre-ChamberFuelValve13Duration_spn9603'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 2.0) # Unit = Âµs
    data['EnginePre-ChamberFuelValve14Duration_spn9604'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 2.0) # Unit = Âµs
    data['EnginePre-ChamberFuelValve15Duration_spn9605'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 2.0) # Unit = Âµs
    data['EnginePre-ChamberFuelValve16Duration_spn9606'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 2.0) # Unit = Âµs
    return data

# EPCVDC5
def PGN_61751(msg, data):
    data['EnginePre-ChamberFuelValve17Duration_spn9607'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 2.0) # Unit = Âµs
    data['EnginePre-ChamberFuelValve18Duration_spn9608'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 2.0) # Unit = Âµs
    data['EnginePre-ChamberFuelValve19Duration_spn9609'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 2.0) # Unit = Âµs
    data['EnginePre-ChamberFuelValve20Duration_spn9610'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 2.0) # Unit = Âµs
    return data

# EPCSOAC1
def PGN_61752(msg, data):
    data['EnginePre-ChamberFuelValve1StartofActuationCommand_spn9611'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64259)  * 0.007812) - 400.0 # Unit = deg
    data['EnginePre-ChamberFuelValve2StartofActuationCommand_spn9612'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64259)  * 0.007812) - 400.0 # Unit = deg
    data['EnginePre-ChamberFuelValve3StartofActuationCommand_spn9613'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64259)  * 0.007812) - 400.0 # Unit = deg
    data['EnginePre-ChamberFuelValve4StartofActuationCommand_spn9614'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64259)  * 0.007812) - 400.0 # Unit = deg
    return data

# EPCSOAC2
def PGN_61753(msg, data):
    data['EnginePre-ChamberFuelValve5StartofActuationCommand_spn9615'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64259)  * 0.007812) - 400.0 # Unit = deg
    data['EnginePre-ChamberFuelValve6StartofActuationCommand_spn9616'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64259)  * 0.007812) - 400.0 # Unit = deg
    data['EnginePre-ChamberFuelValve7StartofActuationCommand_spn9617'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64259)  * 0.007812) - 400.0 # Unit = deg
    data['EnginePre-ChamberFuelValve8StartofActuationCommand_spn9618'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64259)  * 0.007812) - 400.0 # Unit = deg
    return data

# EPCSOAC3
def PGN_61754(msg, data):
    data['EnginePre-ChamberFuelValve9StartofActuationCommand_spn9619'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64259)  * 0.007812) - 400.0 # Unit = deg
    data['EnginePre-ChamberFuelValve10StartofActuationCommand_spn9620'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64259)  * 0.007812) - 400.0 # Unit = deg
    data['EnginePre-ChamberFuelValve11StartofActuationCommand_spn9621'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64259)  * 0.007812) - 400.0 # Unit = deg
    data['EnginePre-ChamberFuelValve12StartofActuationCommand_spn9622'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64259)  * 0.007812) - 400.0 # Unit = deg
    return data

# EPCSOAC4
def PGN_61755(msg, data):
    data['EnginePre-ChamberFuelValve13StartofActuationCommand_spn9623'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64259)  * 0.007812) - 400.0 # Unit = deg
    data['EnginePre-ChamberFuelValve14StartofActuationCommand_spn9624'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64259)  * 0.007812) - 400.0 # Unit = deg
    data['EnginePre-ChamberFuelValve15StartofActuationCommand_spn9625'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64259)  * 0.007812) - 400.0 # Unit = deg
    data['EnginePre-ChamberFuelValve16StartofActuationCommand_spn9626'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64259)  * 0.007812) - 400.0 # Unit = deg
    return data

# EPCSOAC5
def PGN_61756(msg, data):
    data['EnginePre-ChamberFuelValve17StartofActuationCommand_spn9627'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64259)  * 0.007812) - 400.0 # Unit = deg
    data['EnginePre-ChamberFuelValve18StartofActuationCommand_spn9628'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64259)  * 0.007812) - 400.0 # Unit = deg
    data['EnginePre-ChamberFuelValve19StartofActuationCommand_spn9629'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64259)  * 0.007812) - 400.0 # Unit = deg
    data['EnginePre-ChamberFuelValve20StartofActuationCommand_spn9630'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64259)  * 0.007812) - 400.0 # Unit = deg
    return data

# ASSC1
def PGN_61757(msg, data):
    data['LaneKeepingAssistStatusRightSide_spn9753'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000111)), 7)  * 1.0) # Unit = bit
    data['LaneKeepingAssistStatusLeftSide_spn9754'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00111000) >> 3)), 7)  * 1.0) # Unit = bit
    data['LaneKeepingAssistIndicationEnableStatus_spn9755'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['LaneKeepingAssistSystemState_spn9756'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['ActiveSteeringDriverPreference_spn9757'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000111)), 7)  * 1.0) # Unit = bit
    data['HandsOffDetectionStatus_spn12855'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000111)), 7)  * 1.0) # Unit = bit
    data['HandsOffDetectionAvailability_spn12854'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00111000) >> 3)), 7)  * 1.0) # Unit = bit
    data['LaneCenteringIndicationEnableState_spn9758'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['LaneCenteringSystemStatus_spn9759'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00111100) >> 2)), 15)  * 1.0) # Unit = bit
    return data

# SIAAC
def PGN_61760(msg, data):
    data['StationaryInverterAverageACRMSVoltage_spn9794'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['StationaryInverterAverageLine-NeutralACRMSVoltage_spn9795'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['StationaryInverterAverageACFrequency_spn9796'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64259)  * 0.007812) # Unit = Hz
    data['StationaryInverterAverageACRMSCurrent_spn9797'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 1.0) # Unit = A
    return data

# SITACR
def PGN_61761(msg, data):
    data['StationaryInverterTotalReactivePower_spn9798'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 1.0) - 2000000000.0 # Unit = VAr
    data['StationaryInverterOverallPowerFactor_spn9799'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64292)  * 6.1e-05) - 1.0 # Unit = 
    data['StationaryInverterOverallPowerFactorLagging_spn9800'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    return data

# SITACP
def PGN_61762(msg, data):
    data['StationaryInverterTotalRealPower_spn9801'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 1.0) - 2000000000.0 # Unit = W
    data['StationaryInverterTotalApparentPower_spn9802'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 ) + ((int(msg[12:14], 16)) << 16 ) + ((int(msg[14:16], 16)) << 24 )), 4211081215)  * 1.0) - 2000000000.0 # Unit = VA
    return data

# SIC
def PGN_61763(msg, data):
    data['StationaryInverterNotReadytoAutomaticallyParallelState_spn9803'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['StationaryInverterAuxiliaryShutdownSwitch_spn9804'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    return data

# SIBSC
def PGN_61764(msg, data):
    data['StationaryInvertertoBusDeadBus_spn9806'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['StationaryInvertertoBusPhaseMatch_spn9807'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['StationaryInvertertoBusFrequencyMatch_spn9808'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['StationaryInvertertoBusVoltageMatch_spn9809'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['StationaryInvertertoBusInSync_spn9810'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['StationaryInvertertoBusACPhaseDifference_spn9811'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64259)  * 0.007812) - 200.0 # Unit = deg
    return data

# ECCP1
def PGN_61765(msg, data):
    data['EngineCylinder1Timing1Pressure_spn9853'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder1Timing2Pressure_spn9854'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder1Timing3Pressure_spn9855'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder1Timing4Pressure_spn9856'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    return data

# ECCP2
def PGN_61766(msg, data):
    data['EngineCylinder2Timing1Pressure_spn9857'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder2Timing2Pressure_spn9858'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder2Timing3Pressure_spn9859'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder2Timing4Pressure_spn9860'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    return data

# ECCP3
def PGN_61767(msg, data):
    data['EngineCylinder3Timing1Pressure_spn9861'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder3Timing2Pressure_spn9862'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder3Timing3Pressure_spn9863'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder3Timing4Pressure_spn9864'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    return data

# ECCP4
def PGN_61768(msg, data):
    data['EngineCylinder4Timing1Pressure_spn9865'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder4Timing2Pressure_spn9866'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder4Timing3Pressure_spn9867'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder4Timing4Pressure_spn9868'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    return data

# ECCP5
def PGN_61769(msg, data):
    data['EngineCylinder5Timing1Pressure_spn9869'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder5Timing2Pressure_spn9870'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder5Timing3Pressure_spn9871'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder5Timing4Pressure_spn9872'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    return data

# ECCP6
def PGN_61770(msg, data):
    data['EngineCylinder6Timing1Pressure_spn9873'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder6Timing2Pressure_spn9874'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder6Timing3Pressure_spn9875'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder6Timing4Pressure_spn9876'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    return data

# ECCP7
def PGN_61771(msg, data):
    data['EngineCylinder7Timing1Pressure_spn9877'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder7Timing2Pressure_spn9878'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder7Timing3Pressure_spn9879'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder7Timing4Pressure_spn9880'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    return data

# ECCP8
def PGN_61772(msg, data):
    data['EngineCylinder8Timing1Pressure_spn9881'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder8Timing2Pressure_spn9882'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder8Timing3Pressure_spn9883'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder8Timing4Pressure_spn9884'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    return data

# ECCP9
def PGN_61773(msg, data):
    data['EngineCylinder9Timing1Pressure_spn9885'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder9Timing2Pressure_spn9886'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder9Timing3Pressure_spn9887'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder9Timing4Pressure_spn9888'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    return data

# ECCP10
def PGN_61774(msg, data):
    data['EngineCylinder10Timing1Pressure_spn9889'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder10Timing2Pressure_spn9890'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder10Timing3Pressure_spn9891'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder10Timing4Pressure_spn9892'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    return data

# ECCP11
def PGN_61775(msg, data):
    data['EngineCylinder11Timing1Pressure_spn9893'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder11Timing2Pressure_spn9894'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder11Timing3Pressure_spn9895'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder11Timing4Pressure_spn9896'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    return data

# ECCP12
def PGN_61776(msg, data):
    data['EngineCylinder12Timing1Pressure_spn9897'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder12Timing2Pressure_spn9898'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder12Timing3Pressure_spn9899'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder12Timing4Pressure_spn9900'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    return data

# ECCP13
def PGN_61777(msg, data):
    data['EngineCylinder13Timing1Pressure_spn9901'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder13Timing2Pressure_spn9902'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder13Timing3Pressure_spn9903'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder13Timing4Pressure_spn9904'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    return data

# ECCP14
def PGN_61778(msg, data):
    data['EngineCylinder14Timing1Pressure_spn9905'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder14Timing2Pressure_spn9906'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder14Timing3Pressure_spn9907'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder14Timing4Pressure_spn9908'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    return data

# ECCP15
def PGN_61779(msg, data):
    data['EngineCylinder15Timing1Pressure_spn9909'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder15Timing2Pressure_spn9910'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder15Timing3Pressure_spn9911'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder15Timing4Pressure_spn9912'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    return data

# ECCP16
def PGN_61780(msg, data):
    data['EngineCylinder16Timing1Pressure_spn9913'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder16Timing2Pressure_spn9914'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder16Timing3Pressure_spn9915'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder16Timing4Pressure_spn9916'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    return data

# ECCP17
def PGN_61781(msg, data):
    data['EngineCylinder17Timing1Pressure_spn9917'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder17Timing2Pressure_spn9918'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder17Timing3Pressure_spn9919'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder17Timing4Pressure_spn9920'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    return data

# ECCP18
def PGN_61782(msg, data):
    data['EngineCylinder18Timing1Pressure_spn9921'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder18Timing2Pressure_spn9922'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder18Timing3Pressure_spn9923'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder18Timing4Pressure_spn9924'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    return data

# ECCP19
def PGN_61783(msg, data):
    data['EngineCylinder19Timing1Pressure_spn9925'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder19Timing2Pressure_spn9926'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder19Timing3Pressure_spn9927'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder19Timing4Pressure_spn9928'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    return data

# ECCP20
def PGN_61784(msg, data):
    data['EngineCylinder20Timing1Pressure_spn9929'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder20Timing2Pressure_spn9930'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder20Timing3Pressure_spn9931'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    data['EngineCylinder20Timing4Pressure_spn9932'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64226)  * 0.000977) # Unit = MPa
    return data

# ECCT1
def PGN_61785(msg, data):
    data['EngineCylinder1InstantaneousStartofCombustionTiming_spn9937'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder1InstantaneousCenterofCombustionTiming_spn9938'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder1InstantaneousCombustionTimingPoint1_spn9939'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder1InstantaneousCombustionTimingPoint2_spn9940'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    return data

# ECCT2
def PGN_61786(msg, data):
    data['EngineCylinder2InstantaneousStartofCombustionTiming_spn9941'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder2InstantaneousCenterofCombustionTiming_spn9942'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder2InstantaneousCombustionTimingPoint1_spn9943'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder2InstantaneousCombustionTimingPoint2_spn9944'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    return data

# ECCT3
def PGN_61787(msg, data):
    data['EngineCylinder3InstantaneousStartofCombustionTiming_spn9945'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder3InstantaneousCenterofCombustionTiming_spn9946'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder3InstantaneousCombustionTimingPoint1_spn9947'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder3InstantaneousCombustionTimingPoint2_spn9948'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    return data

# ECCT4
def PGN_61788(msg, data):
    data['EngineCylinder4InstantaneousStartofCombustionTiming_spn9949'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder4InstantaneousCenterofCombustionTiming_spn9950'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder4InstantaneousCombustionTimingPoint1_spn9951'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder4InstantaneousCombustionTimingPoint2_spn9952'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    return data

# ECCT5
def PGN_61789(msg, data):
    data['EngineCylinder5InstantaneousStartofCombustionTiming_spn9953'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder5InstantaneousCenterofCombustionTiming_spn9954'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder5InstantaneousCombustionTimingPoint1_spn9955'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder5InstantaneousCombustionTimingPoint2_spn9956'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    return data

# ECCT6
def PGN_61790(msg, data):
    data['EngineCylinder6InstantaneousStartofCombustionTiming_spn9957'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder6InstantaneousCenterofCombustionTiming_spn9958'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder6InstantaneousCombustionTimingPoint1_spn9959'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder6InstantaneousCombustionTimingPoint2_spn9960'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    return data

# ECCT7
def PGN_61791(msg, data):
    data['EngineCylinder7InstantaneousStartofCombustionTiming_spn9961'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder7InstantaneousCenterofCombustionTiming_spn9962'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder7InstantaneousCombustionTimingPoint1_spn9963'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder7InstantaneousCombustionTimingPoint2_spn9964'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    return data

# ECCT8
def PGN_61792(msg, data):
    data['EngineCylinder8InstantaneousStartofCombustionTiming_spn9965'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder8InstantaneousCenterofCombustionTiming_spn9966'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder8InstantaneousCombustionTimingPoint1_spn9967'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder8InstantaneousCombustionTimingPoint2_spn9968'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    return data

# ECCT9
def PGN_61793(msg, data):
    data['EngineCylinder9InstantaneousStartofCombustionTiming_spn9969'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder9InstantaneousCenterofCombustionTiming_spn9970'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder9InstantaneousCombustionTimingPoint1_spn9971'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder9InstantaneousCombustionTimingPoint2_spn9972'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    return data

# ECCT10
def PGN_61794(msg, data):
    data['EngineCylinder10InstantaneousStartofCombustionTiming_spn9973'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder10InstantaneousCenterofCombustionTiming_spn9974'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder10InstantaneousCombustionTimingPoint1_spn9975'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder10InstantaneousCombustionTimingPoint2_spn9976'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    return data

# ECCT11
def PGN_61795(msg, data):
    data['EngineCylinder11InstantaneousStartofCombustionTiming_spn9977'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder11InstantaneousCenterofCombustionTiming_spn9978'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder11InstantaneousCombustionTimingPoint1_spn9979'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder11InstantaneousCombustionTimingPoint2_spn9980'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    return data

# ECCT12
def PGN_61796(msg, data):
    data['EngineCylinder12InstantaneousStartofCombustionTiming_spn9981'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder12InstantaneousCenterofCombustionTiming_spn9982'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder12InstantaneousCombustionTimingPoint1_spn9983'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder12InstantaneousCombustionTimingPoint2_spn9984'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    return data

# ECCT13
def PGN_61797(msg, data):
    data['EngineCylinder13InstantaneousStartofCombustionTiming_spn9985'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder13InstantaneousCenterofCombustionTiming_spn9986'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder13InstantaneousCombustionTimingPoint1_spn9987'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder13InstantaneousCombustionTimingPoint2_spn9988'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    return data

# ECCT14
def PGN_61798(msg, data):
    data['EngineCylinder14InstantaneousStartofCombustionTiming_spn9989'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder14InstantaneousCenterofCombustionTiming_spn9990'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder14InstantaneousCombustionTimingPoint1_spn9991'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder14InstantaneousCombustionTimingPoint2_spn9992'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    return data

# ECCT15
def PGN_61799(msg, data):
    data['EngineCylinder15InstantaneousStartofCombustionTiming_spn9993'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder15InstantaneousCenterofCombustionTiming_spn9994'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder15InstantaneousCombustionTimingPoint1_spn9995'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder15InstantaneousCombustionTimingPoint2_spn9996'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    return data

# ECCT16
def PGN_61800(msg, data):
    data['EngineCylinder16InstantaneousStartofCombustionTiming_spn9997'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder16InstantaneousCenterofCombustionTiming_spn9998'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder16InstantaneousCombustionTimingPoint1_spn9999'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder16InstantaneousCombustionTimingPoint2_spn10000'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    return data

# ECCT17
def PGN_61801(msg, data):
    data['EngineCylinder17InstantaneousStartofCombustionTiming_spn10001'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder17InstantaneousCenterofCombustionTiming_spn10002'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder17InstantaneousCombustionTimingPoint1_spn10003'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder17InstantaneousCombustionTimingPoint2_spn10004'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    return data

# ECCT18
def PGN_61802(msg, data):
    data['EngineCylinder18InstantaneousStartofCombustionTiming_spn10005'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder18InstantaneousCenterofCombustionTiming_spn10006'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder18InstantaneousCombustionTimingPoint1_spn10007'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder18InstantaneousCombustionTimingPoint2_spn10008'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    return data

# ECCT19
def PGN_61803(msg, data):
    data['EngineCylinder19InstantaneousStartofCombustionTiming_spn10009'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder19InstantaneousCenterofCombustionTiming_spn10010'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder19InstantaneousCombustionTimingPoint1_spn10011'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder19InstantaneousCombustionTimingPoint2_spn10012'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    return data

# ECCT20
def PGN_61804(msg, data):
    data['EngineCylinder20InstantaneousStartofCombustionTiming_spn10013'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder20InstantaneousCenterofCombustionTiming_spn10014'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder20InstantaneousCombustionTimingPoint1_spn10015'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder20InstantaneousCombustionTimingPoint2_spn10016'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    return data

# EECM1
def PGN_61805(msg, data):
    data['EngineCylinder1InstantaneousPeakCombustionPressureTiming_spn10017'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder1InstantaneousIndicatedMeanEffectivePressure_spn10018'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64292)  * 0.000122) - 1.0 # Unit = MPa
    data['EngineCylinder1IndicatedMeanEffectivePressureCoefficientofVariance_spn10019'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.04) # Unit = %
    data['EngineCylinder1MisfireRate_spn1323'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 0.4) # Unit = %
    data['EngineCylinder1Temperature_spn10739'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    return data

# EECM2
def PGN_61806(msg, data):
    data['EngineCylinder2InstantaneousPeakCombustionPressureTiming_spn10020'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder2InstantaneousIndicatedMeanEffectivePressure_spn10021'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64292)  * 0.000122) - 1.0 # Unit = MPa
    data['EngineCylinder2IndicatedMeanEffectivePressureCoefficientofVariance_spn10022'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.04) # Unit = %
    data['EngineCylinder2MisfireRate_spn1324'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 0.4) # Unit = %
    data['EngineCylinder2Temperature_spn10740'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    return data

# EECM3
def PGN_61807(msg, data):
    data['EngineCylinder3InstantaneousPeakCombustionPressureTiming_spn10023'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder3InstantaneousIndicatedMeanEffectivePressure_spn10024'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64292)  * 0.000122) - 1.0 # Unit = MPa
    data['EngineCylinder3IndicatedMeanEffectivePressureCoefficientofVariance_spn10025'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.04) # Unit = %
    data['EngineCylinder3MisfireRate_spn1325'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 0.4) # Unit = %
    data['EngineCylinder3Temperature_spn10741'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    return data

# EECM4
def PGN_61808(msg, data):
    data['EngineCylinder4InstantaneousPeakCombustionPressureTiming_spn10026'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder4InstantaneousIndicatedMeanEffectivePressure_spn10027'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64292)  * 0.000122) - 1.0 # Unit = MPa
    data['EngineCylinder4IndicatedMeanEffectivePressureCoefficientofVariance_spn10028'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.04) # Unit = %
    data['EngineCylinder4MisfireRate_spn1326'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 0.4) # Unit = %
    data['EngineCylinder4Temperature_spn10742'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    return data

# EECM5
def PGN_61809(msg, data):
    data['EngineCylinder5InstantaneousPeakCombustionPressureTiming_spn10029'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder5InstantaneousIndicatedMeanEffectivePressure_spn10030'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64292)  * 0.000122) - 1.0 # Unit = MPa
    data['EngineCylinder5IndicatedMeanEffectivePressureCoefficientofVariance_spn10031'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.04) # Unit = %
    data['EngineCylinder5MisfireRate_spn1327'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 0.4) # Unit = %
    data['EngineCylinder5Temperature_spn10743'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    return data

# EECM6
def PGN_61810(msg, data):
    data['EngineCylinder6InstantaneousPeakCombustionPressureTiming_spn10032'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder6InstantaneousIndicatedMeanEffectivePressure_spn10033'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64292)  * 0.000122) - 1.0 # Unit = MPa
    data['EngineCylinder6IndicatedMeanEffectivePressureCoefficientofVariance_spn10034'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.04) # Unit = %
    data['EngineCylinder6MisfireRate_spn1328'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 0.4) # Unit = %
    data['EngineCylinder6Temperature_spn10744'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    return data

# EECM7
def PGN_61811(msg, data):
    data['EngineCylinder7InstantaneousPeakCombustionPressureTiming_spn10035'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder7InstantaneousIndicatedMeanEffectivePressure_spn10036'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64292)  * 0.000122) - 1.0 # Unit = MPa
    data['EngineCylinder7IndicatedMeanEffectivePressureCoefficientofVariance_spn10037'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.04) # Unit = %
    data['EngineCylinder7MisfireRate_spn1329'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 0.4) # Unit = %
    data['EngineCylinder7Temperature_spn10745'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    return data

# EECM8
def PGN_61812(msg, data):
    data['EngineCylinder8InstantaneousPeakCombustionPressureTiming_spn10038'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder8InstantaneousIndicatedMeanEffectivePressure_spn10039'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64292)  * 0.000122) - 1.0 # Unit = MPa
    data['EngineCylinder8IndicatedMeanEffectivePressureCoefficientofVariance_spn10040'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.04) # Unit = %
    data['EngineCylinder8MisfireRate_spn1330'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 0.4) # Unit = %
    data['EngineCylinder8Temperature_spn10746'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    return data

# EECM9
def PGN_61813(msg, data):
    data['EngineCylinder9InstantaneousPeakCombustionPressureTiming_spn10041'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder9InstantaneousIndicatedMeanEffectivePressure_spn10042'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64292)  * 0.000122) - 1.0 # Unit = MPa
    data['EngineCylinder9IndicatedMeanEffectivePressureCoefficientofVariance_spn10043'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.04) # Unit = %
    data['EngineCylinder9MisfireRate_spn1331'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 0.4) # Unit = %
    data['EngineCylinder9Temperature_spn10747'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    return data

# EECM10
def PGN_61814(msg, data):
    data['EngineCylinder10InstantaneousPeakCombustionPressureTiming_spn10044'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder10InstantaneousIndicatedMeanEffectivePressure_spn10045'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64292)  * 0.000122) - 1.0 # Unit = MPa
    data['EngineCylinder10IndicatedMeanEffectivePressureCoefficientofVariance_spn10046'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.04) # Unit = %
    data['EngineCylinder10MisfireRate_spn1332'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 0.4) # Unit = %
    data['EngineCylinder10Temperature_spn10748'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    return data

# EECM11
def PGN_61815(msg, data):
    data['EngineCylinder11InstantaneousPeakCombustionPressureTiming_spn10047'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder11InstantaneousIndicatedMeanEffectivePressure_spn10048'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64292)  * 0.000122) - 1.0 # Unit = MPa
    data['EngineCylinder11IndicatedMeanEffectivePressureCoefficientofVariance_spn10049'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.04) # Unit = %
    data['EngineCylinder11MisfireRate_spn1333'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 0.4) # Unit = %
    data['EngineCylinder11Temperature_spn10749'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    return data

# EECM12
def PGN_61816(msg, data):
    data['EngineCylinder12InstantaneousPeakCombustionPressureTiming_spn10050'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder12InstantaneousIndicatedMeanEffectivePressure_spn10051'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64292)  * 0.000122) - 1.0 # Unit = MPa
    data['EngineCylinder12IndicatedMeanEffectivePressureCoefficientofVariance_spn10052'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.04) # Unit = %
    data['EngineCylinder12MisfireRate_spn1334'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 0.4) # Unit = %
    data['EngineCylinder12Temperature_spn10750'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    return data

# EECM13
def PGN_61817(msg, data):
    data['EngineCylinder13InstantaneousPeakCombustionPressureTiming_spn10053'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder13InstantaneousIndicatedMeanEffectivePressure_spn10054'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64292)  * 0.000122) - 1.0 # Unit = MPa
    data['EngineCylinder13IndicatedMeanEffectivePressureCoefficientofVariance_spn10055'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.04) # Unit = %
    data['EngineCylinder13MisfireRate_spn1335'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 0.4) # Unit = %
    data['EngineCylinder13Temperature_spn10751'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    return data

# EECM14
def PGN_61818(msg, data):
    data['EngineCylinder14InstantaneousPeakCombustionPressureTiming_spn10056'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder14InstantaneousIndicatedMeanEffectivePressure_spn10057'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64292)  * 0.000122) - 1.0 # Unit = MPa
    data['EngineCylinder14IndicatedMeanEffectivePressureCoefficientofVariance_spn10058'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.04) # Unit = %
    data['EngineCylinder14MisfireRate_spn1336'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 0.4) # Unit = %
    data['EngineCylinder14Temperature_spn10752'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    return data

# EECM15
def PGN_61819(msg, data):
    data['EngineCylinder15InstantaneousPeakCombustionPressureTiming_spn10059'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder15InstantaneousIndicatedMeanEffectivePressure_spn10060'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64292)  * 0.000122) - 1.0 # Unit = MPa
    data['EngineCylinder15IndicatedMeanEffectivePressureCoefficientofVariance_spn10061'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.04) # Unit = %
    data['EngineCylinder15MisfireRate_spn1337'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 0.4) # Unit = %
    data['EngineCylinder15Temperature_spn10753'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    return data

# EECM16
def PGN_61820(msg, data):
    data['EngineCylinder16InstantaneousPeakCombustionPressureTiming_spn10062'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder16InstantaneousIndicatedMeanEffectivePressure_spn10063'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64292)  * 0.000122) - 1.0 # Unit = MPa
    data['EngineCylinder16IndicatedMeanEffectivePressureCoefficientofVariance_spn10064'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.04) # Unit = %
    data['EngineCylinder16MisfireRate_spn1338'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 0.4) # Unit = %
    data['EngineCylinder16Temperature_spn10754'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    return data

# EECM17
def PGN_61821(msg, data):
    data['EngineCylinder17InstantaneousPeakCombustionPressureTiming_spn10065'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder17InstantaneousIndicatedMeanEffectivePressure_spn10066'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64292)  * 0.000122) - 1.0 # Unit = MPa
    data['EngineCylinder17IndicatedMeanEffectivePressureCoefficientofVariance_spn10067'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.04) # Unit = %
    data['EngineCylinder17MisfireRate_spn1339'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 0.4) # Unit = %
    data['EngineCylinder17Temperature_spn10755'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    return data

# EECM18
def PGN_61822(msg, data):
    data['EngineCylinder18InstantaneousPeakCombustionPressureTiming_spn10068'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder18InstantaneousIndicatedMeanEffectivePressure_spn10069'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64292)  * 0.000122) - 1.0 # Unit = MPa
    data['EngineCylinder18IndicatedMeanEffectivePressureCoefficientofVariance_spn10070'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.04) # Unit = %
    data['EngineCylinder18MisfireRate_spn1340'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 0.4) # Unit = %
    data['EngineCylinder18Temperature_spn10756'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    return data

# EECM19
def PGN_61823(msg, data):
    data['EngineCylinder19InstantaneousPeakCombustionPressureTiming_spn10071'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder19InstantaneousIndicatedMeanEffectivePressure_spn10072'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64292)  * 0.000122) - 1.0 # Unit = MPa
    data['EngineCylinder19IndicatedMeanEffectivePressureCoefficientofVariance_spn10073'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.04) # Unit = %
    data['EngineCylinder19MisfireRate_spn1341'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 0.4) # Unit = %
    data['EngineCylinder19Temperature_spn10757'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    return data

# EECM20
def PGN_61824(msg, data):
    data['EngineCylinder20InstantaneousPeakCombustionPressureTiming_spn10074'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64004)  * 0.003906) - 125.0 # Unit = deg
    data['EngineCylinder20InstantaneousIndicatedMeanEffectivePressure_spn10075'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64292)  * 0.000122) - 1.0 # Unit = MPa
    data['EngineCylinder20IndicatedMeanEffectivePressureCoefficientofVariance_spn10076'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.04) # Unit = %
    data['EngineCylinder20MisfireRate_spn1342'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 0.4) # Unit = %
    data['EngineCylinder20Temperature_spn10758'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    return data

# MG1IMF1
def PGN_61825(msg, data):
    data['Motor/Generator1InverterModeFeedback1CRC_spn10164'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator1InverterModeFeedback1Counter_spn10165'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator1InverterControlLimitsOverrideMode_spn10166'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator1InverterControlSetpointMode_spn10167'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00011111)), 31)  * 1.0) # Unit = bit
    data['Motor/Generator1InverterHVILStatus_spn9103'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b01100000) >> 5)), 3)  * 1.0) # Unit = bit
    return data

# MG1ILAP
def PGN_61826(msg, data):
    data['Motor/Generator1InverterLimitsActivePowerCRC_spn10182'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator1InverterLimitsActivePowerCounter_spn10183'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator1InverterLimitsActiveMechanicalPowerMaximum_spn10184'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4) + ((int(msg[4:6], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator1InverterLimitsActiveMechanicalPowerMinimum_spn10185'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator1InverterLimitsActiveDCSidePowerMaximum_spn10186'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11110000) >> 4) + ((int(msg[10:12], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator1InverterLimitsActiveDCSidePowerMinimum_spn10187'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    return data

# MG1ILAM
def PGN_61827(msg, data):
    data['Motor/Generator1InverterLimitsActiveMechanicalCRC_spn10194'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator1InverterLimitsActiveMechanicalCounter_spn10195'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator1InverterLimitsActiveTorqueMaximum_spn10196'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4) + ((int(msg[4:6], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator1InverterLimitsActiveTorqueMinimum_spn10197'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator1InverterLimitsActiveSpeedMaximum_spn10198'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11110000) >> 4) + ((int(msg[10:12], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator1InverterLimitsActiveSpeedMinimum_spn10199'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    return data

# MG1ILADC
def PGN_61828(msg, data):
    data['Motor/Generator1InverterLimitsActiveDCSideCRC_spn10210'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator1InverterLimitsActiveDCSideCounter_spn10211'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator1InverterLimitsActiveDCSideVoltageMaximum_spn10212'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4) + ((int(msg[4:6], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator1InverterLimitsActiveDCSideVoltageMinimum_spn10213'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator1InverterLimitsActiveDCSideCurrentMaximum_spn10214'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11110000) >> 4) + ((int(msg[10:12], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator1InverterLimitsActiveDCSideCurrentMinimum_spn10215'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    return data

# MG1ILV
def PGN_61829(msg, data):
    data['Motor/Generator1InverterSwitchedIgnitionVoltage_spn9105'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['Motor/Generator1InverterUnswitchedSLIVoltage_spn9117'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    return data

# MG2IMF1
def PGN_61830(msg, data):
    data['Motor/Generator2InverterModeFeedback1CRC_spn10230'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator2InverterModeFeedback1Counter_spn10231'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator2InverterControlLimitsOverrideMode_spn10232'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator2InverterControlSetpointMode_spn10233'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00011111)), 31)  * 1.0) # Unit = bit
    data['Motor/Generator2InverterHVILStatus_spn9104'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b01100000) >> 5)), 3)  * 1.0) # Unit = bit
    return data

# MG2ILAP
def PGN_61831(msg, data):
    data['Motor/Generator2InverterLimitsActivePowerCRC_spn10248'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator2InverterLimitsActivePowerCounter_spn10249'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator2InverterLimitsActiveMechanicalPowerMaximum_spn10250'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4) + ((int(msg[4:6], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator2InverterLimitsActiveMechanicalPowerMinimum_spn10251'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator2InverterLimitsActiveDCSidePowerMaximum_spn10252'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11110000) >> 4) + ((int(msg[10:12], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator2InverterLimitsActiveDCSidePowerMinimum_spn10253'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    return data

# MG2ILAM
def PGN_61832(msg, data):
    data['Motor/Generator2InverterLimitsActiveMechanicalCRC_spn10260'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator2InverterLimitsActiveMechanicalCounter_spn10261'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator2InverterLimitsActiveTorqueMaximum_spn10262'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4) + ((int(msg[4:6], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator2InverterLimitsActiveTorqueMinimum_spn10263'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator2InverterLimitsActiveSpeedMaximum_spn10264'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11110000) >> 4) + ((int(msg[10:12], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator2InverterLimitsActiveSpeedMinimum_spn10265'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    return data

# MG2ILADC
def PGN_61833(msg, data):
    data['Motor/Generator2InverterLimitsActiveDCSideCRC_spn10276'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator2InverterLimitsActiveDCSideCounter_spn10277'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator2InverterLimitsActiveDCSideVoltageMaximum_spn10278'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4) + ((int(msg[4:6], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator2InverterLimitsActiveDCSideVoltageMinimum_spn10279'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator2InverterLimitsActiveDCSideCurrentMaximum_spn10280'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11110000) >> 4) + ((int(msg[10:12], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator2InverterLimitsActiveDCSideCurrentMinimum_spn10281'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    return data

# MG2ILV
def PGN_61834(msg, data):
    data['Motor/Generator2InverterSwitchedIgnitionVoltage_spn9106'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['Motor/Generator2InverterUnswitchedSLIVoltage_spn9118'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    return data

# MG1IS2
def PGN_61835(msg, data):
    data['Motor/Generator1InverterStatus2CRC_spn10764'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator1InverterStatus2Counter_spn10765'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator1AvailableMaximumTorque_spn10766'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4) + ((int(msg[4:6], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator1AvailableMinimumTorque_spn10767'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    return data

# MG1IRLA1
def PGN_61836(msg, data):
    data['Motor/Generator1InverterRateLimitsActive1CRC_spn10798'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator1InverterRateLimitsActive1Counter_spn10799'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator1InverterRateLimitsActiveAbsoluteSpeedRateLimit_spn10800'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4) + ((int(msg[4:6], 16)) << 4 )), 1004)  * 1.0) # Unit = %/s
    return data

# MG2IS2
def PGN_61837(msg, data):
    data['Motor/Generator2InverterStatus2CRC_spn10802'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator2InverterStatus2Counter_spn10803'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator2AvailableMaximumTorque_spn10804'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4) + ((int(msg[4:6], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator2AvailableMinimumTorque_spn10805'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    return data

# MG2IRLA1
def PGN_61838(msg, data):
    data['Motor/Generator2InverterRateLimitsActive1CRC_spn10836'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator2InverterRateLimitsActive1Counter_spn10837'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator2InverterRateLimitsActiveAbsoluteSpeedRateLimit_spn10838'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4) + ((int(msg[4:6], 16)) << 4 )), 1004)  * 1.0) # Unit = %/s
    return data

# IPGA
def PGN_61839(msg, data):
    data['ImpostorPGEventDetectionCounter_spn10840'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) # Unit = count
    data['ImpostorPGSourceAddress_spn10841'] = ( enforceMaxV(( (int(msg[2:4], 16))), 255)  * 1.0) # Unit = SA
    data['ImpostorPGDestinationAddress_spn10842'] = ( enforceMaxV(( (int(msg[4:6], 16))), 255)  * 1.0) # Unit = SA
    data['ImpostorPGN_spn10843'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 ) + ((int(msg[10:12], 16)) << 16 )), 16777215)  * 1.0) # Unit = binary
    data['TimeSinceLastImposterPGDetected_spn10844'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 1.0) # Unit = min
    return data

# HVESP1S2
def PGN_61840(msg, data):
    data['HVESP1DischargePowerLimitDuetoStateofCharge_spn11038'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP1DischargePowerLimitDuetoBatteryTemperature_spn11039'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESP1DischargePowerLimitDuetoBatteryDiagnosticCondition_spn11040'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HVESP1DischargePowerLimitDuetoBatteryorCellVoltage_spn11041'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['HVESP1DischargePowerLimitDuetoBatteryCurrent_spn11042'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP1DischargePowerLimitDuetoanUndefinedCause_spn11043'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESP1ChargePowerLimitDuetoStateofCharge_spn11044'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP1ChargePowerLimitDuetoBatteryTemperature_spn11045'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESP1ChargePowerLimitDuetoBatteryDiagnosticCondition_spn11046'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HVESP1ChargePowerLimitDuetoBatteryorCellVoltage_spn11047'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['HVESP1ChargePowerLimitDuetoBatteryCurrent_spn11048'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP1ChargePowerLimitDuetoanUndefinedCause_spn11049'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    return data

# HVESP1D1
def PGN_61841(msg, data):
    data['HVESP1AvailableDischargePower_spn11050'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) # Unit = kW
    data['HVESP1AvailableChargePower_spn11051'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) # Unit = kW
    data['HVESP1VoltageLevel_spn11052'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['HVESP1Current_spn11053'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.05) - 1600.0 # Unit = A
    return data

# HVESP1D2
def PGN_61842(msg, data):
    data['HVESP1FastUpdateStateofCharge_spn11054'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.0015625) # Unit = %
    data['HVESP1HighestCellVoltage_spn11055'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.001) # Unit = V
    data['HVESP1LowestCellVoltage_spn11056'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.001) # Unit = V
    data['HVESP1CellVoltageDifferentialStatus_spn11057'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    return data

# HVESP1D3
def PGN_61843(msg, data):
    data['HVESP1HighestCellTemperature_spn11058'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['HVESP1LowestCellTemperature_spn11059'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['HVESP1AverageCellTemperature_spn11060'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['HVESP1CellTemperatureDifferentialStatus_spn11061'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    return data

# HVESP1D4
def PGN_61844(msg, data):
    data['HVESP1DischargeCapacity_spn11062'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.01) # Unit = Ah
    data['HVESP1ChargeCapacity_spn11063'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.01) # Unit = Ah
    data['HVESP1CellBalancingCount_spn11064'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 1.0) # Unit = count
    return data

# HVESP1D5
def PGN_61845(msg, data):
    data['HVESP1DischargeCurrentLimit_spn11065'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) - 1600.0 # Unit = A
    data['HVESP1ChargeCurrentLimit_spn11066'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) - 1600.0 # Unit = A
    data['HVESP1LowestCellStateofCharge_spn11067'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.0015625) # Unit = %
    data['HVESP1HighestCellStateofCharge_spn11068'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.0015625) # Unit = %
    return data

# HVESP1D6
def PGN_61846(msg, data):
    data['HVESP1BusVoltage_spn11069'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['HVESP1IgnitionVoltage_spn11070'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    data['HVESP1IntakeCoolantTemperature_spn11071'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['HVESP1OutletCoolantTemperature_spn11072'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['HVESP1ElectronicsTemperature_spn11073'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['HVESP1Temperature_spn11074'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    return data

# HVESP1S1
def PGN_61847(msg, data):
    data['HVESP1High-VoltageBus(Positive)ContactorState_spn11075'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP1High-VoltageBus(Negative)ContactorState_spn11076'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESP1High-VoltageBusDisconnectForewarning_spn11077'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['HVESP1High-VoltageBusPre-ChargeRelayState_spn11078'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP1CenterofPackContactorState_spn11079'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESP1High-VoltageBusActiveIsolationTestStatus_spn11080'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['HVESP1High-VoltageBusPassiveIsolationTestStatus_spn11081'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['HVESP1HVILStatus_spn11082'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HVESP1InertiaSwitchStatus_spn11083'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['HVESP1StateofChargeStatus_spn11084'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['HVESP1CellBalanceStatus_spn11085'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HVESP1CellBalancingActive_spn11086'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['HVESP1InternalChargerStatus_spn11087'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP1High-VoltageBusConnectionStatus_spn11088'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['HVESP1OperationalStatus_spn11089'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['HVESP1Status1Counter_spn13015'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['HVESP1Status1CRC_spn13016'] = ( enforceMaxV(( (int(msg[14:16], 16))), 255)  * 1.0) # Unit = count
    return data

# HVESP1D7
def PGN_61848(msg, data):
    data['HVESP1DischargeEnergyCapacity_spn11090'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 )), 16449535)  * 0.001) # Unit = kWh
    data['HVESP1ChargeEnergyCapacity_spn11091'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 ) + ((int(msg[10:12], 16)) << 16 )), 16449535)  * 0.001) # Unit = kWh
    data['HVESP1MaximumChargeVoltageLimit_spn11092'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    return data

# HVESP1MS1
def PGN_61849(msg, data):
    data['HVESP1Module1OperationalStatus_spn11093'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP1Module2OperationalStatus_spn11094'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESP1Module3OperationalStatus_spn11095'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HVESP1Module4OperationalStatus_spn11096'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['HVESP1Module5OperationalStatus_spn11097'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP1Module6OperationalStatus_spn11098'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESP1Module7OperationalStatus_spn11099'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HVESP1Module8OperationalStatus_spn11100'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['HVESP1Module9OperationalStatus_spn11101'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP1Module10OperationalStatus_spn11102'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESP1Module11OperationalStatus_spn11103'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HVESP1Module12OperationalStatus_spn11104'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['HVESP1Module13OperationalStatus_spn11105'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP1Module14OperationalStatus_spn11106'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESP1Module15OperationalStatus_spn11107'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HVESP1Module16OperationalStatus_spn11108'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# HVESP1TS1
def PGN_61850(msg, data):
    data['HVESP1ThermalManagementSystemSLIInputPower_spn11109'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.5) # Unit = W
    data['HVESP1ThermalManagementSystemHigh-VoltageInputPower_spn11110'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.5) # Unit = W
    data['HVESP1ThermalManagementSystemCompressorSpeed_spn11111'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 32.0) # Unit = rpm
    data['HVESP1ThermalManagementSystemRelativeHumidty_spn11112'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 0.4) # Unit = %
    data['HVESP1ThermalManagementSystemHeaterStatus_spn11113'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP1ThermalManagementSystemHVILStatus_spn12819'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESP1ThermalManagementSystemMode_spn11114'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['HVESP1ThermalManagementSystemCoolantLevel_spn12898'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    return data

# HVESP1D8
def PGN_61851(msg, data):
    data['HVESP1HighestCellVoltageModuleNumber_spn11115'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) # Unit = count
    data['HVESP1HighestCellVoltageCellNumber_spn11116'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) # Unit = count
    data['HVESP1LowestCellVoltageModuleNumber_spn11117'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) # Unit = count
    data['HVESP1LowestCellVoltageCellNumber_spn11118'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) # Unit = count
    data['HVESP1AverageCellVoltage_spn11119'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.001) # Unit = V
    return data

# HVESP1D9
def PGN_61852(msg, data):
    data['HVESP1HighestCellTemperatureModuleNumber_spn11120'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) # Unit = count
    data['HVESP1HighestCellTemperatureCellNumber_spn11121'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) # Unit = count
    data['HVESP1LowestCellTemperatureModuleNumber_spn11122'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) # Unit = count
    data['HVESP1LowestCellTemperatureCellNumber_spn11123'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) # Unit = count
    return data

# HVESP1D10
def PGN_61853(msg, data):
    data['HVESP1HighestCellStateofChargeModuleNumber_spn11124'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) # Unit = count
    data['HVESP1HighestCellStateofChargeCellNumber_spn11125'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) # Unit = count
    data['HVESP1LowestCellStateofChargeModuleNumber_spn11126'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) # Unit = count
    data['HVESP1LowestCellStateofChargeCellNumber_spn11127'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) # Unit = count
    data['HVESP1High-VoltageBusActiveIsolationTestResults_spn11128'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.1) # Unit = ohm/V
    data['HVESP1High-VoltageBusPassiveIsolationTestResults_spn11129'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.1) # Unit = ohm/V
    return data

# HVESP1D11
def PGN_61854(msg, data):
    data['HVESP1BusVoltageNegativetoChassisGroundVoltage_spn11130'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['HVESP1VoltageLevelNegativetoChassisGroundVoltage_spn11131'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['HVESP1ActualChargeRate_spn13065'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.05) # Unit = kW
    return data

# HVESP2S2
def PGN_61855(msg, data):
    data['HVESP2DischargePowerLimitDuetoStateofCharge_spn11154'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP2DischargePowerLimitDuetoBatteryTemperature_spn11155'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESP2DischargePowerLimitDuetoBatteryDiagnosticCondition_spn11156'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HVESP2DischargePowerLimitDuetoBatteryorCellVoltage_spn11157'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['HVESP2DischargePowerLimitDuetoBatteryCurrent_spn11158'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP2DischargePowerLimitDuetoanUndefinedCause_spn11159'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESP2ChargePowerLimitDuetoStateofCharge_spn11160'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP2ChargePowerLimitDuetoBatteryTemperature_spn11161'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESP2ChargePowerLimitDuetoBatteryDiagnosticCondition_spn11162'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HVESP2ChargePowerLimitDuetoBatteryorCellVoltage_spn11163'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['HVESP2ChargePowerLimitDuetoBatteryCurrent_spn11164'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP2ChargePowerLimitDuetoanUndefinedCause_spn11165'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    return data

# HVESP2D1
def PGN_61856(msg, data):
    data['HVESP2AvailableDischargePower_spn11166'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) # Unit = kW
    data['HVESP2AvailableChargePower_spn11167'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) # Unit = kW
    data['HVESP2VoltageLevel_spn11168'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['HVESP2Current_spn11169'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.05) - 1600.0 # Unit = A
    return data

# HVESP2D2
def PGN_61857(msg, data):
    data['HVESP2FastUpdateStateofCharge_spn11170'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.0015625) # Unit = %
    data['HVESP2HighestCellVoltage_spn11171'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.001) # Unit = V
    data['HVESP2LowestCellVoltage_spn11172'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.001) # Unit = V
    data['HVESP2CellVoltageDifferentialStatus_spn11173'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    return data

# HVESP2D3
def PGN_61858(msg, data):
    data['HVESP2HighestCellTemperature_spn11174'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['HVESP2LowestCellTemperature_spn11175'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['HVESP2AverageCellTemperature_spn11176'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['HVESP2CellTemperatureDifferentialStatus_spn11177'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    return data

# HVESP2D4
def PGN_61859(msg, data):
    data['HVESP2DischargeCapacity_spn11178'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.01) # Unit = Ah
    data['HVESP2ChargeCapacity_spn11179'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.01) # Unit = Ah
    data['HVESP2CellBalancingCount_spn11180'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 1.0) # Unit = count
    return data

# HVESP2D5
def PGN_61860(msg, data):
    data['HVESP2DischargeCurrentLimit_spn11181'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) - 1600.0 # Unit = A
    data['HVESP2ChargeCurrentLimit_spn11182'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) - 1600.0 # Unit = A
    data['HVESP2LowestCellStateofCharge_spn11183'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.0015625) # Unit = %
    data['HVESP2HighestCellStateofCharge_spn11184'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.0015625) # Unit = %
    return data

# HVESP2D6
def PGN_61861(msg, data):
    data['HVESP2BusVoltage_spn11185'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['HVESP2IgnitionVoltage_spn11186'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    data['HVESP2IntakeCoolantTemperature_spn11187'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['HVESP2OutletCoolantTemperature_spn11188'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['HVESP2ElectronicsTemperature_spn11189'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['HVESP2Temperature_spn11190'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    return data

# HVESP2S1
def PGN_61862(msg, data):
    data['HVESP2High-VoltageBus(Positive)ContactorState_spn11191'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP2High-VoltageBus(Negative)ContactorState_spn11192'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESP2High-VoltageBusDisconnectForewarning_spn11193'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['HVESP2High-VoltageBusPre-ChargeRelayState_spn11194'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP2CenterofPackContactorState_spn11195'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESP2High-VoltageBusActiveIsolationTestStatus_spn11196'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['HVESP2High-VoltageBusPassiveIsolationTestStatus_spn11197'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['HVESP2HVILStatus_spn11198'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HVESP2InertiaSwitchStatus_spn11199'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['HVESP2StateofChargeStatus_spn11200'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['HVESP2CellBalanceStatus_spn11201'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HVESP2CellBalancingActive_spn11202'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['HVESP2InternalChargerStatus_spn11203'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP2High-VoltageBusConnectionStatus_spn11204'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['HVESP2OperationalStatus_spn11205'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['HVESP2Status1Counter_spn13017'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['HVESP2Status1CRC_spn13018'] = ( enforceMaxV(( (int(msg[14:16], 16))), 255)  * 1.0) # Unit = count
    return data

# HVESP2D7
def PGN_61863(msg, data):
    data['HVESP2DischargeEnergyCapacity_spn11206'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 )), 16449535)  * 0.001) # Unit = kWh
    data['HVESP2ChargeEnergyCapacity_spn11207'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 ) + ((int(msg[10:12], 16)) << 16 )), 16449535)  * 0.001) # Unit = kWh
    data['HVESP2MaximumChargeVoltageLimit_spn11208'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    return data

# HVESP2MS1
def PGN_61864(msg, data):
    data['HVESP2Module1OperationalStatus_spn11209'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP2Module2OperationalStatus_spn11210'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESP2Module3OperationalStatus_spn11211'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HVESP2Module4OperationalStatus_spn11212'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['HVESP2Module5OperationalStatus_spn11213'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP2Module6OperationalStatus_spn11214'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESP2Module7OperationalStatus_spn11215'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HVESP2Module8OperationalStatus_spn11216'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['HVESP2Module9OperationalStatus_spn11217'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP2Module10OperationalStatus_spn11218'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESP2Module11OperationalStatus_spn11219'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HVESP2Module12OperationalStatus_spn11220'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['HVESP2Module13OperationalStatus_spn11221'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP2Module14OperationalStatus_spn11222'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESP2Module15OperationalStatus_spn11223'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HVESP2Module16OperationalStatus_spn11224'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# HVESP2TS1
def PGN_61865(msg, data):
    data['HVESP2ThermalManagementSystemSLIInputPower_spn11225'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.5) # Unit = W
    data['HVESP2ThermalManagementSystemHigh-VoltageInputPower_spn11226'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.5) # Unit = W
    data['HVESP2ThermalManagementSystemCompressorSpeed_spn11227'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 32.0) # Unit = rpm
    data['HVESP2ThermalManagementSystemRelativeHumidty_spn11228'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 0.4) # Unit = %
    data['HVESP2ThermalManagementSystemHeaterStatus_spn11229'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP2ThermalManagementSystemHVILStatus_spn12818'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESP2ThermalManagementSystemMode_spn11230'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['HVESP2ThermalManagementSystemCoolantLevel_spn12899'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    return data

# HVESP2D8
def PGN_61866(msg, data):
    data['HVESP2HighestCellVoltageModuleNumber_spn11231'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) # Unit = count
    data['HVESP2HighestCellVoltageCellNumber_spn11232'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) # Unit = count
    data['HVESP2LowestCellVoltageModuleNumber_spn11233'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) # Unit = count
    data['HVESP2LowestCellVoltageCellNumber_spn11234'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) # Unit = count
    data['HVESP2AverageCellVoltage_spn11235'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.001) # Unit = V
    return data

# HVESP2D9
def PGN_61867(msg, data):
    data['HVESP2HighestCellTemperatureModuleNumber_spn11236'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) # Unit = count
    data['HVESP2HighestCellTemperatureCellNumber_spn11237'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) # Unit = count
    data['HVESP2LowestCellTemperatureModuleNumber_spn11238'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) # Unit = count
    data['HVESP2LowestCellTemperatureCellNumber_spn11239'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) # Unit = count
    return data

# HVESP2D10
def PGN_61868(msg, data):
    data['HVESP2HighestCellStateofChargeModuleNumber_spn11240'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) # Unit = count
    data['HVESP2HighestCellStateofChargeCellNumber_spn11241'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) # Unit = count
    data['HVESP2LowestCellStateofChargeModuleNumber_spn11242'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) # Unit = count
    data['HVESP2LowestCellStateofChargeCellNumber_spn11243'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) # Unit = count
    data['HVESP2High-VoltageBusActiveIsolationTestResults_spn11244'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.1) # Unit = ohm/V
    data['HVESP2High-VoltageBusPassiveIsolationTestResults_spn11245'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.1) # Unit = ohm/V
    return data

# HVESP2D11
def PGN_61869(msg, data):
    data['HVESP2BusVoltageNegativetoChassisGroundVoltage_spn11246'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['HVESP2VoltageLevelNegativetoChassisGroundVoltage_spn11247'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['HVESP2ActualChargeRate_spn13066'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.05) # Unit = kW
    return data

# HVESP3S2
def PGN_61870(msg, data):
    data['HVESP3DischargePowerLimitDuetoStateofCharge_spn11270'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP3DischargePowerLimitDuetoBatteryTemperature_spn11271'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESP3DischargePowerLimitDuetoBatteryDiagnosticCondition_spn11272'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HVESP3DischargePowerLimitDuetoBatteryorCellVoltage_spn11273'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['HVESP3DischargePowerLimitDuetoBatteryCurrent_spn11274'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP3DischargePowerLimitDuetoanUndefinedCause_spn11275'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESP3ChargePowerLimitDuetoStateofCharge_spn11276'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP3ChargePowerLimitDuetoBatteryTemperature_spn11277'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESP3ChargePowerLimitDuetoBatteryDiagnosticCondition_spn11278'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HVESP3ChargePowerLimitDuetoBatteryorCellVoltage_spn11279'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['HVESP3ChargePowerLimitDuetoBatteryCurrent_spn11280'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP3ChargePowerLimitDuetoanUndefinedCause_spn11281'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    return data

# HVESP3D1
def PGN_61871(msg, data):
    data['HVESP3AvailableDischargePower_spn11282'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) # Unit = kW
    data['HVESP3AvailableChargePower_spn11283'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) # Unit = kW
    data['HVESP3VoltageLevel_spn11284'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['HVESP3Current_spn11285'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.05) - 1600.0 # Unit = A
    return data

# HVESP3D2
def PGN_61872(msg, data):
    data['HVESP3FastUpdateStateofCharge_spn11286'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.0015625) # Unit = %
    data['HVESP3HighestCellVoltage_spn11287'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.001) # Unit = V
    data['HVESP3LowestCellVoltage_spn11288'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.001) # Unit = V
    data['HVESP3CellVoltageDifferentialStatus_spn11289'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    return data

# HVESP3D3
def PGN_61873(msg, data):
    data['HVESP3HighestCellTemperature_spn11290'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['HVESP3LowestCellTemperature_spn11291'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['HVESP3AverageCellTemperature_spn11292'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['HVESP3CellTemperatureDifferentialStatus_spn11293'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    return data

# HVESP3D4
def PGN_61874(msg, data):
    data['HVESP3DischargeCapacity_spn11294'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.01) # Unit = Ah
    data['HVESP3ChargeCapacity_spn11295'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.01) # Unit = Ah
    data['HVESP3CellBalancingCount_spn11296'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 1.0) # Unit = count
    return data

# HVESP3D5
def PGN_61875(msg, data):
    data['HVESP3DischargeCurrentLimit_spn11297'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) - 1600.0 # Unit = A
    data['HVESP3ChargeCurrentLimit_spn11298'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) - 1600.0 # Unit = A
    data['HVESP3LowestCellStateofCharge_spn11299'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.0015625) # Unit = %
    data['HVESP3HighestCellStateofCharge_spn11300'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.0015625) # Unit = %
    return data

# HVESP3D6
def PGN_61876(msg, data):
    data['HVESP3BusVoltage_spn11301'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['HVESP3IgnitionVoltage_spn11302'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    data['HVESP3IntakeCoolantTemperature_spn11303'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['HVESP3OutletCoolantTemperature_spn11304'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['HVESP3ElectronicsTemperature_spn11305'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['HVESP3Temperature_spn11306'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    return data

# HVESP3S1
def PGN_61877(msg, data):
    data['HVESP3High-VoltageBus(Positive)ContactorState_spn11307'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP3High-VoltageBus(Negative)ContactorState_spn11308'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESP3High-VoltageBusDisconnectForewarning_spn11309'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['HVESP3High-VoltageBusPre-ChargeRelayState_spn11310'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP3CenterofPackContactorState_spn11311'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESP3High-VoltageBusActiveIsolationTestStatus_spn11312'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['HVESP3High-VoltageBusPassiveIsolationTestStatus_spn11313'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['HVESP3HVILStatus_spn11314'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HVESP3InertiaSwitchStatus_spn11315'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['HVESP3StateofChargeStatus_spn11316'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['HVESP3CellBalanceStatus_spn11317'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HVESP3CellBalancingActive_spn11318'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['HVESP3InternalChargerStatus_spn11319'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP3High-VoltageBusConnectionStatus_spn11320'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['HVESP3OperationalStatus_spn11321'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['HVESP3Status1Counter_spn13019'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['HVESP3Status1CRC_spn13020'] = ( enforceMaxV(( (int(msg[14:16], 16))), 255)  * 1.0) # Unit = count
    return data

# HVESP3D7
def PGN_61878(msg, data):
    data['HVESP3DischargeEnergyCapacity_spn11322'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 )), 16449535)  * 0.001) # Unit = kWh
    data['HVESP3ChargeEnergyCapacity_spn11323'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 ) + ((int(msg[10:12], 16)) << 16 )), 16449535)  * 0.001) # Unit = kWh
    data['HVESP3MaximumChargeVoltageLimit_spn11324'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    return data

# HVESP3MS1
def PGN_61879(msg, data):
    data['HVESP3Module1OperationalStatus_spn11325'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP3Module2OperationalStatus_spn11326'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESP3Module3OperationalStatus_spn11327'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HVESP3Module4OperationalStatus_spn11328'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['HVESP3Module5OperationalStatus_spn11329'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP3Module6OperationalStatus_spn11330'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESP3Module7OperationalStatus_spn11331'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HVESP3Module8OperationalStatus_spn11332'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['HVESP3Module9OperationalStatus_spn11333'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP3Module10OperationalStatus_spn11334'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESP3Module11OperationalStatus_spn11335'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HVESP3Module12OperationalStatus_spn11336'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['HVESP3Module13OperationalStatus_spn11337'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP3Module14OperationalStatus_spn11338'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESP3Module15OperationalStatus_spn11339'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HVESP3Module16OperationalStatus_spn11340'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# HVESP3TS1
def PGN_61880(msg, data):
    data['HVESP3ThermalManagementSystemSLIInputPower_spn11341'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.5) # Unit = W
    data['HVESP3ThermalManagementSystemHigh-VoltageInputPower_spn11342'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.5) # Unit = W
    data['HVESP3ThermalManagementSystemCompressorSpeed_spn11343'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 32.0) # Unit = rpm
    data['HVESP3ThermalManagementSystemRelativeHumidty_spn11344'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 0.4) # Unit = %
    data['HVESP3ThermalManagementSystemHeaterStatus_spn11345'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP3ThermalManagementSystemHVILStatus_spn12817'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESP3ThermalManagementSystemMode_spn11346'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['HVESP3ThermalManagementSystemCoolantLevel_spn12900'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    return data

# HVESP3D8
def PGN_61881(msg, data):
    data['HVESP3HighestCellVoltageModuleNumber_spn11347'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) # Unit = count
    data['HVESP3HighestCellVoltageCellNumber_spn11348'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) # Unit = count
    data['HVESP3LowestCellVoltageModuleNumber_spn11349'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) # Unit = count
    data['HVESP3LowestCellVoltageCellNumber_spn11350'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) # Unit = count
    data['HVESP3AverageCellVoltage_spn11351'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.001) # Unit = V
    return data

# HVESP3D9
def PGN_61882(msg, data):
    data['HVESP3HighestCellTemperatureModuleNumber_spn11352'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) # Unit = count
    data['HVESP3HighestCellTemperatureCellNumber_spn11353'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) # Unit = count
    data['HVESP3LowestCellTemperatureModuleNumber_spn11354'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) # Unit = count
    data['HVESP3LowestCellTemperatureCellNumber_spn11355'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) # Unit = count
    return data

# HVESP3D10
def PGN_61883(msg, data):
    data['HVESP3HighestCellStateofChargeModuleNumber_spn11356'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) # Unit = count
    data['HVESP3HighestCellStateofChargeCellNumber_spn11357'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) # Unit = count
    data['HVESP3LowestCellStateofChargeModuleNumber_spn11358'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) # Unit = count
    data['HVESP3LowestCellStateofChargeCellNumber_spn11359'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) # Unit = count
    data['HVESP3High-VoltageBusActiveIsolationTestResults_spn11360'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.1) # Unit = ohm/V
    data['HVESP3High-VoltageBusPassiveIsolationTestResults_spn11361'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.1) # Unit = ohm/V
    return data

# HVESP3D11
def PGN_61884(msg, data):
    data['HVESP3BusVoltageNegativetoChassisGroundVoltage_spn11362'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['HVESP3VoltageLevelNegativetoChassisGroundVoltage_spn11363'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['HVESP3ActualChargeRate_spn13067'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.05) # Unit = kW
    return data

# HVESP4S2
def PGN_61885(msg, data):
    data['HVESP4DischargePowerLimitDuetoStateofCharge_spn11386'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP4DischargePowerLimitDuetoBatteryTemperature_spn11387'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESP4DischargePowerLimitDuetoBatteryDiagnosticCondition_spn11388'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HVESP4DischargePowerLimitDuetoBatteryorCellVoltage_spn11389'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['HVESP4DischargePowerLimitDuetoBatteryCurrent_spn11390'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP4DischargePowerLimitDuetoanUndefinedCause_spn11391'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESP4ChargePowerLimitDuetoStateofCharge_spn11392'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP4ChargePowerLimitDuetoBatteryTemperature_spn11393'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESP4ChargePowerLimitDuetoBatteryDiagnosticCondition_spn11394'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HVESP4ChargePowerLimitDuetoBatteryorCellVoltage_spn11395'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['HVESP4ChargePowerLimitDuetoBatteryCurrent_spn11396'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP4ChargePowerLimitDuetoanUndefinedCause_spn11397'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    return data

# HVESP4D1
def PGN_61886(msg, data):
    data['HVESP4AvailableDischargePower_spn11398'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) # Unit = kW
    data['HVESP4AvailableChargePower_spn11399'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) # Unit = kW
    data['HVESP4VoltageLevel_spn11400'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['HVESP4Current_spn11401'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.05) - 1600.0 # Unit = A
    return data

# HVESP4D2
def PGN_61887(msg, data):
    data['HVESP4FastUpdateStateofCharge_spn11402'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.0015625) # Unit = %
    data['HVESP4HighestCellVoltage_spn11403'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.001) # Unit = V
    data['HVESP4LowestCellVoltage_spn11404'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.001) # Unit = V
    data['HVESP4CellVoltageDifferentialStatus_spn11405'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    return data

# HVESP4D3
def PGN_61888(msg, data):
    data['HVESP4HighestCellTemperature_spn11406'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['HVESP4LowestCellTemperature_spn11407'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['HVESP4AverageCellTemperature_spn11408'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['HVESP4CellTemperatureDifferentialStatus_spn11409'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    return data

# HVESP4D4
def PGN_61889(msg, data):
    data['HVESP4DischargeCapacity_spn11410'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.01) # Unit = Ah
    data['HVESP4ChargeCapacity_spn11411'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.01) # Unit = Ah
    data['HVESP4CellBalancingCount_spn11412'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 1.0) # Unit = count
    return data

# HVESP4D5
def PGN_61890(msg, data):
    data['HVESP4DischargeCurrentLimit_spn11413'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) - 1600.0 # Unit = A
    data['HVESP4ChargeCurrentLimit_spn11414'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) - 1600.0 # Unit = A
    data['HVESP4LowestCellStateofCharge_spn11415'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.0015625) # Unit = %
    data['HVESP4HighestCellStateofCharge_spn11416'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.0015625) # Unit = %
    return data

# HVESP4D6
def PGN_61891(msg, data):
    data['HVESP4BusVoltage_spn11417'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['HVESP4IgnitionVoltage_spn11418'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    data['HVESP4IntakeCoolantTemperature_spn11419'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['HVESP4OutletCoolantTemperature_spn11420'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['HVESP4ElectronicsTemperature_spn11421'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['HVESP4Temperature_spn11422'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    return data

# HVESP4S1
def PGN_61892(msg, data):
    data['HVESP4High-VoltageBus(Positive)ContactorState_spn11423'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP4High-VoltageBus(Negative)ContactorState_spn11424'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESP4High-VoltageBusDisconnectForewarning_spn11425'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['HVESP4High-VoltageBusPre-ChargeRelayState_spn11426'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP4CenterofPackContactorState_spn11427'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESP4High-VoltageBusActiveIsolationTestStatus_spn11428'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['HVESP4High-VoltageBusPassiveIsolationTestStatus_spn11429'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['HVESP4HVILStatus_spn11430'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HVESP4InertiaSwitchStatus_spn11431'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['HVESP4StateofChargeStatus_spn11432'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['HVESP4CellBalanceStatus_spn11433'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HVESP4CellBalancingActive_spn11434'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['HVESP4InternalChargerStatus_spn11435'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP4High-VoltageBusConnectionStatus_spn11436'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['HVESP4OperationalStatus_spn11437'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['HVESP4Status1Counter_spn13021'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['HVESP4Status1CRC_spn13022'] = ( enforceMaxV(( (int(msg[14:16], 16))), 255)  * 1.0) # Unit = count
    return data

# HVESP4D7
def PGN_61893(msg, data):
    data['HVESP4DischargeEnergyCapacity_spn11438'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 )), 16449535)  * 0.001) # Unit = kWh
    data['HVESP4ChargeEnergyCapacity_spn11439'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 ) + ((int(msg[10:12], 16)) << 16 )), 16449535)  * 0.001) # Unit = kWh
    data['HVESP4MaximumChargeVoltageLimit_spn11440'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    return data

# HVESP4MS1
def PGN_61894(msg, data):
    data['HVESP4Module1OperationalStatus_spn11441'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP4Module2OperationalStatus_spn11442'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESP4Module3OperationalStatus_spn11443'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HVESP4Module4OperationalStatus_spn11444'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['HVESP4Module5OperationalStatus_spn11445'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP4Module6OperationalStatus_spn11446'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESP4Module7OperationalStatus_spn11447'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HVESP4Module8OperationalStatus_spn11448'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['HVESP4Module9OperationalStatus_spn11449'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP4Module10OperationalStatus_spn11450'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESP4Module11OperationalStatus_spn11451'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HVESP4Module12OperationalStatus_spn11452'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['HVESP4Module13OperationalStatus_spn11453'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP4Module14OperationalStatus_spn11454'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESP4Module15OperationalStatus_spn11455'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HVESP4Module16OperationalStatus_spn11456'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# HVESP4TS1
def PGN_61895(msg, data):
    data['HVESP4ThermalManagementSystemSLIInputPower_spn11457'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.5) # Unit = W
    data['HVESP4ThermalManagementSystemHigh-VoltageInputPower_spn11458'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.5) # Unit = W
    data['HVESP4ThermalManagementSystemCompressorSpeed_spn11459'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 32.0) # Unit = rpm
    data['HVESP4ThermalManagementSystemRelativeHumidty_spn11460'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 0.4) # Unit = %
    data['HVESP4ThermalManagementSystemHeaterStatus_spn11461'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP4ThermalManagementSystemHVILStatus_spn12816'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESP4ThermalManagementSystemMode_spn11462'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['HVESP4ThermalManagementSystemCoolantLevel_spn12901'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    return data

# HVESP4D8
def PGN_61896(msg, data):
    data['HVESP4HighestCellVoltageModuleNumber_spn11463'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) # Unit = count
    data['HVESP4HighestCellVoltageCellNumber_spn11464'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) # Unit = count
    data['HVESP4LowestCellVoltageModuleNumber_spn11465'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) # Unit = count
    data['HVESP4LowestCellVoltageCellNumber_spn11466'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) # Unit = count
    data['HVESP4AverageCellVoltage_spn11467'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.001) # Unit = V
    return data

# HVESP4D9
def PGN_61897(msg, data):
    data['HVESP4HighestCellTemperatureModuleNumber_spn11468'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) # Unit = count
    data['HVESP4HighestCellTemperatureCellNumber_spn11469'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) # Unit = count
    data['HVESP4LowestCellTemperatureModuleNumber_spn11470'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) # Unit = count
    data['HVESP4LowestCellTemperatureCellNumber_spn11471'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) # Unit = count
    return data

# HVESP4D10
def PGN_61898(msg, data):
    data['HVESP4HighestCellStateofChargeModuleNumber_spn11472'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) # Unit = count
    data['HVESP4HighestCellStateofChargeCellNumber_spn11473'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) # Unit = count
    data['HVESP4LowestCellStateofChargeModuleNumber_spn11474'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) # Unit = count
    data['HVESP4LowestCellStateofChargeCellNumber_spn11475'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) # Unit = count
    data['HVESP4High-VoltageBusActiveIsolationTestResults_spn11476'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.1) # Unit = ohm/V
    data['HVESP4High-VoltageBusPassiveIsolationTestResults_spn11477'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.1) # Unit = ohm/V
    return data

# HVESP4D11
def PGN_61899(msg, data):
    data['HVESP4BusVoltageNegativetoChassisGroundVoltage_spn11478'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['HVESP4VoltageLevelNegativetoChassisGroundVoltage_spn11479'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['HVESP4ActualChargeRate_spn13068'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.05) # Unit = kW
    return data

# HVESP5S2
def PGN_61900(msg, data):
    data['HVESP5DischargePowerLimitDuetoStateofCharge_spn11502'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP5DischargePowerLimitDuetoBatteryTemperature_spn11503'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESP5DischargePowerLimitDuetoBatteryDiagnosticCondition_spn11504'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HVESP5DischargePowerLimitDuetoBatteryorCellVoltage_spn11505'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['HVESP5DischargePowerLimitDuetoBatteryCurrent_spn11506'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP5DischargePowerLimitDuetoanUndefinedCause_spn11507'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESP5ChargePowerLimitDuetoStateofCharge_spn11508'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP5ChargePowerLimitDuetoBatteryTemperature_spn11509'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESP5ChargePowerLimitDuetoBatteryDiagnosticCondition_spn11510'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HVESP5ChargePowerLimitDuetoBatteryorCellVoltage_spn11511'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['HVESP5ChargePowerLimitDuetoBatteryCurrent_spn11512'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP5ChargePowerLimitDuetoanUndefinedCause_spn11513'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    return data

# HVESP5D1
def PGN_61901(msg, data):
    data['HVESP5AvailableDischargePower_spn11514'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) # Unit = kW
    data['HVESP5AvailableChargePower_spn11515'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) # Unit = kW
    data['HVESP5VoltageLevel_spn11516'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['HVESP5Current_spn11517'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.05) - 1600.0 # Unit = A
    return data

# HVESP5D2
def PGN_61902(msg, data):
    data['HVESP5FastUpdateStateofCharge_spn11518'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.0015625) # Unit = %
    data['HVESP5HighestCellVoltage_spn11519'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.001) # Unit = V
    data['HVESP5LowestCellVoltage_spn11520'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.001) # Unit = V
    data['HVESP5CellVoltageDifferentialStatus_spn11521'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    return data

# HVESP5D3
def PGN_61903(msg, data):
    data['HVESP5HighestCellTemperature_spn11522'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['HVESP5LowestCellTemperature_spn11523'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['HVESP5AverageCellTemperature_spn11524'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['HVESP5CellTemperatureDifferentialStatus_spn11525'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    return data

# HVESP5D4
def PGN_61904(msg, data):
    data['HVESP5DischargeCapacity_spn11526'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.01) # Unit = Ah
    data['HVESP5ChargeCapacity_spn11527'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.01) # Unit = Ah
    data['HVESP5CellBalancingCount_spn11528'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 1.0) # Unit = count
    return data

# HVESP5D5
def PGN_61905(msg, data):
    data['HVESP5DischargeCurrentLimit_spn11529'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) - 1600.0 # Unit = A
    data['HVESP5ChargeCurrentLimit_spn11530'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) - 1600.0 # Unit = A
    data['HVESP5LowestCellStateofCharge_spn11531'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.0015625) # Unit = %
    data['HVESP5HighestCellStateofCharge_spn11532'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.0015625) # Unit = %
    return data

# HVESP5D6
def PGN_61906(msg, data):
    data['HVESP5BusVoltage_spn11533'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['HVESP5IgnitionVoltage_spn11534'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    data['HVESP5IntakeCoolantTemperature_spn11535'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['HVESP5OutletCoolantTemperature_spn11536'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['HVESP5ElectronicsTemperature_spn11537'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['HVESP5Temperature_spn11538'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    return data

# HVESP5S1
def PGN_61907(msg, data):
    data['HVESP5High-VoltageBus(Positive)ContactorState_spn11539'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP5High-VoltageBus(Negative)ContactorState_spn11540'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESP5High-VoltageBusDisconnectForewarning_spn11541'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['HVESP5High-VoltageBusPre-ChargeRelayState_spn11542'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP5CenterofPackContactorState_spn11543'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESP5High-VoltageBusActiveIsolationTestStatus_spn11544'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['HVESP5High-VoltageBusPassiveIsolationTestStatus_spn11545'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['HVESP5HVILStatus_spn11546'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HVESP5InertiaSwitchStatus_spn11547'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['HVESP5StateofChargeStatus_spn11548'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['HVESP5CellBalanceStatus_spn11549'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HVESP5CellBalancingActive_spn11550'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['HVESP5InternalChargerStatus_spn11551'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP5High-VoltageBusConnectionStatus_spn11552'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['HVESP5OperationalStatus_spn11553'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['HVESP5Status1Counter_spn13023'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['HVESP5Status1CRC_spn13024'] = ( enforceMaxV(( (int(msg[14:16], 16))), 255)  * 1.0) # Unit = count
    return data

# HVESP5D7
def PGN_61908(msg, data):
    data['HVESP5DischargeEnergyCapacity_spn11554'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 )), 16449535)  * 0.001) # Unit = kWh
    data['HVESP5ChargeEnergyCapacity_spn11555'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 ) + ((int(msg[10:12], 16)) << 16 )), 16449535)  * 0.001) # Unit = kWh
    data['HVESP5MaximumChargeVoltageLimit_spn11556'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    return data

# HVESP5MS1
def PGN_61909(msg, data):
    data['HVESP5Module1OperationalStatus_spn11557'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP5Module2OperationalStatus_spn11558'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESP5Module3OperationalStatus_spn11559'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HVESP5Module4OperationalStatus_spn11560'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['HVESP5Module5OperationalStatus_spn11561'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP5Module6OperationalStatus_spn11562'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESP5Module7OperationalStatus_spn11563'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HVESP5Module8OperationalStatus_spn11564'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['HVESP5Module9OperationalStatus_spn11565'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP5Module10OperationalStatus_spn11566'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESP5Module11OperationalStatus_spn11567'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HVESP5Module12OperationalStatus_spn11568'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['HVESP5Module13OperationalStatus_spn11569'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP5Module14OperationalStatus_spn11570'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESP5Module15OperationalStatus_spn11571'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HVESP5Module16OperationalStatus_spn11572'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# HVESP5TS1
def PGN_61910(msg, data):
    data['HVESP5ThermalManagementSystemSLIInputPower_spn11573'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.5) # Unit = W
    data['HVESP5ThermalManagementSystemHigh-VoltageInputPower_spn11574'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.5) # Unit = W
    data['HVESP5ThermalManagementSystemCompressorSpeed_spn11575'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 32.0) # Unit = rpm
    data['HVESP5ThermalManagementSystemRelativeHumidty_spn11576'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 0.4) # Unit = %
    data['HVESP5ThermalManagementSystemHeaterStatus_spn11577'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP5ThermalManagementSystemHVILStatus_spn12815'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESP5ThermalManagementSystemMode_spn11578'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['HVESP5ThermalManagementSystemCoolantLevel_spn12902'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    return data

# HVESP5D8
def PGN_61911(msg, data):
    data['HVESP5HighestCellVoltageModuleNumber_spn11579'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) # Unit = count
    data['HVESP5HighestCellVoltageCellNumber_spn11580'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) # Unit = count
    data['HVESP5LowestCellVoltageModuleNumber_spn11581'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) # Unit = count
    data['HVESP5LowestCellVoltageCellNumber_spn11582'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) # Unit = count
    data['HVESP5AverageCellVoltage_spn11583'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.001) # Unit = V
    return data

# HVESP5D9
def PGN_61912(msg, data):
    data['HVESP5HighestCellTemperatureModuleNumber_spn11584'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) # Unit = count
    data['HVESP5HighestCellTemperatureCellNumber_spn11585'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) # Unit = count
    data['HVESP5LowestCellTemperatureModuleNumber_spn11586'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) # Unit = count
    data['HVESP5LowestCellTemperatureCellNumber_spn11587'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) # Unit = count
    return data

# HVESP5D10
def PGN_61913(msg, data):
    data['HVESP5HighestCellStateofChargeModuleNumber_spn11588'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) # Unit = count
    data['HVESP5HighestCellStateofChargeCellNumber_spn11589'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) # Unit = count
    data['HVESP5LowestCellStateofChargeModuleNumber_spn11590'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) # Unit = count
    data['HVESP5LowestCellStateofChargeCellNumber_spn11591'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) # Unit = count
    data['HVESP5High-VoltageBusActiveIsolationTestResults_spn11592'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.1) # Unit = ohm/V
    data['HVESP5High-VoltageBusPassiveIsolationTestResults_spn11593'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.1) # Unit = ohm/V
    return data

# HVESP5D11
def PGN_61914(msg, data):
    data['HVESP5BusVoltageNegativetoChassisGroundVoltage_spn11594'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['HVESP5VoltageLevelNegativetoChassisGroundVoltage_spn11595'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['HVESP5ActualChargeRate_spn13069'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.05) # Unit = kW
    return data

# HVESP6S2
def PGN_61915(msg, data):
    data['HVESP6DischargePowerLimitDuetoStateofCharge_spn11618'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP6DischargePowerLimitDuetoBatteryTemperature_spn11619'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESP6DischargePowerLimitDuetoBatteryDiagnosticCondition_spn11620'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HVESP6DischargePowerLimitDuetoBatteryorCellVoltage_spn11621'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['HVESP6DischargePowerLimitDuetoBatteryCurrent_spn11622'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP6DischargePowerLimitDuetoanUndefinedCause_spn11623'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESP6ChargePowerLimitDuetoStateofCharge_spn11624'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP6ChargePowerLimitDuetoBatteryTemperature_spn11625'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESP6ChargePowerLimitDuetoBatteryDiagnosticCondition_spn11626'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HVESP6ChargePowerLimitDuetoBatteryorCellVoltage_spn11627'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['HVESP6ChargePowerLimitDuetoBatteryCurrent_spn11628'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP6ChargePowerLimitDuetoanUndefinedCause_spn11629'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    return data

# HVESP6D1
def PGN_61916(msg, data):
    data['HVESP6AvailableDischargePower_spn11630'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) # Unit = kW
    data['HVESP6AvailableChargePower_spn11631'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) # Unit = kW
    data['HVESP6VoltageLevel_spn11632'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['HVESP6Current_spn11633'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.05) - 1600.0 # Unit = A
    return data

# HVESP6D2
def PGN_61917(msg, data):
    data['HVESP6FastUpdateStateofCharge_spn11634'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.0015625) # Unit = %
    data['HVESP6HighestCellVoltage_spn11635'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.001) # Unit = V
    data['HVESP6LowestCellVoltage_spn11636'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.001) # Unit = V
    data['HVESP6CellVoltageDifferentialStatus_spn11637'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    return data

# HVESP6D3
def PGN_61918(msg, data):
    data['HVESP6HighestCellTemperature_spn11638'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['HVESP6LowestCellTemperature_spn11639'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['HVESP6AverageCellTemperature_spn11640'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['HVESP6CellTemperatureDifferentialStatus_spn11641'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    return data

# HVESP6D4
def PGN_61919(msg, data):
    data['HVESP6DischargeCapacity_spn11642'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.01) # Unit = Ah
    data['HVESP6ChargeCapacity_spn11643'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.01) # Unit = Ah
    data['HVESP6CellBalancingCount_spn11644'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 1.0) # Unit = count
    return data

# HVESP6D5
def PGN_61920(msg, data):
    data['HVESP6DischargeCurrentLimit_spn11645'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) - 1600.0 # Unit = A
    data['HVESP6ChargeCurrentLimit_spn11646'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) - 1600.0 # Unit = A
    data['HVESP6LowestCellStateofCharge_spn11647'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.0015625) # Unit = %
    data['HVESP6HighestCellStateofCharge_spn11648'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.0015625) # Unit = %
    return data

# HVESP6D6
def PGN_61921(msg, data):
    data['HVESP6BusVoltage_spn11649'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['HVESP6IgnitionVoltage_spn11650'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    data['HVESP6IntakeCoolantTemperature_spn11651'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['HVESP6OutletCoolantTemperature_spn11652'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['HVESP6ElectronicsTemperature_spn11653'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['HVESP6Temperature_spn11654'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    return data

# HVESP6S1
def PGN_61922(msg, data):
    data['HVESP6High-VoltageBus(Positive)ContactorState_spn11655'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP6High-VoltageBus(Negative)ContactorState_spn11656'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESP6High-VoltageBusDisconnectForewarning_spn11657'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['HVESP6High-VoltageBusPre-ChargeRelayState_spn11658'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP6CenterofPackContactorState_spn11659'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESP6High-VoltageBusActiveIsolationTestStatus_spn11660'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['HVESP6High-VoltageBusPassiveIsolationTestStatus_spn11661'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['HVESP6HVILStatus_spn11662'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HVESP6InertiaSwitchStatus_spn11663'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['HVESP6StateofChargeStatus_spn11664'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['HVESP6CellBalanceStatus_spn11665'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HVESP6CellBalancingActive_spn11666'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['HVESP6InternalChargerStatus_spn11667'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP6High-VoltageBusConnectionStatus_spn11668'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['HVESP6OperationalStatus_spn11669'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['HVESP6Status1Counter_spn13025'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['HVESP6Status1CRC_spn13026'] = ( enforceMaxV(( (int(msg[14:16], 16))), 255)  * 1.0) # Unit = count
    return data

# HVESP6D7
def PGN_61923(msg, data):
    data['HVESP6DischargeEnergyCapacity_spn11670'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 )), 16449535)  * 0.001) # Unit = kWh
    data['HVESP6ChargeEnergyCapacity_spn11671'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 ) + ((int(msg[10:12], 16)) << 16 )), 16449535)  * 0.001) # Unit = kWh
    data['HVESP6MaximumChargeVoltageLimit_spn11672'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    return data

# HVESP6MS1
def PGN_61924(msg, data):
    data['HVESP6Module1OperationalStatus_spn11673'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP6Module2OperationalStatus_spn11674'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESP6Module3OperationalStatus_spn11675'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HVESP6Module4OperationalStatus_spn11676'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['HVESP6Module5OperationalStatus_spn11677'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP6Module6OperationalStatus_spn11678'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESP6Module7OperationalStatus_spn11679'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HVESP6Module8OperationalStatus_spn11680'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['HVESP6Module9OperationalStatus_spn11681'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP6Module10OperationalStatus_spn11682'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESP6Module11OperationalStatus_spn11683'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HVESP6Module12OperationalStatus_spn11684'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['HVESP6Module13OperationalStatus_spn11685'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP6Module14OperationalStatus_spn11686'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESP6Module15OperationalStatus_spn11687'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HVESP6Module16OperationalStatus_spn11688'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# HVESP6TS1
def PGN_61925(msg, data):
    data['HVESP6ThermalManagementSystemSLIInputPower_spn11689'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.5) # Unit = W
    data['HVESP6ThermalManagementSystemHigh-VoltageInputPower_spn11690'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.5) # Unit = W
    data['HVESP6ThermalManagementSystemCompressorSpeed_spn11691'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 32.0) # Unit = rpm
    data['HVESP6ThermalManagementSystemRelativeHumidty_spn11692'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 0.4) # Unit = %
    data['HVESP6ThermalManagementSystemHeaterStatus_spn11693'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESP6ThermalManagementSystemHVILStatus_spn12814'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESP6ThermalManagementSystemMode_spn11694'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['HVESP6ThermalManagementSystemCoolantLevel_spn12903'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    return data

# HVESP6D8
def PGN_61926(msg, data):
    data['HVESP6HighestCellVoltageModuleNumber_spn11695'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) # Unit = count
    data['HVESP6HighestCellVoltageCellNumber_spn11696'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) # Unit = count
    data['HVESP6LowestCellVoltageModuleNumber_spn11697'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) # Unit = count
    data['HVESP6LowestCellVoltageCellNumber_spn11698'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) # Unit = count
    data['HVESP6AverageCellVoltage_spn11699'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.001) # Unit = V
    return data

# HVESP6D9
def PGN_61927(msg, data):
    data['HVESP6HighestCellTemperatureModuleNumber_spn11700'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) # Unit = count
    data['HVESP6HighestCellTemperatureCellNumber_spn11701'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) # Unit = count
    data['HVESP6LowestCellTemperatureModuleNumber_spn11702'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) # Unit = count
    data['HVESP6LowestCellTemperatureCellNumber_spn11703'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) # Unit = count
    return data

# HVESP6D10
def PGN_61928(msg, data):
    data['HVESP6HighestCellStateofChargeModuleNumber_spn11704'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) # Unit = count
    data['HVESP6HighestCellStateofChargeCellNumber_spn11705'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) # Unit = count
    data['HVESP6LowestCellStateofChargeModuleNumber_spn11706'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) # Unit = count
    data['HVESP6LowestCellStateofChargeCellNumber_spn11707'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) # Unit = count
    data['HVESP6High-VoltageBusActiveIsolationTestResults_spn11708'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.1) # Unit = ohm/V
    data['HVESP6High-VoltageBusPassiveIsolationTestResults_spn11709'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.1) # Unit = ohm/V
    return data

# HVESP6D11
def PGN_61929(msg, data):
    data['HVESP6BusVoltageNegativetoChassisGroundVoltage_spn11710'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['HVESP6VoltageLevelNegativetoChassisGroundVoltage_spn11711'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['HVESP6ActualChargeRate_spn13070'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.05) # Unit = kW
    return data

# MG3IMF1
def PGN_61930(msg, data):
    data['Motor/Generator3InverterModeFeedback1CRC_spn11815'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator3InverterModeFeedback1Counter_spn11816'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator3InverterControlLimitsOverrideMode_spn11817'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator3InverterControlSetpointMode_spn11818'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00011111)), 31)  * 1.0) # Unit = bit
    data['Motor/Generator3InverterHVILStatus_spn11805'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b01100000) >> 5)), 3)  * 1.0) # Unit = bit
    return data

# MG3ILAP
def PGN_61931(msg, data):
    data['Motor/Generator3InverterLimitsActivePowerCRC_spn11833'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator3InverterLimitsActivePowerCounter_spn11834'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator3InverterLimitsActiveMechanicalPowerMaximum_spn11835'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4) + ((int(msg[4:6], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator3InverterLimitsActiveMechanicalPowerMinimum_spn11836'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator3InverterLimitsActiveDCSidePowerMaximum_spn11837'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11110000) >> 4) + ((int(msg[10:12], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator3InverterLimitsActiveDCSidePowerMinimum_spn11838'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    return data

# MG3ILAM
def PGN_61932(msg, data):
    data['Motor/Generator3InverterLimitsActiveMechanicalCRC_spn11845'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator3InverterLimitsActiveMechanicalCounter_spn11846'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator3InverterLimitsActiveTorqueMaximum_spn11847'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4) + ((int(msg[4:6], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator3InverterLimitsActiveTorqueMinimum_spn11848'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator3InverterLimitsActiveSpeedMaximum_spn11849'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11110000) >> 4) + ((int(msg[10:12], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator3InverterLimitsActiveSpeedMinimum_spn11850'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    return data

# MG3ILADC
def PGN_61933(msg, data):
    data['Motor/Generator3InverterLimitsActiveDCSideCRC_spn11861'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator3InverterLimitsActiveDCSideCounter_spn11862'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator3InverterLimitsActiveDCSideVoltageMaximum_spn11863'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4) + ((int(msg[4:6], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator3InverterLimitsActiveDCSideVoltageMinimum_spn11864'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator3InverterLimitsActiveDCSideCurrentMaximum_spn11865'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11110000) >> 4) + ((int(msg[10:12], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator3InverterLimitsActiveDCSideCurrentMinimum_spn11866'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    return data

# MG3ILV
def PGN_61934(msg, data):
    data['Motor/Generator3InverterSwitchedIgnitionVoltage_spn11806'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['Motor/Generator3InverterUnswitchedSLIVoltage_spn11807'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    return data

# MG3IS2
def PGN_61935(msg, data):
    data['Motor/Generator3InverterStatus2CRC_spn11874'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator3InverterStatus2Counter_spn11875'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator3AvailableMaximumTorque_spn11876'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4) + ((int(msg[4:6], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator3AvailableMinimumTorque_spn11877'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    return data

# MG3IRLA1
def PGN_61936(msg, data):
    data['Motor/Generator3InverterRateLimitsActive1CRC_spn11908'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator3InverterRateLimitsActive1Counter_spn11909'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator3InverterRateLimitsActiveAbsoluteSpeedRateLimit_spn11910'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4) + ((int(msg[4:6], 16)) << 4 )), 1004)  * 1.0) # Unit = %/s
    return data

# MG4IMF1
def PGN_61937(msg, data):
    data['Motor/Generator4InverterModeFeedback1CRC_spn11933'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator4InverterModeFeedback1Counter_spn11934'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator4InverterControlLimitsOverrideMode_spn11935'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator4InverterControlSetpointMode_spn11936'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00011111)), 31)  * 1.0) # Unit = bit
    data['Motor/Generator4InverterHVILStatus_spn11923'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b01100000) >> 5)), 3)  * 1.0) # Unit = bit
    return data

# MG4ILAP
def PGN_61938(msg, data):
    data['Motor/Generator4InverterLimitsActivePowerCRC_spn11951'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator4InverterLimitsActivePowerCounter_spn11952'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator4InverterLimitsActiveMechanicalPowerMaximum_spn11953'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4) + ((int(msg[4:6], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator4InverterLimitsActiveMechanicalPowerMinimum_spn11954'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator4InverterLimitsActiveDCSidePowerMaximum_spn11955'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11110000) >> 4) + ((int(msg[10:12], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator4InverterLimitsActiveDCSidePowerMinimum_spn11956'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    return data

# MG4ILAM
def PGN_61939(msg, data):
    data['Motor/Generator4InverterLimitsActiveMechanicalCRC_spn11963'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator4InverterLimitsActiveMechanicalCounter_spn11964'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator4InverterLimitsActiveTorqueMaximum_spn11965'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4) + ((int(msg[4:6], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator4InverterLimitsActiveTorqueMinimum_spn11966'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator4InverterLimitsActiveSpeedMaximum_spn11967'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11110000) >> 4) + ((int(msg[10:12], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator4InverterLimitsActiveSpeedMinimum_spn11968'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    return data

# MG4ILADC
def PGN_61940(msg, data):
    data['Motor/Generator4InverterLimitsActiveDCSideCRC_spn11979'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator4InverterLimitsActiveDCSideCounter_spn11980'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator4InverterLimitsActiveDCSideVoltageMaximum_spn11981'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4) + ((int(msg[4:6], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator4InverterLimitsActiveDCSideVoltageMinimum_spn11982'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator4InverterLimitsActiveDCSideCurrentMaximum_spn11983'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11110000) >> 4) + ((int(msg[10:12], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator4InverterLimitsActiveDCSideCurrentMinimum_spn11984'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    return data

# MG4ILV
def PGN_61941(msg, data):
    data['Motor/Generator4InverterSwitchedIgnitionVoltage_spn11924'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['Motor/Generator4InverterUnswitchedSLIVoltage_spn11925'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    return data

# MG4IS2
def PGN_61942(msg, data):
    data['Motor/Generator4InverterStatus2CRC_spn11992'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator4InverterStatus2Counter_spn11993'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator4AvailableMaximumTorque_spn11994'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4) + ((int(msg[4:6], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator4AvailableMinimumTorque_spn11995'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    return data

# MG4IRLA1
def PGN_61943(msg, data):
    data['Motor/Generator4InverterRateLimitsActive1CRC_spn12026'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator4InverterRateLimitsActive1Counter_spn12027'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator4InverterRateLimitsActiveAbsoluteSpeedRateLimit_spn12028'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4) + ((int(msg[4:6], 16)) << 4 )), 1004)  * 1.0) # Unit = %/s
    return data

# MG5IMF1
def PGN_61944(msg, data):
    data['Motor/Generator5InverterModeFeedback1CRC_spn12051'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator5InverterModeFeedback1Counter_spn12052'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator5InverterControlLimitsOverrideMode_spn12053'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator5InverterControlSetpointMode_spn12054'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00011111)), 31)  * 1.0) # Unit = bit
    data['Motor/Generator5InverterHVILStatus_spn12041'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b01100000) >> 5)), 3)  * 1.0) # Unit = bit
    return data

# MG5ILAP
def PGN_61945(msg, data):
    data['Motor/Generator5InverterLimitsActivePowerCRC_spn12069'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator5InverterLimitsActivePowerCounter_spn12070'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator5InverterLimitsActiveMechanicalPowerMaximum_spn12071'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4) + ((int(msg[4:6], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator5InverterLimitsActiveMechanicalPowerMinimum_spn12072'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator5InverterLimitsActiveDCSidePowerMaximum_spn12073'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11110000) >> 4) + ((int(msg[10:12], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator5InverterLimitsActiveDCSidePowerMinimum_spn12074'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    return data

# MG5ILAM
def PGN_61946(msg, data):
    data['Motor/Generator5InverterLimitsActiveMechanicalCRC_spn12081'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator5InverterLimitsActiveMechanicalCounter_spn12082'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator5InverterLimitsActiveTorqueMaximum_spn12083'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4) + ((int(msg[4:6], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator5InverterLimitsActiveTorqueMinimum_spn12084'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator5InverterLimitsActiveSpeedMaximum_spn12085'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11110000) >> 4) + ((int(msg[10:12], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator5InverterLimitsActiveSpeedMinimum_spn12086'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    return data

# MG5ILADC
def PGN_61947(msg, data):
    data['Motor/Generator5InverterLimitsActiveDCSideCRC_spn12097'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator5InverterLimitsActiveDCSideCounter_spn12098'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator5InverterLimitsActiveDCSideVoltageMaximum_spn12099'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4) + ((int(msg[4:6], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator5InverterLimitsActiveDCSideVoltageMinimum_spn12100'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator5InverterLimitsActiveDCSideCurrentMaximum_spn12101'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11110000) >> 4) + ((int(msg[10:12], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator5InverterLimitsActiveDCSideCurrentMinimum_spn12102'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    return data

# MG5ILV
def PGN_61948(msg, data):
    data['Motor/Generator5InverterSwitchedIgnitionVoltage_spn12042'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['Motor/Generator5InverterUnswitchedSLIVoltage_spn12043'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    return data

# MG5IS2
def PGN_61949(msg, data):
    data['Motor/Generator5InverterStatus2CRC_spn12110'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator5InverterStatus2Counter_spn12111'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator5AvailableMaximumTorque_spn12112'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4) + ((int(msg[4:6], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator5AvailableMinimumTorque_spn12113'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    return data

# MG5IRLA1
def PGN_61950(msg, data):
    data['Motor/Generator5InverterRateLimitsActive1CRC_spn12144'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator5InverterRateLimitsActive1Counter_spn12145'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator5InverterRateLimitsActiveAbsoluteSpeedRateLimit_spn12146'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4) + ((int(msg[4:6], 16)) << 4 )), 1004)  * 1.0) # Unit = %/s
    return data

# MG6IMF1
def PGN_61951(msg, data):
    data['Motor/Generator6InverterModeFeedback1CRC_spn12169'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator6InverterModeFeedback1Counter_spn12170'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator6InverterControlLimitsOverrideMode_spn12171'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator6InverterControlSetpointMode_spn12172'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00011111)), 31)  * 1.0) # Unit = bit
    data['Motor/Generator6InverterHVILStatus_spn12159'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b01100000) >> 5)), 3)  * 1.0) # Unit = bit
    return data

# MG6ILAP
def PGN_61952(msg, data):
    data['Motor/Generator6InverterLimitsActivePowerCRC_spn12187'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator6InverterLimitsActivePowerCounter_spn12188'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator6InverterLimitsActiveMechanicalPowerMaximum_spn12189'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4) + ((int(msg[4:6], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator6InverterLimitsActiveMechanicalPowerMinimum_spn12190'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator6InverterLimitsActiveDCSidePowerMaximum_spn12191'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11110000) >> 4) + ((int(msg[10:12], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator6InverterLimitsActiveDCSidePowerMinimum_spn12192'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    return data

# MG6ILAM
def PGN_61953(msg, data):
    data['Motor/Generator6InverterLimitsActiveMechanicalCRC_spn12199'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator6InverterLimitsActiveMechanicalCounter_spn12200'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator6InverterLimitsActiveTorqueMaximum_spn12201'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4) + ((int(msg[4:6], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator6InverterLimitsActiveTorqueMinimum_spn12202'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator6InverterLimitsActiveSpeedMaximum_spn12203'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11110000) >> 4) + ((int(msg[10:12], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator6InverterLimitsActiveSpeedMinimum_spn12204'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    return data

# MG6ILADC
def PGN_61954(msg, data):
    data['Motor/Generator6InverterLimitsActiveDCSideCRC_spn12215'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator6InverterLimitsActiveDCSideCounter_spn12216'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator6InverterLimitsActiveDCSideVoltageMaximum_spn12217'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4) + ((int(msg[4:6], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator6InverterLimitsActiveDCSideVoltageMinimum_spn12218'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator6InverterLimitsActiveDCSideCurrentMaximum_spn12219'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11110000) >> 4) + ((int(msg[10:12], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator6InverterLimitsActiveDCSideCurrentMinimum_spn12220'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    return data

# MG6ILV
def PGN_61955(msg, data):
    data['Motor/Generator6InverterSwitchedIgnitionVoltage_spn12160'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['Motor/Generator6InverterUnswitchedSLIVoltage_spn12161'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    return data

# MG6IS2
def PGN_61956(msg, data):
    data['Motor/Generator6InverterStatus2CRC_spn12228'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator6InverterStatus2Counter_spn12229'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator6AvailableMaximumTorque_spn12230'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4) + ((int(msg[4:6], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator6AvailableMinimumTorque_spn12231'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    return data

# MG6IRLA1
def PGN_61957(msg, data):
    data['Motor/Generator6InverterRateLimitsActive1CRC_spn12262'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator6InverterRateLimitsActive1Counter_spn12263'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator6InverterRateLimitsActiveAbsoluteSpeedRateLimit_spn12264'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4) + ((int(msg[4:6], 16)) << 4 )), 1004)  * 1.0) # Unit = %/s
    return data

# BSD1
def PGN_61958(msg, data):
    data['BlindSpotDetectionState_spn12286'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['BlindSpotCollisionWarningLevel_spn12287'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['BlindSpotWarningRelevantObjectDetected_spn12288'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000111)), 7)  * 1.0) # Unit = bit
    data['Bend-OffProbabilityofMostImportantObject_spn12289'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00111000) >> 3)), 7)  * 1.0) # Unit = bit
    data['BlindSpotDetectionLeftSideMonitored_spn12290'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['BlindSpotDetectionRightSideMonitored_spn12291'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['BlindSpotDetectionFrontMonitored_spn12292'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['BlindSpotDetectionRearMonitored_spn12293'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# WINCH1
def PGN_61959(msg, data):
    data['WinchMotorEncoderPosition_spn12309'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 1.0) # Unit = count
    data['WinchRevolutionCounter_spn12310'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 1.0) - 32128.0 # Unit = count
    return data

# MG3IC
def PGN_61960(msg, data):
    data['Motor/Generator3InverterControlCRC_spn11808'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator3InverterControlCounter_spn11809'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator3InverterControlLimitsRequestOverrideMode_spn11810'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator3InverterControlLimitsRequestOverrideMaximum_spn11811'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator3InverterControlLimitsRequestOverrideMinimum_spn11812'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11110000) >> 4) + ((int(msg[8:10], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator3InverterControlSetpointModeRequest_spn11813'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b11111000) >> 3)), 31)  * 1.0) # Unit = bit
    data['Motor/Generator3InverterControlSetpointRequest_spn11814'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64259)  * 0.003906) - 125.0 # Unit = %
    return data

# MG3IRLR1
def PGN_61961(msg, data):
    data['Motor/Generator3InverterRateLimitsRequest1CRC_spn11904'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator3InverterRateLimitsRequest1Counter_spn11905'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator3InverterRateLimitsRequestAbsoluteSpeedRateLimit_spn11906'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4) + ((int(msg[4:6], 16)) << 4 )), 1004)  * 1.0) # Unit = %/s
    return data

# MG4IC
def PGN_61962(msg, data):
    data['Motor/Generator4InverterControlCRC_spn11926'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator4InverterControlCounter_spn11927'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator4InverterControlLimitsRequestOverrideMode_spn11928'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator4InverterControlLimitsRequestOverrideMaximum_spn11929'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator4InverterControlLimitsRequestOverrideMinimum_spn11930'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11110000) >> 4) + ((int(msg[8:10], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator4InverterControlSetpointModeRequest_spn11931'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b11111000) >> 3)), 31)  * 1.0) # Unit = bit
    data['Motor/Generator4InverterControlSetpointRequest_spn11932'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64259)  * 0.003906) - 125.0 # Unit = %
    return data

# MG4IRLR1
def PGN_61963(msg, data):
    data['Motor/Generator4InverterRateLimitsRequest1CRC_spn12022'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator4InverterRateLimitsRequest1Counter_spn12023'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator4InverterRateLimitsRequestAbsoluteSpeedRateLimit_spn12024'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4) + ((int(msg[4:6], 16)) << 4 )), 1004)  * 1.0) # Unit = %/s
    return data

# MG5IC
def PGN_61964(msg, data):
    data['Motor/Generator5InverterControlCRC_spn12044'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator5InverterControlCounter_spn12045'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator5InverterControlLimitsRequestOverrideMode_spn12046'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator5InverterControlLimitsRequestOverrideMaximum_spn12047'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator5InverterControlLimitsRequestOverrideMinimum_spn12048'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11110000) >> 4) + ((int(msg[8:10], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator5InverterControlSetpointModeRequest_spn12049'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b11111000) >> 3)), 31)  * 1.0) # Unit = bit
    data['Motor/Generator5InverterControlSetpointRequest_spn12050'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64259)  * 0.003906) - 125.0 # Unit = %
    return data

# MG5IRLR1
def PGN_61965(msg, data):
    data['Motor/Generator5InverterRateLimitsRequest1CRC_spn12140'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator5InverterRateLimitsRequest1Counter_spn12141'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator5InverterRateLimitsRequestAbsoluteSpeedRateLimit_spn12142'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4) + ((int(msg[4:6], 16)) << 4 )), 1004)  * 1.0) # Unit = %/s
    return data

# MG6IC
def PGN_61966(msg, data):
    data['Motor/Generator6InverterControlCRC_spn12162'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator6InverterControlCounter_spn12163'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator6InverterControlLimitsRequestOverrideMode_spn12164'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator6InverterControlLimitsRequestOverrideMaximum_spn12165'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator6InverterControlLimitsRequestOverrideMinimum_spn12166'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11110000) >> 4) + ((int(msg[8:10], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator6InverterControlSetpointModeRequest_spn12167'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b11111000) >> 3)), 31)  * 1.0) # Unit = bit
    data['Motor/Generator6InverterControlSetpointRequest_spn12168'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64259)  * 0.003906) - 125.0 # Unit = %
    return data

# MG6IRLR1
def PGN_61967(msg, data):
    data['Motor/Generator6InverterRateLimitsRequest1CRC_spn12258'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator6InverterRateLimitsRequest1Counter_spn12259'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator6InverterRateLimitsRequestAbsoluteSpeedRateLimit_spn12260'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4) + ((int(msg[4:6], 16)) << 4 )), 1004)  * 1.0) # Unit = %/s
    return data

# EVDCLIM
def PGN_64180(msg, data):
    data['HybridDCChargingVoltageMaximum_spn13155'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['HybridDCChargingCurrentMaximum_spn13156'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.0625) # Unit = A
    data['HybridDCChargingPowerMaximum_spn13157'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.05) # Unit = kW
    data['HybridrequestedEnergyTransferType_spn13158'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    return data

# EVSE1DCLIM1
def PGN_64181(msg, data):
    data['EVSEDCChargingVoltageMaximum_spn13159'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['EVSEDCChargingCurrentMaximum_spn13160'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.0625) # Unit = A
    data['EVSEDCChargingPowerMaximum_spn13161'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.05) # Unit = kW
    data['EVSESupportedEnergyTransferTypes_spn13162'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    return data

# EVSE1DCLIM2
def PGN_64182(msg, data):
    data['EVSEDCChargingVoltageMinimum_spn13163'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['EVSEDCChargingCurrentMinimum_spn13164'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.0625) # Unit = A
    data['EVSEPeakCurrentRipple_spn13165'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.0625) # Unit = A
    data['EVSECurrentRegulationTolerance_spn13166'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.0625) # Unit = A
    return data

# EVDCTGT
def PGN_64183(msg, data):
    data['DCChargingTargetCRC_spn13167'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['DCChargingTargetSequenceCounter_spn13168'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['DCTargetChargingVoltage_spn13169'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['DCTargetChargingCurrent_spn13170'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.0625) # Unit = A
    return data

# EVSE1DCS1
def PGN_64184(msg, data):
    data['DCChargingState_spn13171'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['EVSEPresentDCChargingVoltage_spn13172'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['EVSEPresentDCChargingCurrent_spn13173'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 0.05) - 1600.0 # Unit = A
    data['EVSEVoltageLimitAchieved_spn13174'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EVSECurrentLimitAchieved_spn13175'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['EVSEPowerLimitAchieved_spn13176'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['EVSEStatus_spn13177'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    return data

# EVSE1CC1
def PGN_64185(msg, data):
    data['HybridDCInletContactor1Command_spn13178'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    return data

# EVSE1CS1
def PGN_64186(msg, data):
    data['HybridDCContactorInputVoltage_spn13179'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['HybridDCChargingBusVoltage_spn13180'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['HybridDCInletContactor1State_spn13181'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    return data

# DLCC3
def PGN_64187(msg, data):
    data['TransmissionOilTemperatureHighLampCommand_spn13116'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['TransmissionOilPressureLowLampCommand_spn13117'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    return data

# DLCD3
def PGN_64188(msg, data):
    data['TransmissionOilTemperatureHighLampData_spn13129'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['TransmissionOilPressureLowLampData_spn13130'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    return data

# MG1LD
def PGN_64189(msg, data):
    data['Motor/Generator1TotalEnergyConsumed_spn13081'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 100.0) # Unit = Watt-hour
    data['Motor/Generator1TotalEnergyGenerated_spn13082'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 ) + ((int(msg[12:14], 16)) << 16 ) + ((int(msg[14:16], 16)) << 24 )), 4211081215)  * 100.0) # Unit = Watt-hour
    data['Motor/Generator1TotalChargeConsumed_spn13083'] = ( enforceMaxV(( (int(msg[16:18], 16)) + ((int(msg[18:20], 16)) << 8 ) + ((int(msg[20:22], 16)) << 16 ) + ((int(msg[22:24], 16)) << 24 )), 4211081215)  * 100.0) # Unit = Ah
    data['Motor/Generator1TotalChargeGenerated_spn13084'] = ( enforceMaxV(( (int(msg[24:26], 16)) + ((int(msg[26:28], 16)) << 8 ) + ((int(msg[28:30], 16)) << 16 ) + ((int(msg[30:32], 16)) << 24 )), 4211081215)  * 100.0) # Unit = Ah
    return data

# MG2LD
def PGN_64190(msg, data):
    data['Motor/Generator2TotalEnergyConsumed_spn13085'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 100.0) # Unit = Watt-hour
    data['Motor/Generator2TotalEnergyGenerated_spn13086'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 ) + ((int(msg[12:14], 16)) << 16 ) + ((int(msg[14:16], 16)) << 24 )), 4211081215)  * 100.0) # Unit = Watt-hour
    data['Motor/Generator2TotalChargeConsumed_spn13087'] = ( enforceMaxV(( (int(msg[16:18], 16)) + ((int(msg[18:20], 16)) << 8 ) + ((int(msg[20:22], 16)) << 16 ) + ((int(msg[22:24], 16)) << 24 )), 4211081215)  * 100.0) # Unit = Ah
    data['Motor/Generator2TotalChargeGenerated_spn13088'] = ( enforceMaxV(( (int(msg[24:26], 16)) + ((int(msg[26:28], 16)) << 8 ) + ((int(msg[28:30], 16)) << 16 ) + ((int(msg[30:32], 16)) << 24 )), 4211081215)  * 100.0) # Unit = Ah
    return data

# MG3LD
def PGN_64191(msg, data):
    data['Motor/Generator3TotalEnergyConsumed_spn13089'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 100.0) # Unit = Watt-hour
    data['Motor/Generator3TotalEnergyGenerated_spn13090'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 ) + ((int(msg[12:14], 16)) << 16 ) + ((int(msg[14:16], 16)) << 24 )), 4211081215)  * 100.0) # Unit = Watt-hour
    data['Motor/Generator3TotalChargeConsumed_spn13091'] = ( enforceMaxV(( (int(msg[16:18], 16)) + ((int(msg[18:20], 16)) << 8 ) + ((int(msg[20:22], 16)) << 16 ) + ((int(msg[22:24], 16)) << 24 )), 4211081215)  * 100.0) # Unit = Ah
    data['Motor/Generator3TotalChargeGenerated_spn13092'] = ( enforceMaxV(( (int(msg[24:26], 16)) + ((int(msg[26:28], 16)) << 8 ) + ((int(msg[28:30], 16)) << 16 ) + ((int(msg[30:32], 16)) << 24 )), 4211081215)  * 100.0) # Unit = Ah
    return data

# MG4LD
def PGN_64192(msg, data):
    data['Motor/Generator4TotalEnergyConsumed_spn13093'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 100.0) # Unit = Watt-hour
    data['Motor/Generator4TotalEnergyGenerated_spn13094'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 ) + ((int(msg[12:14], 16)) << 16 ) + ((int(msg[14:16], 16)) << 24 )), 4211081215)  * 100.0) # Unit = Watt-hour
    data['Motor/Generator4TotalChargeConsumed_spn13095'] = ( enforceMaxV(( (int(msg[16:18], 16)) + ((int(msg[18:20], 16)) << 8 ) + ((int(msg[20:22], 16)) << 16 ) + ((int(msg[22:24], 16)) << 24 )), 4211081215)  * 100.0) # Unit = Ah
    data['Motor/Generator4TotalChargeGenerated_spn13096'] = ( enforceMaxV(( (int(msg[24:26], 16)) + ((int(msg[26:28], 16)) << 8 ) + ((int(msg[28:30], 16)) << 16 ) + ((int(msg[30:32], 16)) << 24 )), 4211081215)  * 100.0) # Unit = Ah
    return data

# MG5LD
def PGN_64193(msg, data):
    data['Motor/Generator5TotalEnergyConsumed_spn13097'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 100.0) # Unit = Watt-hour
    data['Motor/Generator5TotalEnergyGenerated_spn13098'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 ) + ((int(msg[12:14], 16)) << 16 ) + ((int(msg[14:16], 16)) << 24 )), 4211081215)  * 100.0) # Unit = Watt-hour
    data['Motor/Generator5TotalChargeConsumed_spn13099'] = ( enforceMaxV(( (int(msg[16:18], 16)) + ((int(msg[18:20], 16)) << 8 ) + ((int(msg[20:22], 16)) << 16 ) + ((int(msg[22:24], 16)) << 24 )), 4211081215)  * 100.0) # Unit = Ah
    data['Motor/Generator5TotalChargeGenerated_spn13100'] = ( enforceMaxV(( (int(msg[24:26], 16)) + ((int(msg[26:28], 16)) << 8 ) + ((int(msg[28:30], 16)) << 16 ) + ((int(msg[30:32], 16)) << 24 )), 4211081215)  * 100.0) # Unit = Ah
    return data

# MG6LD
def PGN_64194(msg, data):
    data['Motor/Generator6TotalEnergyConsumed_spn13101'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 100.0) # Unit = Watt-hour
    data['Motor/Generator6TotalEnergyGenerated_spn13102'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 ) + ((int(msg[12:14], 16)) << 16 ) + ((int(msg[14:16], 16)) << 24 )), 4211081215)  * 100.0) # Unit = Watt-hour
    data['Motor/Generator6TotalChargeConsumed_spn13103'] = ( enforceMaxV(( (int(msg[16:18], 16)) + ((int(msg[18:20], 16)) << 8 ) + ((int(msg[20:22], 16)) << 16 ) + ((int(msg[22:24], 16)) << 24 )), 4211081215)  * 100.0) # Unit = Ah
    data['Motor/Generator6TotalChargeGenerated_spn13104'] = ( enforceMaxV(( (int(msg[24:26], 16)) + ((int(msg[26:28], 16)) << 8 ) + ((int(msg[28:30], 16)) << 16 ) + ((int(msg[30:32], 16)) << 24 )), 4211081215)  * 100.0) # Unit = Ah
    return data

# AIR3
def PGN_64195(msg, data):
    data['AirDryerCartridgeLifeRemaining_spn13073'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 0.4) # Unit = %
    data['AirSuspensionSupplyPressure2_spn13132'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 8.0) # Unit = kPa
    return data

# EVSE1ACSV
def PGN_64196(msg, data):
    data['EVSENominalRMSvoltageLinetoNeutral_spn13006'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['EVSENominalRMSvoltageLinetoLine_spn13007'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['EVSENominalSupplyFrequency_spn13008'] = ( enforceMaxV(( (int(msg[8:10], 16))), 255)  * 1.0) # Unit = bit
    return data

# EVSE1AC3PL
def PGN_64197(msg, data):
    data['HVESSChargerRMScurrentL1_spn13009'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.0625) # Unit = A
    data['HVESSChargerRMScurrentL2_spn13010'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.0625) # Unit = A
    data['HVESSChargerRMScurrentL3_spn13011'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.0625) # Unit = A
    data['HVESSChargerNeutralRMScurrent_spn13012'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.0625) # Unit = A
    return data

# ERC3
def PGN_64198(msg, data):
    data['RetarderRoadSpeedDecelerateSwitch_spn12988'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['RetarderRoadSpeedAccelerateSwitch_spn12989'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    return data

# ETC14
def PGN_64200(msg, data):
    data['TransmissionClutch1Temperature_spn5939'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['TransmissionClutch1OverheatIndicator_spn12965'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    return data

# A1SCREGP2
def PGN_64205(msg, data):
    data['Aftertreatment1SCROutletAbsolutePressure_spn11773'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    data['Aftertreatment1SCROutletPressure_spn11775'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    return data

# PTO2
def PGN_64206(msg, data):
    data['TransmissionPTOGearboxOutputShaftSpeed_spn12960'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.125) # Unit = rpm
    data['TransmissionPTOGearboxStatus_spn12961'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    return data

# CDC2
def PGN_64208(msg, data):
    data['Mirror1Left/RightSelection_spn12923'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000111)), 7)  * 1.0) # Unit = bit
    data['Mirror2Left/RightSelection_spn12924'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00111000) >> 3)), 7)  * 1.0) # Unit = bit
    data['MirrorPrimary/SecondarySelection_spn12925'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000111)), 7)  * 1.0) # Unit = bit
    return data

# EAI2
def PGN_64209(msg, data):
    data['EngineCylinderTemperatureAverage_spn12894'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineCylinderBank1TemperatureAverage_spn12895'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineCylinderBank2TemperatureAverage_spn12896'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    return data

# TCI8
def PGN_64210(msg, data):
    data['EngineTurbocharger3OilTemperature_spn12889'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineTurbocharger4OilTemperature_spn12890'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineTurbocharger5OilTemperature_spn12891'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineTurbocharger6OilTemperature_spn12892'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    return data

# ADSC
def PGN_64211(msg, data):
    data['TSC1ControlPurposeP7InhibitCommand_spn12868'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    return data

# EVSE1ACS2
def PGN_64212(msg, data):
    data['EVSE1ACRMSCurrent_spn12866'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) - 1600.0 # Unit = A
    data['EVSE1ACRMSVoltage_spn12867'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    return data

# EVSE1ACS1
def PGN_64213(msg, data):
    data['EVSEACRMSCurrentLimitL1_spn12865'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.0625) # Unit = A
    data['EVSEACRMSCurrentLimitL2_spn13003'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.0625) # Unit = A
    data['EVSEACRMSCurrentLimitL3_spn13004'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.0625) # Unit = A
    data['EVSEACRMSCurrentLimitNeutral_spn13005'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.0625) # Unit = A
    return data

# EVSE1S1
def PGN_64214(msg, data):
    data['EVSE1ConnectorReleaseLatch_spn12861'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EVSE1ManualOverride_spn12862'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['EVSE1ConnectorLockState_spn12863'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b01110000) >> 4)), 7)  * 1.0) # Unit = bit
    return data

# TSM1
def PGN_64237(msg, data):
    data['TemperatureSensingModule1PreliminaryFMI_spn12820'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['TemperatureSensingModule2PreliminaryFMI_spn12821'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['TemperatureSensingModule3PreliminaryFMI_spn12822'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['TemperatureSensingModule4PreliminaryFMI_spn12823'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['TemperatureSensingModule5PreliminaryFMI_spn12824'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['TemperatureSensingModule6PreliminaryFMI_spn12825'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['TemperatureSensingModule7PreliminaryFMI_spn12826'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['TemperatureSensingModule8PreliminaryFMI_spn12827'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    return data

# TSM2
def PGN_64238(msg, data):
    data['TemperatureSensingModule9PreliminaryFMI_spn12828'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['TemperatureSensingModule10PreliminaryFMI_spn12829'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['TemperatureSensingModule11PreliminaryFMI_spn12830'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['TemperatureSensingModule12PreliminaryFMI_spn12831'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['TemperatureSensingModule13PreliminaryFMI_spn12832'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['TemperatureSensingModule14PreliminaryFMI_spn12833'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['TemperatureSensingModule15PreliminaryFMI_spn12834'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['TemperatureSensingModule16PreliminaryFMI_spn12835'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    return data

# A2SCRSI3
def PGN_64239(msg, data):
    data['Aftertreatment2SCRNormalizedConversionEfficiency_spn12860'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 0.4) # Unit = %
    return data

# A1SCRSI3
def PGN_64240(msg, data):
    data['Aftertreatment1SCRNormalizedConversionEfficiency_spn12859'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 0.4) # Unit = %
    return data

# ATNXMS2
def PGN_64249(msg, data):
    data['Aftertreatment1SCR2InletNOxMassFlow_spn12754'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.0001) # Unit = g/s
    data['Aftertreatment1SCR2OutletNOxMassFlow_spn12755'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.0001) # Unit = g/s
    data['Aftertreatment1SCR2ModeledNH3StorageLevel_spn12756'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 1.0) # Unit = mg/l
    data['Aftertreatment1SCR2TargetNH3StorageLevel_spn12757'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 1.0) # Unit = mg/l
    return data

# ATNXMS1
def PGN_64250(msg, data):
    data['Aftertreatment1SCR1EngineExhaustNOxMassFlow_spn12750'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.0001) # Unit = g/s
    data['Aftertreatment1SCR1TailpipeNOxMassFlow_spn12751'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.0001) # Unit = g/s
    data['Aftertreatment1SCR1Modeled/ActualStorageLevel_spn12752'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 1.0) # Unit = mg/l
    data['Aftertreatment1SCR1TargetNH3StorageLevel_spn12753'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 1.0) # Unit = mg/l
    return data

# MG6IC2
def PGN_64280(msg, data):
    data['Motor/Generator6InverterRateLimitsRequest2CRC_spn12266'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator6InverterRateLimitsRequest2Counter_spn12267'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator6InverterPIDControlApplicableMode_spn12268'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator6InverterPIDControlNormalizedDifferentialGain_spn12269'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 0.03125) # Unit = %/(%/s)
    data['Motor/Generator6InverterPIDControlNormalizedIntegralGain_spn12270'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 0.015625) # Unit = %/(%*s)
    data['Motor/Generator6InverterPIDControlNormalizedProportionalGain_spn12271'] = ( enforceMaxV(( (int(msg[10:12], 16)) + ((int(msg[12:14], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) # Unit = %/%
    data['Motor/Generator6InverterPIDControlFeed-ForwardTorque_spn12272'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11110000) >> 4) + ((int(msg[14:16], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    return data

# MG6IRP
def PGN_64281(msg, data):
    data['Motor/Generator6InverterLimitsRequestPowerCRC_spn12181'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator6InverterLimitsRequestPowerCounter_spn12182'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator6InverterLimitsRequestMechanicalPowerMaximum_spn12183'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4) + ((int(msg[4:6], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator6InverterLimitsRequestMechanicalPowerMinimum_spn12184'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator6InverterLimitsRequestDCSidePowerMaximum_spn12185'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11110000) >> 4) + ((int(msg[10:12], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator6InverterLimitsRequestDCSidePowerMinimum_spn12186'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    return data

# MG6ILRM
def PGN_64282(msg, data):
    data['Motor/Generator6InverterLimitsRequestMechanicalCRC_spn12193'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator6InverterLimitsRequestMechanicalCounter_spn12194'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator6InverterLimitsRequestTorqueMaximum_spn12195'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4) + ((int(msg[4:6], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator6InverterLimitsRequestTorqueMinimum_spn12196'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator6InverterLimitsRequestSpeedMaximum_spn12197'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11110000) >> 4) + ((int(msg[10:12], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator6InverterLimitsRequestSpeedMinimum_spn12198'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    return data

# MG6ILRDC
def PGN_64283(msg, data):
    data['Motor/Generator6InverterLimitsRequestDCSideCRC_spn12209'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator6InverterLimitsRequestDCSideCounter_spn12210'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator6InverterLimitsRequestDCSideVoltageMaximum_spn12211'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4) + ((int(msg[4:6], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator6InverterLimitsRequestDCSideVoltageMinimum_spn12212'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator6InverterLimitsRequestDCSideCurrentMaximum_spn12213'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11110000) >> 4) + ((int(msg[10:12], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator6InverterLimitsRequestDCSideCurrentMinimum_spn12214'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    return data

# MG6IIR
def PGN_64284(msg, data):
    data['Motor/Generator6InverterHigh-VoltageBusActiveIsolationTestCommand_spn12232'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator6InverterHigh-VoltageBusPassiveIsolationTestCommand_spn12233'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator6InverterHigh-VoltageBusHighSideResistorConnectRequest_spn12234'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator6InverterHigh-VoltageBusLowSideResistorConnectRequest_spn12235'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# MG5IC2
def PGN_64285(msg, data):
    data['Motor/Generator5InverterRateLimitsRequest2CRC_spn12148'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator5InverterRateLimitsRequest2Counter_spn12149'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator5InverterPIDControlApplicableMode_spn12150'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator5InverterPIDControlNormalizedDifferentialGain_spn12151'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 0.03125) # Unit = %/(%/s)
    data['Motor/Generator5InverterPIDControlNormalizedIntegralGain_spn12152'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 0.015625) # Unit = %/(%*s)
    data['Motor/Generator5InverterPIDControlNormalizedProportionalGain_spn12153'] = ( enforceMaxV(( (int(msg[10:12], 16)) + ((int(msg[12:14], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) # Unit = %/%
    data['Motor/Generator5InverterPIDControlFeed-ForwardTorque_spn12154'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11110000) >> 4) + ((int(msg[14:16], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    return data

# MG5IRP
def PGN_64286(msg, data):
    data['Motor/Generator5InverterLimitsRequestPowerCRC_spn12063'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator5InverterLimitsRequestPowerCounter_spn12064'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator5InverterLimitsRequestMechanicalPowerMaximum_spn12065'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4) + ((int(msg[4:6], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator5InverterLimitsRequestMechanicalPowerMinimum_spn12066'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator5InverterLimitsRequestDCSidePowerMaximum_spn12067'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11110000) >> 4) + ((int(msg[10:12], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator5InverterLimitsRequestDCSidePowerMinimum_spn12068'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    return data

# MG5ILRM
def PGN_64287(msg, data):
    data['Motor/Generator5InverterLimitsRequestMechanicalCRC_spn12075'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator5InverterLimitsRequestMechanicalCounter_spn12076'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator5InverterLimitsRequestTorqueMaximum_spn12077'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4) + ((int(msg[4:6], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator5InverterLimitsRequestTorqueMinimum_spn12078'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator5InverterLimitsRequestSpeedMaximum_spn12079'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11110000) >> 4) + ((int(msg[10:12], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator5InverterLimitsRequestSpeedMinimum_spn12080'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    return data

# MG5ILRDC
def PGN_64288(msg, data):
    data['Motor/Generator5InverterLimitsRequestDCSideCRC_spn12091'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator5InverterLimitsRequestDCSideCounter_spn12092'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator5InverterLimitsRequestDCSideVoltageMaximum_spn12093'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4) + ((int(msg[4:6], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator5InverterLimitsRequestDCSideVoltageMinimum_spn12094'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator5InverterLimitsRequestDCSideCurrentMaximum_spn12095'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11110000) >> 4) + ((int(msg[10:12], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator5InverterLimitsRequestDCSideCurrentMinimum_spn12096'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    return data

# MG5IIR
def PGN_64289(msg, data):
    data['Motor/Generator5InverterHigh-VoltageBusActiveIsolationTestCommand_spn12114'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator5InverterHigh-VoltageBusPassiveIsolationTestCommand_spn12115'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator5InverterHigh-VoltageBusHighSideResistorConnectRequest_spn12116'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator5InverterHigh-VoltageBusLowSideResistorConnectRequest_spn12117'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# MG4IC2
def PGN_64290(msg, data):
    data['Motor/Generator4InverterRateLimitsRequest2CRC_spn12030'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator4InverterRateLimitsRequest2Counter_spn12031'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator4InverterPIDControlApplicableMode_spn12032'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator4InverterPIDControlNormalizedDifferentialGain_spn12033'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 0.03125) # Unit = %/(%/s)
    data['Motor/Generator4InverterPIDControlNormalizedIntegralGain_spn12034'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 0.015625) # Unit = %/(%*s)
    data['Motor/Generator4InverterPIDControlNormalizedProportionalGain_spn12035'] = ( enforceMaxV(( (int(msg[10:12], 16)) + ((int(msg[12:14], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) # Unit = %/%
    data['Motor/Generator4InverterPIDControlFeed-ForwardTorque_spn12036'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11110000) >> 4) + ((int(msg[14:16], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    return data

# MG4IRP
def PGN_64291(msg, data):
    data['Motor/Generator4InverterLimitsRequestPowerCRC_spn11945'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator4InverterLimitsRequestPowerCounter_spn11946'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator4InverterLimitsRequestMechanicalPowerMaximum_spn11947'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4) + ((int(msg[4:6], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator4InverterLimitsRequestMechanicalPowerMinimum_spn11948'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator4InverterLimitsRequestDCSidePowerMaximum_spn11949'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11110000) >> 4) + ((int(msg[10:12], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator4InverterLimitsRequestDCSidePowerMinimum_spn11950'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    return data

# MG4ILRM
def PGN_64292(msg, data):
    data['Motor/Generator4InverterLimitsRequestMechanicalCRC_spn11957'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator4InverterLimitsRequestMechanicalCounter_spn11958'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator4InverterLimitsRequestTorqueMaximum_spn11959'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4) + ((int(msg[4:6], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator4InverterLimitsRequestTorqueMinimum_spn11960'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator4InverterLimitsRequestSpeedMaximum_spn11961'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11110000) >> 4) + ((int(msg[10:12], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator4InverterLimitsRequestSpeedMinimum_spn11962'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    return data

# MG4ILRDC
def PGN_64293(msg, data):
    data['Motor/Generator4InverterLimitsRequestDCSideCRC_spn11973'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator4InverterLimitsRequestDCSideCounter_spn11974'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator4InverterLimitsRequestDCSideVoltageMaximum_spn11975'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4) + ((int(msg[4:6], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator4InverterLimitsRequestDCSideVoltageMinimum_spn11976'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator4InverterLimitsRequestDCSideCurrentMaximum_spn11977'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11110000) >> 4) + ((int(msg[10:12], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator4InverterLimitsRequestDCSideCurrentMinimum_spn11978'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    return data

# MG4IIR
def PGN_64294(msg, data):
    data['Motor/Generator4InverterHigh-VoltageBusActiveIsolationTestCommand_spn11996'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator4InverterHigh-VoltageBusPassiveIsolationTestCommand_spn11997'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator4InverterHigh-VoltageBusHighSideResistorConnectRequest_spn11998'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator4InverterHigh-VoltageBusLowSideResistorConnectRequest_spn11999'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# MG3IC2
def PGN_64295(msg, data):
    data['Motor/Generator3InverterRateLimitsRequest2CRC_spn11912'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator3InverterRateLimitsRequest2Counter_spn11913'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator3InverterPIDControlApplicableMode_spn11914'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator3InverterPIDControlNormalizedDifferentialGain_spn11915'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 0.03125) # Unit = %/(%/s)
    data['Motor/Generator3InverterPIDControlNormalizedIntegralGain_spn11916'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 0.015625) # Unit = %/(%*s)
    data['Motor/Generator3InverterPIDControlNormalizedProportionalGain_spn11917'] = ( enforceMaxV(( (int(msg[10:12], 16)) + ((int(msg[12:14], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) # Unit = %/%
    data['Motor/Generator3InverterPIDControlFeed-ForwardTorque_spn11918'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11110000) >> 4) + ((int(msg[14:16], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    return data

# MG3IRP
def PGN_64296(msg, data):
    data['Motor/Generator3InverterLimitsRequestPowerCRC_spn11827'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator3InverterLimitsRequestPowerCounter_spn11828'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator3InverterLimitsRequestMechanicalPowerMaximum_spn11829'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4) + ((int(msg[4:6], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator3InverterLimitsRequestMechanicalPowerMinimum_spn11830'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator3InverterLimitsRequestDCSidePowerMaximum_spn11831'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11110000) >> 4) + ((int(msg[10:12], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator3InverterLimitsRequestDCSidePowerMinimum_spn11832'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    return data

# MG3ILRM
def PGN_64297(msg, data):
    data['Motor/Generator3InverterLimitsRequestMechanicalCRC_spn11839'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator3InverterLimitsRequestMechanicalCounter_spn11840'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator3InverterLimitsRequestTorqueMaximum_spn11841'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4) + ((int(msg[4:6], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator3InverterLimitsRequestTorqueMinimum_spn11842'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator3InverterLimitsRequestSpeedMaximum_spn11843'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11110000) >> 4) + ((int(msg[10:12], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator3InverterLimitsRequestSpeedMinimum_spn11844'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    return data

# MG3ILRDC
def PGN_64298(msg, data):
    data['Motor/Generator3InverterLimitsRequestDCSideCRC_spn11855'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator3InverterLimitsRequestDCSideCounter_spn11856'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator3InverterLimitsRequestDCSideVoltageMaximum_spn11857'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4) + ((int(msg[4:6], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator3InverterLimitsRequestDCSideVoltageMinimum_spn11858'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator3InverterLimitsRequestDCSideCurrentMaximum_spn11859'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11110000) >> 4) + ((int(msg[10:12], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator3InverterLimitsRequestDCSideCurrentMinimum_spn11860'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    return data

# MG3IIR
def PGN_64299(msg, data):
    data['Motor/Generator3InverterHigh-VoltageBusActiveIsolationTestCommand_spn11878'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator3InverterHigh-VoltageBusPassiveIsolationTestCommand_spn11879'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator3InverterHigh-VoltageBusHighSideResistorConnectRequest_spn11880'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator3InverterHigh-VoltageBusLowSideResistorConnectRequest_spn11881'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# TCI8
def PGN_64301(msg, data):
    data['EngineTurbocharger5Speed_spn12313'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 4.0) # Unit = rpm
    data['EngineTurbocharger6Speed_spn12314'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 4.0) # Unit = rpm
    data['EngineTurbocharger5CompressorIntakePressure_spn12315'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64259)  * 0.007812) - 250.0 # Unit = kPa
    data['EngineTurbocharger6CompressorIntakePressure_spn12316'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64259)  * 0.007812) - 250.0 # Unit = kPa
    return data

# WINCH2
def PGN_64302(msg, data):
    data['WinchLifetimeRevolutionCounter_spn12311'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 1.0) # Unit = count
    return data

# MG6IR1
def PGN_64303(msg, data):
    data['Motor/Generator6InverterReference1CRC_spn12173'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator6InverterReference1Counter_spn12174'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator6InverterReferenceTorque_spn12175'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.5) # Unit = Nm
    data['Motor/Generator6InverterReferenceSpeed_spn12176'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 4.0) # Unit = rpm
    data['Motor/Generator6InverterReferencePower_spn12177'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.0625) # Unit = kW
    return data

# MG6IS1
def PGN_64304(msg, data):
    data['Motor/Generator6InverterStatus1CRC_spn12178'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator6InverterStatus1Counter_spn12179'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator6Torque_spn12157'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4) + ((int(msg[4:6], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator6Speed_spn12155'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64259)  * 0.003906) - 125.0 # Unit = %
    data['Motor/Generator6InverterDCSideCurrent_spn12180'] = ( enforceMaxV(( (int(msg[10:12], 16)) + ((int(msg[12:14], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator6InverterDCSideVoltage_spn12158'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11110000) >> 4) + ((int(msg[14:16], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    return data

# MG6IR2
def PGN_64305(msg, data):
    data['Motor/Generator6InverterReference2CRC_spn12205'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator6InverterReference2Counter_spn12206'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator6InverterReferenceCurrent_spn12207'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.125) # Unit = A
    data['Motor/Generator6InverterReferenceVoltage_spn12208'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.125) # Unit = V
    return data

# MG6IT
def PGN_64306(msg, data):
    data['Motor/Generator6InverterTemperature1_spn12221'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['Motor/Generator6InverterTemperature2_spn12222'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['Motor/Generator6InverterTemperature3_spn12223'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['Motor/Generator6InverterTemperature4_spn12224'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    return data

# MG6IMT
def PGN_64307(msg, data):
    data['Motor/Generator6Temperature1_spn12156'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['Motor/Generator6Temperature2_spn12225'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['Motor/Generator6Temperature3_spn12226'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['Motor/Generator6Temperature4_spn12227'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    return data

# MG6II
def PGN_64308(msg, data):
    data['Motor/Generator6InverterIsolationIntegrityCRC_spn12236'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator6InverterIsolationIntegrityCounter_spn12237'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator6InverterDCSideNegativetoChassisGroundVoltage_spn12238'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4) + ((int(msg[4:6], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator6InverterHigh-VoltageBusActiveIsolationTestStatus_spn12239'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator6InverterHigh-VoltageBusPassiveIsolationTestStatus_spn12240'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator6InverterHigh-VoltageBusActiveIsolationTestResults_spn12241'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.1) # Unit = ohm/V
    data['Motor/Generator6InverterHigh-VoltageBusPassiveIsolationTestResults_spn12242'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.1) # Unit = ohm/V
    return data

# MG6IAPL
def PGN_64309(msg, data):
    data['Motor/Generator6InverterPowerLimitedduetoUndefinedReason_spn12243'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator6InverterPowerLimitedduetoDCSideCurrentMaximum_spn12244'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator6InverterPowerLimitedduetoDCSideCurrentMinimum_spn12245'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator6InverterPowerLimitedduetoDCSideVoltageMaximum_spn12246'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator6InverterPowerLimitedduetoDCSideVoltageMinimum_spn12247'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator6InverterPowerLimitedduetoMechanicalPowerMaximum_spn12248'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator6InverterPowerLimitedduetoMechanicalPowerMinimum_spn12249'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator6InverterPowerLimitedduetoDCSidePowerMaximum_spn12250'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator6InverterPowerLimitedduetoDCSidePowerMinimum_spn12251'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator6InverterPowerLimitedduetoTorqueMaximum_spn12252'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator6InverterPowerLimitedduetoTorqueMinimum_spn12253'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator6InverterPowerLimitedduetoSpeedMaximum_spn12254'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator6InverterPowerLimitedduetoSpeedMinimum_spn12255'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator6InverterPowerLimitedduetoInverterTemperature_spn12256'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator6InverterPowerLimitedduetoMotorTemperature_spn12257'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator6InverterPowerLimitedDuetoFaultCondition_spn13061'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator6InverterPowerLimitedDuetoActiveTorqueRateLimit_spn13062'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator6InverterPowerLimitedDuetoActiveSpeedRateLimit_spn13063'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator6InverterTorqueLimitedDuetoMachineCharacteristics_spn13064'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# MG5IR1
def PGN_64310(msg, data):
    data['Motor/Generator5InverterReference1CRC_spn12055'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator5InverterReference1Counter_spn12056'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator5InverterReferenceTorque_spn12057'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.5) # Unit = Nm
    data['Motor/Generator5InverterReferenceSpeed_spn12058'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 4.0) # Unit = rpm
    data['Motor/Generator5InverterReferencePower_spn12059'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.0625) # Unit = kW
    return data

# MG5IS1
def PGN_64311(msg, data):
    data['Motor/Generator5InverterStatus1CRC_spn12060'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator5InverterStatus1Counter_spn12061'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator5Torque_spn12039'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4) + ((int(msg[4:6], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator5Speed_spn12037'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64259)  * 0.003906) - 125.0 # Unit = %
    data['Motor/Generator5InverterDCSideCurrent_spn12062'] = ( enforceMaxV(( (int(msg[10:12], 16)) + ((int(msg[12:14], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator5InverterDCSideVoltage_spn12040'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11110000) >> 4) + ((int(msg[14:16], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    return data

# MG5IR2
def PGN_64312(msg, data):
    data['Motor/Generator5InverterReference2CRC_spn12087'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator5InverterReference2Counter_spn12088'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator5InverterReferenceCurrent_spn12089'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.125) # Unit = A
    data['Motor/Generator5InverterReferenceVoltage_spn12090'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.125) # Unit = V
    return data

# MG5IT
def PGN_64313(msg, data):
    data['Motor/Generator5InverterTemperature1_spn12103'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['Motor/Generator5InverterTemperature2_spn12104'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['Motor/Generator5InverterTemperature3_spn12105'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['Motor/Generator5InverterTemperature4_spn12106'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    return data

# MG5IMT
def PGN_64314(msg, data):
    data['Motor/Generator5Temperature1_spn12038'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['Motor/Generator5Temperature2_spn12107'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['Motor/Generator5Temperature3_spn12108'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['Motor/Generator5Temperature4_spn12109'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    return data

# MG5II
def PGN_64315(msg, data):
    data['Motor/Generator5InverterIsolationIntegrityCRC_spn12118'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator5InverterIsolationIntegrityCounter_spn12119'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator5InverterDCSideNegativetoChassisGroundVoltage_spn12120'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4) + ((int(msg[4:6], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator5InverterHigh-VoltageBusActiveIsolationTestStatus_spn12121'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator5InverterHigh-VoltageBusPassiveIsolationTestStatus_spn12122'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator5InverterHigh-VoltageBusActiveIsolationTestResults_spn12123'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.1) # Unit = ohm/V
    data['Motor/Generator5InverterHigh-VoltageBusPassiveIsolationTestResults_spn12124'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.1) # Unit = ohm/V
    return data

# MG5IAPL
def PGN_64316(msg, data):
    data['Motor/Generator5InverterPowerLimitedduetoUndefinedReason_spn12125'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator5InverterPowerLimitedduetoDCSideCurrentMaximum_spn12126'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator5InverterPowerLimitedduetoDCSideCurrentMinimum_spn12127'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator5InverterPowerLimitedduetoDCSideVoltageMaximum_spn12128'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator5InverterPowerLimitedduetoDCSideVoltageMinimum_spn12129'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator5InverterPowerLimitedduetoMechanicalPowerMaximum_spn12130'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator5InverterPowerLimitedduetoMechanicalPowerMinimum_spn12131'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator5InverterPowerLimitedduetoDCSidePowerMaximum_spn12132'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator5InverterPowerLimitedduetoDCSidePowerMinimum_spn12133'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator5InverterPowerLimitedduetoTorqueMaximum_spn12134'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator5InverterPowerLimitedduetoTorqueMinimum_spn12135'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator5InverterPowerLimitedduetoSpeedMaximum_spn12136'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator5InverterPowerLimitedduetoSpeedMinimum_spn12137'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator5InverterPowerLimitedduetoInverterTemperature_spn12138'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator5InverterPowerLimitedduetoMotorTemperature_spn12139'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator5InverterPowerLimitedDuetoFaultCondition_spn13057'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator5InverterPowerLimitedDuetoActiveTorqueRateLimit_spn13058'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator5InverterPowerLimitedDuetoActiveSpeedRateLimit_spn13059'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator5InverterTorqueLimitedDuetoMachineCharacteristics_spn13060'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# MG4IR1
def PGN_64317(msg, data):
    data['Motor/Generator4InverterReference1CRC_spn11937'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator4InverterReference1Counter_spn11938'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator4InverterReferenceTorque_spn11939'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.5) # Unit = Nm
    data['Motor/Generator4InverterReferenceSpeed_spn11940'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 4.0) # Unit = rpm
    data['Motor/Generator4InverterReferencePower_spn11941'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.0625) # Unit = kW
    return data

# MG4IS1
def PGN_64318(msg, data):
    data['Motor/Generator4InverterStatus1CRC_spn11942'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator4InverterStatus1Counter_spn11943'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator4Torque_spn11921'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4) + ((int(msg[4:6], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator4Speed_spn11919'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64259)  * 0.003906) - 125.0 # Unit = %
    data['Motor/Generator4InverterDCSideCurrent_spn11944'] = ( enforceMaxV(( (int(msg[10:12], 16)) + ((int(msg[12:14], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator4InverterDCSideVoltage_spn11922'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11110000) >> 4) + ((int(msg[14:16], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    return data

# MG4IR2
def PGN_64319(msg, data):
    data['Motor/Generator4InverterReference2CRC_spn11969'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator4InverterReference2Counter_spn11970'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator4InverterReferenceCurrent_spn11971'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.125) # Unit = A
    data['Motor/Generator4InverterReferenceVoltage_spn11972'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.125) # Unit = V
    return data

# MG4IT
def PGN_64320(msg, data):
    data['Motor/Generator4InverterTemperature1_spn11985'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['Motor/Generator4InverterTemperature2_spn11986'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['Motor/Generator4InverterTemperature3_spn11987'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['Motor/Generator4InverterTemperature4_spn11988'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    return data

# MG4IMT
def PGN_64321(msg, data):
    data['Motor/Generator4Temperature1_spn11920'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['Motor/Generator4Temperature2_spn11989'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['Motor/Generator4Temperature3_spn11990'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['Motor/Generator4Temperature4_spn11991'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    return data

# MG4II
def PGN_64322(msg, data):
    data['Motor/Generator4InverterIsolationIntegrityCRC_spn12000'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator4InverterIsolationIntegrityCounter_spn12001'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator4InverterDCSideNegativetoChassisGroundVoltage_spn12002'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4) + ((int(msg[4:6], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator4InverterHigh-VoltageBusActiveIsolationTestStatus_spn12003'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator4InverterHigh-VoltageBusPassiveIsolationTestStatus_spn12004'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator4InverterHigh-VoltageBusActiveIsolationTestResults_spn12005'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.1) # Unit = ohm/V
    data['Motor/Generator4InverterHigh-VoltageBusPassiveIsolationTestResults_spn12006'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.1) # Unit = ohm/V
    return data

# MG4IAPL
def PGN_64323(msg, data):
    data['Motor/Generator4InverterPowerLimitedduetoUndefinedReason_spn12007'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator4InverterPowerLimitedduetoDCSideCurrentMaximum_spn12008'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator4InverterPowerLimitedduetoDCSideCurrentMinimum_spn12009'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator4InverterPowerLimitedduetoDCSideVoltageMaximum_spn12010'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator4InverterPowerLimitedduetoDCSideVoltageMinimum_spn12011'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator4InverterPowerLimitedduetoMechanicalPowerMaximum_spn12012'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator4InverterPowerLimitedduetoMechanicalPowerMinimum_spn12013'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator4InverterPowerLimitedduetoDCSidePowerMaximum_spn12014'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator4InverterPowerLimitedduetoDCSidePowerMinimum_spn12015'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator4InverterPowerLimitedduetoTorqueMaximum_spn12016'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator4InverterPowerLimitedduetoTorqueMinimum_spn12017'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator4InverterPowerLimitedduetoSpeedMaximum_spn12018'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator4InverterPowerLimitedduetoSpeedMinimum_spn12019'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator4InverterPowerLimitedduetoInverterTemperature_spn12020'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator4InverterPowerLimitedduetoMotorTemperature_spn12021'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator4InverterPowerLimitedDuetoFaultCondition_spn13053'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator4InverterPowerLimitedDuetoActiveTorqueRateLimit_spn13054'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator4InverterPowerLimitedDuetoActiveSpeedRateLimit_spn13055'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator4InverterTorqueLimitedDuetoMachineCharacteristics_spn13056'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# MG3IR1
def PGN_64324(msg, data):
    data['Motor/Generator3InverterReference1CRC_spn11819'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator3InverterReference1Counter_spn11820'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator3InverterReferenceTorque_spn11821'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.5) # Unit = Nm
    data['Motor/Generator3InverterReferenceSpeed_spn11822'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 4.0) # Unit = rpm
    data['Motor/Generator3InverterReferencePower_spn11823'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.0625) # Unit = kW
    return data

# MG3IS1
def PGN_64325(msg, data):
    data['Motor/Generator3InverterStatus1CRC_spn11824'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator3InverterStatus1Counter_spn11825'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator3Torque_spn11803'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4) + ((int(msg[4:6], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator3Speed_spn11801'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64259)  * 0.003906) - 125.0 # Unit = %
    data['Motor/Generator3InverterDCSideCurrent_spn11826'] = ( enforceMaxV(( (int(msg[10:12], 16)) + ((int(msg[12:14], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator3InverterDCSideVoltage_spn11804'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11110000) >> 4) + ((int(msg[14:16], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    return data

# MG3IR2
def PGN_64326(msg, data):
    data['Motor/Generator3InverterReference2CRC_spn11851'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator3InverterReference2Counter_spn11852'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator3InverterReferenceCurrent_spn11853'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.125) # Unit = A
    data['Motor/Generator3InverterReferenceVoltage_spn11854'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.125) # Unit = V
    return data

# MG3IT
def PGN_64327(msg, data):
    data['Motor/Generator3InverterTemperature1_spn11867'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['Motor/Generator3InverterTemperature2_spn11868'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['Motor/Generator3InverterTemperature3_spn11869'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['Motor/Generator3InverterTemperature4_spn11870'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    return data

# MG3IMT
def PGN_64328(msg, data):
    data['Motor/Generator3Temperature1_spn11802'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['Motor/Generator3Temperature2_spn11871'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['Motor/Generator3Temperature3_spn11872'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['Motor/Generator3Temperature4_spn11873'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    return data

# MG3II
def PGN_64329(msg, data):
    data['Motor/Generator3InverterIsolationIntegrityCRC_spn11882'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator3InverterIsolationIntegrityCounter_spn11883'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator3InverterDCSideNegativetoChassisGroundVoltage_spn11884'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4) + ((int(msg[4:6], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator3InverterHigh-VoltageBusActiveIsolationTestStatus_spn11885'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator3InverterHigh-VoltageBusPassiveIsolationTestStatus_spn11886'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator3InverterHigh-VoltageBusActiveIsolationTestResults_spn11887'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.1) # Unit = ohm/V
    data['Motor/Generator3InverterHigh-VoltageBusPassiveIsolationTestResults_spn11888'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.1) # Unit = ohm/V
    return data

# MG3IAPL
def PGN_64330(msg, data):
    data['Motor/Generator3InverterPowerLimitedduetoUndefinedReason_spn11889'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator3InverterPowerLimitedduetoDCSideCurrentMaximum_spn11890'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator3InverterPowerLimitedduetoDCSideCurrentMinimum_spn11891'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator3InverterPowerLimitedduetoDCSideVoltageMaximum_spn11892'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator3InverterPowerLimitedduetoDCSideVoltageMinimum_spn11893'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator3InverterPowerLimitedduetoMechanicalPowerMaximum_spn11894'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator3InverterPowerLimitedduetoMechanicalPowerMinimum_spn11895'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator3InverterPowerLimitedduetoDCSidePowerMaximum_spn11896'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator3InverterPowerLimitedduetoDCSidePowerMinimum_spn11897'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator3InverterPowerLimitedduetoTorqueMaximum_spn11898'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator3InverterPowerLimitedduetoTorqueMinimum_spn11899'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator3InverterPowerLimitedduetoSpeedMaximum_spn11900'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator3InverterPowerLimitedduetoSpeedMinimum_spn11901'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator3InverterPowerLimitedduetoInverterTemperature_spn11902'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator3InverterPowerLimitedduetoMotorTemperature_spn11903'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator3InverterPowerLimitedDuetoFaultCondition_spn13049'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator3InverterPowerLimitedDuetoActiveTorqueRateLimit_spn13050'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator3InverterPowerLimitedDuetoActiveSpeedRateLimit_spn13051'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator3InverterTorqueLimitedDuetoMachineCharacteristics_spn13052'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# ADSF
def PGN_64331(msg, data):
    data['SourceAddressofControllingDeviceforTSC1ControlPurposeP7_spn11756'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = SA
    data['TSC1ControlPurposeP7ReadinessStatus_spn11757'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    return data

# CCSI2
def PGN_64332(msg, data):
    data['CabHeaterPower_spn11755'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 2.0) # Unit = W
    return data

# MI1
def PGN_64333(msg, data):
    data['EngineAirFilter1LifeRemaining_spn11737'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 0.4) # Unit = %
    data['EngineAirFilter2LifeRemaining_spn11738'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 0.4) # Unit = %
    data['EngineAirFilter3LifeRemaining_spn11739'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 0.4) # Unit = %
    data['EngineAirFilter4LifeRemaining_spn11740'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 0.4) # Unit = %
    data['EngineFuelFilterLifeRemaining_spn11741'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.4) # Unit = %
    data['EngineFuelFilter(SuctionSide)LifeRemaining_spn11742'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 0.4) # Unit = %
    data['EngineOilFilterLifeRemaining_spn11743'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 0.4) # Unit = %
    data['TransmissionOIlFilterLifeRemaining_spn11744'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 0.4) # Unit = %
    return data

# HCI1
def PGN_64334(msg, data):
    data['HoistLeverPosition_spn11727'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.005) - 150.0 # Unit = %
    data['HoistLeverDetentPositionStatus_spn11728'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    return data

# VFSSM1DET
def PGN_64347(msg, data):
    data['VFSSModule1Detector1DetectorType_spn10845'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['VFSSModule1Detector1DetectorDataSLOT_spn10846'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['VFSSModule1Detector2DetectorType_spn10848'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['VFSSModule1Detector2DetectorDataSLOT_spn10849'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['VFSSModule1Detector3DetectorType_spn10851'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['VFSSModule1Detector3DetectorDataSLOT_spn10852'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['VFSSModule1Detector4DetectorType_spn10854'] = ( enforceMaxV(( (int(msg[18:20], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['VFSSModule1Detector4DetectorDataSLOT_spn10855'] = ( enforceMaxV(( ((int(msg[18:20], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['VFSSModule1Detector5DetectorType_spn10857'] = ( enforceMaxV(( (int(msg[24:26], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['VFSSModule1Detector5DetectorDataSLOT_spn10858'] = ( enforceMaxV(( ((int(msg[24:26], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['VFSSModule1Detector6DetectorType_spn10860'] = ( enforceMaxV(( (int(msg[30:32], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['VFSSModule1Detector6DetectorDataSLOT_spn10861'] = ( enforceMaxV(( ((int(msg[30:32], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['VFSSModule1Detector7DetectorType_spn10863'] = ( enforceMaxV(( (int(msg[36:38], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['VFSSModule1Detector7DetectorDataSLOT_spn10864'] = ( enforceMaxV(( ((int(msg[36:38], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['VFSSModule1Detector8DetectorType_spn10866'] = ( enforceMaxV(( (int(msg[42:44], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['VFSSModule1Detector8DetectorDataSLOT_spn10867'] = ( enforceMaxV(( ((int(msg[42:44], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    return data

# VFSSM2DET
def PGN_64348(msg, data):
    data['VFSSModule2Detector1DetectorType_spn10869'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['VFSSModule2Detector1DetectorDataSLOT_spn10870'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['VFSSModule2Detector2DetectorType_spn10872'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['VFSSModule2Detector2DetectorDataSLOT_spn10873'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['VFSSModule2Detector3DetectorType_spn10875'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['VFSSModule2Detector3DetectorDataSLOT_spn10876'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['VFSSModule2Detector4DetectorType_spn10878'] = ( enforceMaxV(( (int(msg[18:20], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['VFSSModule2Detector4DetectorDataSLOT_spn10879'] = ( enforceMaxV(( ((int(msg[18:20], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['VFSSModule2Detector5DetectorType_spn10881'] = ( enforceMaxV(( (int(msg[24:26], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['VFSSModule2Detector5DetectorDataSLOT_spn10882'] = ( enforceMaxV(( ((int(msg[24:26], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['VFSSModule2Detector6DetectorType_spn10884'] = ( enforceMaxV(( (int(msg[30:32], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['VFSSModule2Detector6DetectorDataSLOT_spn10885'] = ( enforceMaxV(( ((int(msg[30:32], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['VFSSModule2Detector7DetectorType_spn10887'] = ( enforceMaxV(( (int(msg[36:38], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['VFSSModule2Detector7DetectorDataSLOT_spn10888'] = ( enforceMaxV(( ((int(msg[36:38], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['VFSSModule2Detector8DetectorType_spn10890'] = ( enforceMaxV(( (int(msg[42:44], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['VFSSModule2Detector8DetectorDataSLOT_spn10891'] = ( enforceMaxV(( ((int(msg[42:44], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    return data

# VFSSM3DET
def PGN_64349(msg, data):
    data['VFSSModule3Detector1DetectorType_spn10893'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['VFSSModule3Detector1DetectorDataSLOT_spn10894'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['VFSSModule3Detector2DetectorType_spn10896'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['VFSSModule3Detector2DetectorDataSLOT_spn10897'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['VFSSModule3Detector3DetectorType_spn10899'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['VFSSModule3Detector3DetectorDataSLOT_spn10900'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['VFSSModule3Detector4DetectorType_spn10902'] = ( enforceMaxV(( (int(msg[18:20], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['VFSSModule3Detector4DetectorDataSLOT_spn10903'] = ( enforceMaxV(( ((int(msg[18:20], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['VFSSModule3Detector5DetectorType_spn10905'] = ( enforceMaxV(( (int(msg[24:26], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['VFSSModule3Detector5DetectorDataSLOT_spn10906'] = ( enforceMaxV(( ((int(msg[24:26], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['VFSSModule3Detector6DetectorType_spn10908'] = ( enforceMaxV(( (int(msg[30:32], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['VFSSModule3Detector6DetectorDataSLOT_spn10909'] = ( enforceMaxV(( ((int(msg[30:32], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['VFSSModule3Detector7DetectorType_spn10911'] = ( enforceMaxV(( (int(msg[36:38], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['VFSSModule3Detector7DetectorDataSLOT_spn10912'] = ( enforceMaxV(( ((int(msg[36:38], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['VFSSModule3Detector8DetectorType_spn10914'] = ( enforceMaxV(( (int(msg[42:44], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['VFSSModule3Detector8DetectorDataSLOT_spn10915'] = ( enforceMaxV(( ((int(msg[42:44], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    return data

# VFSSM4DET
def PGN_64350(msg, data):
    data['VFSSModule4Detector1DetectorType_spn10917'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['VFSSModule4Detector1DetectorDataSLOT_spn10918'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['VFSSModule4Detector2DetectorType_spn10920'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['VFSSModule4Detector2DetectorDataSLOT_spn10921'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['VFSSModule4Detector3DetectorType_spn10923'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['VFSSModule4Detector3DetectorDataSLOT_spn10924'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['VFSSModule4Detector4DetectorType_spn10926'] = ( enforceMaxV(( (int(msg[18:20], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['VFSSModule4Detector4DetectorDataSLOT_spn10927'] = ( enforceMaxV(( ((int(msg[18:20], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['VFSSModule4Detector5DetectorType_spn10929'] = ( enforceMaxV(( (int(msg[24:26], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['VFSSModule4Detector5DetectorDataSLOT_spn10930'] = ( enforceMaxV(( ((int(msg[24:26], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['VFSSModule4Detector6DetectorType_spn10932'] = ( enforceMaxV(( (int(msg[30:32], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['VFSSModule4Detector6DetectorDataSLOT_spn10933'] = ( enforceMaxV(( ((int(msg[30:32], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['VFSSModule4Detector7DetectorType_spn10935'] = ( enforceMaxV(( (int(msg[36:38], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['VFSSModule4Detector7DetectorDataSLOT_spn10936'] = ( enforceMaxV(( ((int(msg[36:38], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['VFSSModule4Detector8DetectorType_spn10938'] = ( enforceMaxV(( (int(msg[42:44], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['VFSSModule4Detector8DetectorDataSLOT_spn10939'] = ( enforceMaxV(( ((int(msg[42:44], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    return data

# VFSSM1AUX
def PGN_64351(msg, data):
    data['VFSSModule1HeatZone1Data_spn10941'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    data['VFSSModule1HeatZone2Data_spn10942'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    data['VFSSModule1ReleaseZone1Data_spn10943'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    data['VFSSModule1ReleaseZone2Data_spn10944'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    data['VFSSModule1PressureSwitch1Data_spn10945'] = ( enforceMaxV(( (int(msg[16:18], 16)) + ((int(msg[18:20], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    data['VFSSModule1PressureSwitch2Data_spn10946'] = ( enforceMaxV(( (int(msg[20:22], 16)) + ((int(msg[22:24], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    data['VFSSModule1PrimaryPowerVoltage_spn10947'] = ( enforceMaxV(( (int(msg[24:26], 16)) + ((int(msg[26:28], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    data['VFSSModule1SecondaryPowerVoltage_spn10948'] = ( enforceMaxV(( (int(msg[28:30], 16)) + ((int(msg[30:32], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    return data

# VFSSM2AUX
def PGN_64352(msg, data):
    data['VFSSModule2HeatZone1Data_spn10949'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    data['VFSSModule2HeatZone2Data_spn10950'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    data['VFSSModule2ReleaseZone1Data_spn10951'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    data['VFSSModule2ReleaseZone2Data_spn10952'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    data['VFSSModule2PressureSwitch1Data_spn10953'] = ( enforceMaxV(( (int(msg[16:18], 16)) + ((int(msg[18:20], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    data['VFSSModule2PressureSwitch2Data_spn10954'] = ( enforceMaxV(( (int(msg[20:22], 16)) + ((int(msg[22:24], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    data['VFSSModule2PrimaryPowerVoltage_spn10955'] = ( enforceMaxV(( (int(msg[24:26], 16)) + ((int(msg[26:28], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    data['VFSSModule2SecondaryPowerVoltage_spn10956'] = ( enforceMaxV(( (int(msg[28:30], 16)) + ((int(msg[30:32], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    return data

# VFSSM3AUX
def PGN_64353(msg, data):
    data['VFSSModule3HeatZone1Data_spn10957'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    data['VFSSModule3HeatZone2Data_spn10958'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    data['VFSSModule3ReleaseZone1Data_spn10959'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    data['VFSSModule3ReleaseZone2Data_spn10960'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    data['VFSSModule3PressureSwitch1Data_spn10961'] = ( enforceMaxV(( (int(msg[16:18], 16)) + ((int(msg[18:20], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    data['VFSSModule3PressureSwitch2Data_spn10962'] = ( enforceMaxV(( (int(msg[20:22], 16)) + ((int(msg[22:24], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    data['VFSSModule3PrimaryPowerVoltage_spn10963'] = ( enforceMaxV(( (int(msg[24:26], 16)) + ((int(msg[26:28], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    data['VFSSModule3SecondaryPowerVoltage_spn10964'] = ( enforceMaxV(( (int(msg[28:30], 16)) + ((int(msg[30:32], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    return data

# VFSSM4AUX
def PGN_64354(msg, data):
    data['VFSSModule4HeatZone1Data_spn10965'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    data['VFSSModule4HeatZone2Data_spn10966'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    data['VFSSModule4ReleaseZone1Data_spn10967'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    data['VFSSModule4ReleaseZone2Data_spn10968'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    data['VFSSModule4PressureSwitch1Data_spn10969'] = ( enforceMaxV(( (int(msg[16:18], 16)) + ((int(msg[18:20], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    data['VFSSModule4PressureSwitch2Data_spn10970'] = ( enforceMaxV(( (int(msg[20:22], 16)) + ((int(msg[22:24], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    data['VFSSModule4PrimaryPowerVoltage_spn10971'] = ( enforceMaxV(( (int(msg[24:26], 16)) + ((int(msg[26:28], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    data['VFSSModule4SecondaryPowerVoltage_spn10972'] = ( enforceMaxV(( (int(msg[28:30], 16)) + ((int(msg[30:32], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    return data

# MG2IAPL
def PGN_64359(msg, data):
    data['Motor/Generator2InverterPowerLimitedduetoUndefinedReason_spn10817'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator2InverterPowerLimitedduetoDCSideCurrentMaximum_spn10818'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator2InverterPowerLimitedduetoDCSideCurrentMinimum_spn10819'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator2InverterPowerLimitedduetoDCSideVoltageMaximum_spn10820'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator2InverterPowerLimitedduetoDCSideVoltageMinimum_spn10821'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator2InverterPowerLimitedduetoMechanicalPowerMaximum_spn10822'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator2InverterPowerLimitedduetoMechanicalPowerMinimum_spn10823'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator2InverterPowerLimitedduetoDCSidePowerMaximum_spn10824'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator2InverterPowerLimitedduetoDCSidePowerMinimum_spn10825'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator2InverterPowerLimitedduetoTorqueMaximum_spn10826'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator2InverterPowerLimitedduetoTorqueMinimum_spn10827'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator2InverterPowerLimitedduetoSpeedMaximum_spn10828'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator2InverterPowerLimitedduetoSpeedMinimum_spn10829'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator2InverterPowerLimitedduetoInverterTemperature_spn10830'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator2InverterPowerLimitedduetoMotorTemperature_spn10831'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator2InverterPowerLimitedDuetoFaultCondition_spn13045'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator2InverterPowerLimitedDuetoActiveTorqueRateLimit_spn13046'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator2InverterPowerLimitedDuetoActiveSpeedRateLimit_spn13047'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator2InverterTorqueLimitedDuetoMachineCharacteristics_spn13048'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# MG2II
def PGN_64360(msg, data):
    data['Motor/Generator2InverterIsolationIntegrityCRC_spn10810'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator2InverterIsolationIntegrityCounter_spn10811'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator2InverterDCSideNegativetoChassisGroundVoltage_spn10812'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4) + ((int(msg[4:6], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator2InverterHigh-VoltageBusActiveIsolationTestStatus_spn10813'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator2InverterHigh-VoltageBusPassiveIsolationTestStatus_spn10814'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator2InverterHigh-VoltageBusActiveIsolationTestResults_spn10815'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.1) # Unit = ohm/V
    data['Motor/Generator2InverterHigh-VoltageBusPassiveIsolationTestResults_spn10816'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.1) # Unit = ohm/V
    return data

# MG1IAPL
def PGN_64361(msg, data):
    data['Motor/Generator1InverterPowerLimitedduetoUndefinedReason_spn10779'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator1InverterPowerLimitedduetoDCSideCurrentMaximum_spn10780'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator1InverterPowerLimitedduetoDCSideCurrentMinimum_spn10781'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator1InverterPowerLimitedduetoDCSideVoltageMaximum_spn10782'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator1InverterPowerLimitedduetoDCSideVoltageMinimum_spn10783'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator1InverterPowerLimitedduetoMechanicalPowerMaximum_spn10784'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator1InverterPowerLimitedduetoMechanicalPowerMinimum_spn10785'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator1InverterPowerLimitedduetoDCSidePowerMaximum_spn10786'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator1InverterPowerLimitedduetoDCSidePowerMinimum_spn10787'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator1InverterPowerLimitedduetoTorqueMaximum_spn10788'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator1InverterPowerLimitedduetoTorqueMinimum_spn10789'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator1InverterPowerLimitedduetoSpeedMaximum_spn10790'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator1InverterPowerLimitedduetoSpeedMinimum_spn10791'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator1InverterPowerLimitedduetoInverterTemperature_spn10792'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator1InverterPowerLimitedduetoMotorTemperature_spn10793'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator1InverterPowerLimitedDuetoFaultCondition_spn13041'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator1InverterPowerLimitedDuetoActiveTorqueRateLimit_spn13042'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator1InverterPowerLimitedDuetoActiveSpeedRateLimit_spn13043'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Motor/Generator1InverterTorqueLimitedDuetoMachineCharacteristics_spn13044'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# MG1II
def PGN_64362(msg, data):
    data['Motor/Generator1InverterIsolationIntegrityCRC_spn10772'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator1InverterIsolationIntegrityCounter_spn10773'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator1InverterDCSideNegativetoChassisGroundVoltage_spn10774'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4) + ((int(msg[4:6], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator1InverterHigh-VoltageBusActiveIsolationTestStatus_spn10775'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator1InverterHigh-VoltageBusPassiveIsolationTestStatus_spn10776'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator1InverterHigh-VoltageBusActiveIsolationTestResults_spn10777'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.1) # Unit = ohm/V
    data['Motor/Generator1InverterHigh-VoltageBusPassiveIsolationTestResults_spn10778'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.1) # Unit = ohm/V
    return data

# HVBI
def PGN_64363(msg, data):
    data['HighVoltageDCBusAvailability_spn10298'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    return data

# MG2IR1
def PGN_64364(msg, data):
    data['Motor/Generator2InverterReference1CRC_spn10234'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator2InverterReference1Counter_spn10235'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator2InverterReferenceTorque_spn10236'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.5) # Unit = Nm
    data['Motor/Generator2InverterReferenceSpeed_spn10237'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 4.0) # Unit = rpm
    data['Motor/Generator2InverterReferencePower_spn10238'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.0625) # Unit = kW
    return data

# MG2IS1
def PGN_64365(msg, data):
    data['Motor/Generator2InverterStatus1CRC_spn10239'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator2InverterStatus1Counter_spn10240'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator2Torque_spn9062'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4) + ((int(msg[4:6], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator2Speed_spn9058'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64259)  * 0.003906) - 125.0 # Unit = %
    data['Motor/Generator2InverterDCSideCurrent_spn10241'] = ( enforceMaxV(( (int(msg[10:12], 16)) + ((int(msg[12:14], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator2InverterDCSideVoltage_spn9102'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11110000) >> 4) + ((int(msg[14:16], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    return data

# MG2IR2
def PGN_64366(msg, data):
    data['Motor/Generator2InverterReference2CRC_spn10266'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator2InverterReference2Counter_spn10267'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator2InverterReferenceCurrent_spn10268'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.125) # Unit = A
    data['Motor/Generator2InverterReferenceVoltage_spn10269'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.125) # Unit = V
    return data

# MG2IT
def PGN_64367(msg, data):
    data['Motor/Generator2InverterTemperature1_spn10282'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['Motor/Generator2InverterTemperature2_spn10283'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['Motor/Generator2InverterTemperature3_spn10284'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['Motor/Generator2InverterTemperature4_spn10285'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    return data

# MG2IMT
def PGN_64368(msg, data):
    data['Motor/Generator2Temperature1_spn9060'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['Motor/Generator2Temperature2_spn10286'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['Motor/Generator2Temperature3_spn10287'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['Motor/Generator2Temperature4_spn10288'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    return data

# MG1IMT
def PGN_64369(msg, data):
    data['Motor/Generator1Temperature1_spn9059'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['Motor/Generator1Temperature2_spn10220'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['Motor/Generator1Temperature3_spn10221'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['Motor/Generator1Temperature4_spn10222'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    return data

# MG1IT
def PGN_64370(msg, data):
    data['Motor/Generator1InverterTemperature1_spn10216'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['Motor/Generator1InverterTemperature2_spn10217'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['Motor/Generator1InverterTemperature3_spn10218'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['Motor/Generator1InverterTemperature4_spn10219'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    return data

# MG1IR2
def PGN_64371(msg, data):
    data['Motor/Generator1InverterReference2CRC_spn10200'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator1InverterReference2Counter_spn10201'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator1InverterReferenceCurrent_spn10202'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.125) # Unit = A
    data['Motor/Generator1InverterReferenceVoltage_spn10203'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.125) # Unit = V
    return data

# MG1IS1
def PGN_64372(msg, data):
    data['Motor/Generator1InverterStatus1CRC_spn10173'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator1InverterStatus1Counter_spn10174'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator1Torque_spn9061'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4) + ((int(msg[4:6], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator1Speed_spn9057'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64259)  * 0.003906) - 125.0 # Unit = %
    data['Motor/Generator1InverterDCSideCurrent_spn10175'] = ( enforceMaxV(( (int(msg[10:12], 16)) + ((int(msg[12:14], 16) & 0b00001111) << 8 )), 4015)  * 0.0625) - 125.0 # Unit = %
    data['Motor/Generator1InverterDCSideVoltage_spn9101'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11110000) >> 4) + ((int(msg[14:16], 16)) << 4 )), 4015)  * 0.0625) - 125.0 # Unit = %
    return data

# MG1IR1
def PGN_64373(msg, data):
    data['Motor/Generator1InverterReference1CRC_spn10168'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = count
    data['Motor/Generator1InverterReference1Counter_spn10169'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Motor/Generator1InverterReferenceTorque_spn10170'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.5) # Unit = Nm
    data['Motor/Generator1InverterReferenceSpeed_spn10171'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 4.0) # Unit = rpm
    data['Motor/Generator1InverterReferencePower_spn10172'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.0625) # Unit = kW
    return data

# PDS
def PGN_64374(msg, data):
    data['DetectionLocation1_spn10133'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00001111)), 13)  * 1.0) # Unit = count
    data['DetectionZone1_spn10132'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11110000) >> 4)), 13)  * 1.0) # Unit = count
    data['ZoneAlarmStatus1_spn10134'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['DetectionLocation2_spn10136'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00001111)), 13)  * 1.0) # Unit = count
    data['DetectionZone2_spn10135'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11110000) >> 4)), 13)  * 1.0) # Unit = count
    data['ZoneAlarmStatus2_spn10137'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['DetectionLocation3_spn10139'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00001111)), 13)  * 1.0) # Unit = count
    data['DetectionZone3_spn10138'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11110000) >> 4)), 13)  * 1.0) # Unit = count
    data['ZoneAlarmStatus3_spn10140'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['PersonnelDetectSequenceCounter_spn10141'] = ( enforceMaxV(( (int(msg[12:14], 16))), 255)  * 1.0) # Unit = count
    return data

# ECPG1
def PGN_64375(msg, data):
    data['EngineCylinder1CompressionGammaRatio_spn10077'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 0.004) + 1.0 # Unit = Ratio
    data['EngineCylinder1ExpansionGammaRatio_spn10078'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 0.004) + 1.0 # Unit = Ratio
    data['EngineCylinder2CompressionGammaRatio_spn10079'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 0.004) + 1.0 # Unit = Ratio
    data['EngineCylinder2ExpansionGammaRatio_spn10080'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 0.004) + 1.0 # Unit = Ratio
    data['EngineCylinder3CompressionGammaRatio_spn10081'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.004) + 1.0 # Unit = Ratio
    data['EngineCylinder3ExpansionGammaRatio_spn10082'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 0.004) + 1.0 # Unit = Ratio
    data['EngineCylinder4CompressionGammaRatio_spn10083'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 0.004) + 1.0 # Unit = Ratio
    data['EngineCylinder4ExpansionGammaRatio_spn10084'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 0.004) + 1.0 # Unit = Ratio
    return data

# ECPG2
def PGN_64376(msg, data):
    data['EngineCylinder5CompressionGammaRatio_spn10085'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 0.004) + 1.0 # Unit = Ratio
    data['EngineCylinder5ExpansionGammaRatio_spn10086'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 0.004) + 1.0 # Unit = Ratio
    data['EngineCylinder6CompressionGammaRatio_spn10087'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 0.004) + 1.0 # Unit = Ratio
    data['EngineCylinder6ExpansionGammaRatio_spn10088'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 0.004) + 1.0 # Unit = Ratio
    data['EngineCylinder7CompressionGammaRatio_spn10089'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.004) + 1.0 # Unit = Ratio
    data['EngineCylinder7ExpansionGammaRatio_spn10090'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 0.004) + 1.0 # Unit = Ratio
    data['EngineCylinder8CompressionGammaRatio_spn10091'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 0.004) + 1.0 # Unit = Ratio
    data['EngineCylinder8ExpansionGammaRatio_spn10092'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 0.004) + 1.0 # Unit = Ratio
    return data

# ECPG3
def PGN_64377(msg, data):
    data['EngineCylinder9CompressionGammaRatio_spn10093'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 0.004) + 1.0 # Unit = Ratio
    data['EngineCylinder9ExpansionGammaRatio_spn10094'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 0.004) + 1.0 # Unit = Ratio
    data['EngineCylinder10CompressionGammaRatio_spn10095'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 0.004) + 1.0 # Unit = Ratio
    data['EngineCylinder10ExpansionGammaRatio_spn10096'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 0.004) + 1.0 # Unit = Ratio
    data['EngineCylinder11CompressionGammaRatio_spn10097'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.004) + 1.0 # Unit = Ratio
    data['EngineCylinder11ExpansionGammaRatio_spn10098'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 0.004) + 1.0 # Unit = Ratio
    data['EngineCylinder12CompressionGammaRatio_spn10099'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 0.004) + 1.0 # Unit = Ratio
    data['EngineCylinder12ExpansionGammaRatio_spn10100'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 0.004) + 1.0 # Unit = Ratio
    return data

# ECPG4
def PGN_64378(msg, data):
    data['EngineCylinder13CompressionGammaRatio_spn10101'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 0.004) + 1.0 # Unit = Ratio
    data['EngineCylinder13ExpansionGammaRatio_spn10102'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 0.004) + 1.0 # Unit = Ratio
    data['EngineCylinder14CompressionGammaRatio_spn10103'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 0.004) + 1.0 # Unit = Ratio
    data['EngineCylinder14ExpansionGammaRatio_spn10104'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 0.004) + 1.0 # Unit = Ratio
    data['EngineCylinder15CompressionGammaRatio_spn10105'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.004) + 1.0 # Unit = Ratio
    data['EngineCylinder15ExpansionGammaRatio_spn10106'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 0.004) + 1.0 # Unit = Ratio
    data['EngineCylinder16CompressionGammaRatio_spn10107'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 0.004) + 1.0 # Unit = Ratio
    data['EngineCylinder16ExpansionGammaRatio_spn10108'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 0.004) + 1.0 # Unit = Ratio
    return data

# ECPG5
def PGN_64379(msg, data):
    data['EngineCylinder17CompressionGammaRatio_spn10109'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 0.004) + 1.0 # Unit = Ratio
    data['EngineCylinder17ExpansionGammaRatio_spn10110'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 0.004) + 1.0 # Unit = Ratio
    data['EngineCylinder18CompressionGammaRatio_spn10111'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 0.004) + 1.0 # Unit = Ratio
    data['EngineCylinder18ExpansionGammaRatio_spn10112'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 0.004) + 1.0 # Unit = Ratio
    data['EngineCylinder19CompressionGammaRatio_spn10113'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.004) + 1.0 # Unit = Ratio
    data['EngineCylinder19ExpansionGammaRatio_spn10114'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 0.004) + 1.0 # Unit = Ratio
    data['EngineCylinder20CompressionGammaRatio_spn10115'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 0.004) + 1.0 # Unit = Ratio
    data['EngineCylinder20ExpansionGammaRatio_spn10116'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 0.004) + 1.0 # Unit = Ratio
    return data

# EAGCPS
def PGN_64381(msg, data):
    data['GeneratorCoolantPumpEnableStatus_spn9833'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['GeneratorCoolantPumpControllerStatusReasonCode_spn9834'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00111100) >> 2)), 15)  * 1.0) # Unit = bit
    data['GeneratorCoolantPumpControllerCommandStatus_spn9835'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['GeneratorCoolantPumpMotorSpeed_spn9836'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 )), 64255)  * 0.5) # Unit = rpm
    data['GeneratorCoolantPumpControlTemperature_spn9837'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['GeneratorCoolantPumpPower_spn9838'] = ( enforceMaxV(( (int(msg[10:12], 16)) + ((int(msg[12:14], 16)) << 8 )), 64255)  * 0.5) # Unit = W
    data['GeneratorCoolantPumpServiceIndicator_spn9839'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['GeneratorCoolantPumpOperatingStatus_spn9840'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    return data

# EAGCFS
def PGN_64382(msg, data):
    data['GeneratorCoolantFanEnableStatus_spn9820'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['GeneratorCoolantFanControllerStatusReasonCode_spn9821'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00111100) >> 2)), 15)  * 1.0) # Unit = bit
    data['GeneratorCoolantFanControllerCommandStatus_spn9822'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['GeneratorCoolantFanMotorSpeed_spn9823'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 )), 64255)  * 0.5) # Unit = rpm
    data['GeneratorCoolantFanControlTemperature_spn9824'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['GeneratorCoolantFanPower_spn9825'] = ( enforceMaxV(( (int(msg[10:12], 16)) + ((int(msg[12:14], 16)) << 8 )), 64255)  * 0.5) # Unit = W
    data['GeneratorCoolantFanServiceIndicator_spn9826'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['GeneratorCoolantFanOperatingStatus_spn9827'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    return data

# WSPF
def PGN_64383(msg, data):
    data['WellStimulationPumpOilFilterDifferentialPressure_spn9813'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 4.0) # Unit = kPa
    data['WellStimulationPumpGearBoxOutletOilPressure_spn9814'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    data['WellStimulationPumpOilFilterBypassSwitchStatus_spn9815'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    return data

# PTOGC
def PGN_64384(msg, data):
    data['PreprogrammedPTOGovernorSetSpeed1_spn9778'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.125) # Unit = rpm
    data['PreprogrammedPTOGovernorSetSpeed2_spn9779'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.125) # Unit = rpm
    data['PreprogrammedPTOGovernorSetSpeed3_spn9780'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.125) # Unit = rpm
    data['PreprogrammedPTOGovernorSetSpeed4_spn9781'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.125) # Unit = rpm
    data['PreprogrammedPTOGovernorSetSpeed5_spn9782'] = ( enforceMaxV(( (int(msg[16:18], 16)) + ((int(msg[18:20], 16)) << 8 )), 64255)  * 0.125) # Unit = rpm
    data['PreprogrammedPTOGovernorSetSpeed6_spn9783'] = ( enforceMaxV(( (int(msg[20:22], 16)) + ((int(msg[22:24], 16)) << 8 )), 64255)  * 0.125) # Unit = rpm
    data['PreprogrammedPTOGovernorSetSpeed7_spn9784'] = ( enforceMaxV(( (int(msg[24:26], 16)) + ((int(msg[26:28], 16)) << 8 )), 64255)  * 0.125) # Unit = rpm
    data['PreprogrammedPTOGovernorSetSpeed8_spn9785'] = ( enforceMaxV(( (int(msg[28:30], 16)) + ((int(msg[30:32], 16)) << 8 )), 64255)  * 0.125) # Unit = rpm
    data['MinimumPTOGovernorSetSpeed_spn9786'] = ( enforceMaxV(( (int(msg[32:34], 16)) + ((int(msg[34:36], 16)) << 8 )), 64255)  * 0.125) # Unit = rpm
    data['MaximumPTOGovernorSetSpeed_spn9787'] = ( enforceMaxV(( (int(msg[36:38], 16)) + ((int(msg[38:40], 16)) << 8 )), 64255)  * 0.125) # Unit = rpm
    data['PTOGovernorAcceleratorOverrideMaximumSpeed_spn9788'] = ( enforceMaxV(( (int(msg[40:42], 16)) + ((int(msg[42:44], 16)) << 8 )), 64255)  * 0.125) # Unit = rpm
    return data

# OBP2
def PGN_64385(msg, data):
    data['OnBoardProgrammingInitiateECUAddress_spn9776'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = SA
    data['OnBoardProgrammingInitiateRequest_spn9777'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['OnBoardProgrammingInitiateInhibit_spn9761'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    return data

# EIMI
def PGN_64389(msg, data):
    data['EngineIdleManagementStatus_spn9677'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['EngineIdleManagementEngineRestartReason_spn9678'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['EngineIdleManagementEngineShutdownReason_spn9679'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['IdleManagementPendingEventTimeRemaining_spn10149'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 1.0) # Unit = s
    return data

# MCI3
def PGN_64392(msg, data):
    data['StationThrottlePositionMatch_spn9665'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['StationGearPositionMatch_spn9666'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['OperatorStationActiveButtonStatus_spn9667'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['TrollingModeButtonStatus_spn9668'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['EngineThrottleLeverSynchronizationButtonStatus_spn9669'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['GearLockoutButtonStatus_spn9670'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['SlowVesselModeButtonStatus_spn9671'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['OperatorStationActiveLampStatus_spn9672'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['TrollingModeLampStatus_spn9673'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EngineThrottleLeverSynchronizationLampStatus_spn9674'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['GearLockoutLampStatus_spn9675'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['SlowVesselModeLampStatus_spn9690'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['MarineHeavySeaModeEnable_spn12303'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    return data

# EFL/P13
def PGN_64393(msg, data):
    data['EngineOilPressure2_spn9653'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 4.0) # Unit = kPa
    return data

# HVESSD11
def PGN_64394(msg, data):
    data['HVESSBusVoltageNegativetoChassisGroundVoltage_spn9580'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['HVESSVoltageLevelNegativetoChassisGroundVoltage_spn9581'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['HVESSActualChargeRate_spn13071'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.05) # Unit = kW
    return data

# EMIH
def PGN_64395(msg, data):
    data['EconomyModeTotalHoursInactive_spn9578'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 0.05) # Unit = h
    data['EconomyModeTripHoursInactive_spn9579'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 ) + ((int(msg[12:14], 16)) << 16 ) + ((int(msg[14:16], 16)) << 24 )), 4211081215)  * 0.05) # Unit = h
    return data

# EMEIFSR
def PGN_64396(msg, data):
    data['EconomyModeEstimatedInstantaneousFuelSavingsRate_spn9576'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) # Unit = l/h
    data['EconomyModeEstimatedInstantaneousFuelSavingsRatePercent_spn9577'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    return data

# EMAH
def PGN_64397(msg, data):
    data['EconomyModeTotalHoursActive_spn9574'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 0.05) # Unit = h
    data['EconomyModeTripHoursActive_spn9575'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 ) + ((int(msg[12:14], 16)) << 16 ) + ((int(msg[14:16], 16)) << 24 )), 4211081215)  * 0.05) # Unit = h
    return data

# EMFU
def PGN_64398(msg, data):
    data['EconomyModeTotalFuelUsed_spn9572'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 0.5) # Unit = l
    data['EconomyModeTripFuelUsed_spn9573'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 ) + ((int(msg[12:14], 16)) << 16 ) + ((int(msg[14:16], 16)) << 24 )), 4211081215)  * 0.5) # Unit = l
    return data

# EMEFS
def PGN_64399(msg, data):
    data['EconomyModeTotalEstimatedFuelSaved_spn9570'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 0.5) # Unit = l
    data['EconomyModeTripEstimatedFuelSaved_spn9571'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 ) + ((int(msg[12:14], 16)) << 16 ) + ((int(msg[14:16], 16)) << 24 )), 4211081215)  * 0.5) # Unit = l
    return data

# DCDC4V
def PGN_64400(msg, data):
    data['DC/DC4ControllerInputIgnitionVoltage_spn9564'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['DC/DC4ControllerInputUnswitchedSLIVoltage_spn9565'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    return data

# DCDC3V
def PGN_64401(msg, data):
    data['DC/DC3ControllerInputIgnitionVoltage_spn9562'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['DC/DC3ControllerInputUnswitchedSLIVoltage_spn9563'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    return data

# DCDC2V
def PGN_64402(msg, data):
    data['DC/DC2ControllerInputIgnitionVoltage_spn9560'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['DC/DC2ControllerInputUnswitchedSLIVoltage_spn9561'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    return data

# DCDC1V
def PGN_64403(msg, data):
    data['DC/DC1ControllerInputIgnitionVoltage_spn9558'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['DC/DC1ControllerInputUnswitchedSLIVoltage_spn9559'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    return data

# EEC22
def PGN_64404(msg, data):
    data['EngineExhaustGasRecirculation1CoolerIntakePressure_spn9379'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 5.0) # Unit = kPa
    return data

# HOURS2
def PGN_64405(msg, data):
    data['EngineIdleManagementActiveTotalTime_spn9377'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 0.05) # Unit = h
    return data

# EI3
def PGN_64406(msg, data):
    data['InstantaneousEstimatedEnginePowerRateLimit_spn9375'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.125) # Unit = kW/s
    return data

# VEP15
def PGN_64407(msg, data):
    data['SLIBatteryPack1Battery1CapacitySetting_spn9368'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 1.0) # Unit = Ah
    data['SLIBatteryPack1Battery2CapacitySetting_spn9369'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 1.0) # Unit = Ah
    data['SLIBatteryPack1Battery3CapacitySetting_spn9370'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 1.0) # Unit = Ah
    data['SLIBatteryPack1Battery4CapacitySetting_spn9371'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 1.0) # Unit = Ah
    return data

# EO2
def PGN_64408(msg, data):
    data['EngineActualExhaust2Oxygen_spn9367'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    return data

# DCAC_AI1_T
def PGN_64409(msg, data):
    data['DC/ACAccessoryInverter1ControllerTemperature_spn9204'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['DC/ACAccessoryInverter1InverterElectronicFilterTemperature_spn9205'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['DC/ACAccessoryInverter1PowerElectronicsTemperature_spn9206'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['DC/ACAccessoryInverter1CoolantInTemperature_spn9207'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['DC/ACAccessoryInverter1CoolantOutTemperature_spn9208'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    return data

# DCAC_AI1_DCL
def PGN_64410(msg, data):
    data['DC/ACAccessoryInverter1DCSideVoltageMinimumLimitRequest_spn9221'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['DC/ACAccessoryInverter1DCSideCurrentMaximumLimitRequest_spn9222'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) # Unit = A
    data['DC/ACAccessoryInverter1DCSideVoltageMaximumLimitRequest_spn9529'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['DC/ACAccessoryInverter1DCSideCurrentMinimumLimitRequest_spn9530'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.05) - 3212.75 # Unit = A
    return data

# DCAC_AI1_ACL
def PGN_64411(msg, data):
    data['DC/ACAccessoryInverter1ACSideRMSVoltageMaximumLimitRequest_spn9223'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.03125) # Unit = V
    data['DC/ACAccessoryInverter1ACSideRMSCurrentMaximumLimitRequest_spn9224'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.03125) # Unit = A
    data['DC/ACAccessoryInverter1ACSideDefaultFrequencyRequest_spn9523'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) # Unit = Hz
    return data

# DCAC_AI1_CFG1
def PGN_64412(msg, data):
    data['DC/ACAccessoryInverter1DCSideVoltageMinimumLimitSetting_spn9225'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['DC/ACAccessoryInverter1DCSideCurrentMaximumLimitSetting_spn9226'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) # Unit = A
    data['DC/ACAccessoryInverter1ACSideRMSVoltageMaximumLimitSetting_spn9227'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.03125) # Unit = V
    data['DC/ACAccessoryInverter1ACSideRMSCurrentMaximumLimitSetting_spn9228'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.03125) # Unit = A
    data['DC/ACAccessoryInverter1DCSideVoltageMaximumLimitSetting_spn9531'] = ( enforceMaxV(( (int(msg[16:18], 16)) + ((int(msg[18:20], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['DC/ACAccessoryInverter1DCSideCurrentMinimumLimitSetting_spn9532'] = ( enforceMaxV(( (int(msg[20:22], 16)) + ((int(msg[22:24], 16)) << 8 )), 64255)  * 0.05) - 3212.75 # Unit = A
    data['DC/ACAccessoryInverter1ACSideDefaultFrequencyCommandSetting_spn9533'] = ( enforceMaxV(( (int(msg[24:26], 16))), 250)  * 1.0) # Unit = Hz
    return data

# DCAC_AI1_LD
def PGN_64413(msg, data):
    data['DC/ACAccessoryInverter1TotalDCInputCharge_spn9229'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 100.0) # Unit = Ah
    data['DC/ACAccessoryInverter1TotalDCInputEnergy_spn9230'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 ) + ((int(msg[12:14], 16)) << 16 ) + ((int(msg[14:16], 16)) << 24 )), 4211081215)  * 100.0) # Unit = Watt-hour
    return data

# DCAC_AI2_T
def PGN_64414(msg, data):
    data['DC/ACAccessoryInverter2ControllerTemperature_spn9231'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['DC/ACAccessoryInverter2InverterElectronicFilterTemperature_spn9232'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['DC/ACAccessoryInverter2PowerElectronicsTemperature_spn9233'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['DC/ACAccessoryInverter2CoolantInTemperature_spn9234'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['DC/ACAccessoryInverter2CoolantOutTemperature_spn9235'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    return data

# DCAC_AI2_DCL
def PGN_64415(msg, data):
    data['DC/ACAccessoryInverter2DCSideVoltageMinimumLimitRequest_spn9251'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['DC/ACAccessoryInverter2DCSideCurrentMaximumLimitRequest_spn9252'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) # Unit = A
    data['DC/ACAccessoryInverter2DCSideVoltageMaximumLimitRequest_spn9535'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['DC/ACAccessoryInverter2DCSideCurrentMinimumLimitRequest_spn9536'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.05) - 3212.75 # Unit = A
    return data

# DCAC_AI2_ACL
def PGN_64416(msg, data):
    data['DC/ACAccessoryInverter2ACSideRMSVoltageMaximumLimitRequest_spn9253'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.03125) # Unit = V
    data['DC/ACAccessoryInverter2ACSideRMSCurrentMaximumLimitRequest_spn9254'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.03125) # Unit = A
    data['DC/ACAccessoryInverter2ACSideDefaultFrequencyRequest_spn9524'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) # Unit = Hz
    return data

# DCAC_AI2_CFG1
def PGN_64417(msg, data):
    data['DC/ACAccessoryInverter2DCSideVoltageMinimumLimitSetting_spn9255'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['DC/ACAccessoryInverter2DCSideCurrentMaximumLimitSetting_spn9256'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) # Unit = A
    data['DC/ACAccessoryInverter2ACSideRMSVoltageMaximumLimitSetting_spn9257'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.03125) # Unit = V
    data['DC/ACAccessoryInverter2ACSideRMSCurrentMaximumLimitSetting_spn9258'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.03125) # Unit = A
    data['DC/ACAccessoryInverter2DCSideVoltageMaximumLimitSetting_spn9537'] = ( enforceMaxV(( (int(msg[16:18], 16)) + ((int(msg[18:20], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['DC/ACAccessoryInverter2DCSideCurrentMinimumLimitSetting_spn9538'] = ( enforceMaxV(( (int(msg[20:22], 16)) + ((int(msg[22:24], 16)) << 8 )), 64255)  * 0.05) - 3212.75 # Unit = A
    data['DC/ACAccessoryInverter2ACSideDefaultFrequencyCommandSetting_spn9539'] = ( enforceMaxV(( (int(msg[24:26], 16))), 250)  * 1.0) # Unit = Hz
    return data

# DCAC_AI2_LD
def PGN_64418(msg, data):
    data['DC/ACAccessoryInverter2TotalDCInputCharge_spn9259'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 100.0) # Unit = Ah
    data['DC/ACAccessoryInverter2TotalDCInputEnergy_spn9260'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 ) + ((int(msg[12:14], 16)) << 16 ) + ((int(msg[14:16], 16)) << 24 )), 4211081215)  * 100.0) # Unit = Watt-hour
    return data

# DCAC_AI3_T
def PGN_64419(msg, data):
    data['DC/ACAccessoryInverter3ControllerTemperature_spn9261'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['DC/ACAccessoryInverter3InverterElectronicFilterTemperature_spn9262'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['DC/ACAccessoryInverter3PowerElectronicsTemperature_spn9263'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['DC/ACAccessoryInverter3CoolantInTemperature_spn9264'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['DC/ACAccessoryInverter3CoolantOutTemperature_spn9265'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    return data

# DCAC_AI3_DCL
def PGN_64420(msg, data):
    data['DC/ACAccessoryInverter3DCSideVoltageMinimumLimitRequest_spn9281'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['DC/ACAccessoryInverter3DCSideCurrentMaximumLimitRequest_spn9282'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) # Unit = A
    data['DC/ACAccessoryInverter3DCSideVoltageMaximumLimitRequest_spn9541'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['DC/ACAccessoryInverter3DCSideCurrentMinimumLimitRequest_spn9542'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.05) - 3212.75 # Unit = A
    return data

# DCAC_AI3_ACL
def PGN_64421(msg, data):
    data['DC/ACAccessoryInverter3ACSideRMSVoltageMaximumLimitRequest_spn9283'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.03125) # Unit = V
    data['DC/ACAccessoryInverter3ACSideRMSCurrentMaximumLimitRequest_spn9284'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.03125) # Unit = A
    data['DC/ACAccessoryInverter3ACSideDefaultFrequencyRequest_spn9525'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) # Unit = Hz
    return data

# DCAC_AI3_CFG1
def PGN_64422(msg, data):
    data['DC/ACAccessoryInverter3DCSideVoltageMinimumLimitSetting_spn9285'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['DC/ACAccessoryInverter3DCSideCurrentMaximumLimitSetting_spn9286'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) # Unit = A
    data['DC/ACAccessoryInverter3ACSideRMSVoltageMaximumLimitSetting_spn9287'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.03125) # Unit = V
    data['DC/ACAccessoryInverter3ACSideRMSCurrentMaximumLimitSetting_spn9288'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.03125) # Unit = A
    data['DC/ACAccessoryInverter3DCSideVoltageMaximumLimitSetting_spn9543'] = ( enforceMaxV(( (int(msg[16:18], 16)) + ((int(msg[18:20], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['DC/ACAccessoryInverter3DCSideCurrentMinimumLimitSetting_spn9544'] = ( enforceMaxV(( (int(msg[20:22], 16)) + ((int(msg[22:24], 16)) << 8 )), 64255)  * 0.05) - 3212.75 # Unit = A
    data['DC/ACAccessoryInverter3ACSideDefaultFrequencyCommandSetting_spn9545'] = ( enforceMaxV(( (int(msg[24:26], 16))), 250)  * 1.0) # Unit = Hz
    return data

# DCAC_AI3_LD
def PGN_64423(msg, data):
    data['DC/ACAccessoryInverter3TotalDCInputCharge_spn9289'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 100.0) # Unit = Ah
    data['DC/ACAccessoryInverter3TotalDCInputEnergy_spn9290'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 ) + ((int(msg[12:14], 16)) << 16 ) + ((int(msg[14:16], 16)) << 24 )), 4211081215)  * 100.0) # Unit = Watt-hour
    return data

# DCAC_AI4_T
def PGN_64424(msg, data):
    data['DC/ACAccessoryInverter4ControllerTemperature_spn9291'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['DC/ACAccessoryInverter4InverterElectronicFilterTemperature_spn9292'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['DC/ACAccessoryInverter4PowerElectronicsTemperature_spn9293'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['DC/ACAccessoryInverter4CoolantInTemperature_spn9294'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['DC/ACAccessoryInverter4CoolantOutTemperature_spn9295'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    return data

# DCAC_AI4_DCL
def PGN_64425(msg, data):
    data['DC/ACAccessoryInverter4DCSideVoltageMinimumLimitRequest_spn9311'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['DC/ACAccessoryInverter4DCSideCurrentMaximumLimitRequest_spn9312'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) # Unit = A
    data['DC/ACAccessoryInverter4DCSideVoltageMaximumLimitRequest_spn9547'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['DC/ACAccessoryInverter4DCSideCurrentMinimumLimitRequest_spn9548'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.05) - 3212.75 # Unit = A
    return data

# DCAC_AI4_ACL
def PGN_64426(msg, data):
    data['DC/ACAccessoryInverter4ACSideRMSVoltageMaximumLimitRequest_spn9313'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.03125) # Unit = V
    data['DC/ACAccessoryInverter4ACSideRMSCurrentMaximumLimitRequest_spn9314'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.03125) # Unit = A
    data['DC/ACAccessoryInverter4ACSideDefaultFrequencyRequest_spn9526'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) # Unit = Hz
    return data

# DCAC_AI4_CFG1
def PGN_64427(msg, data):
    data['DC/ACAccessoryInverter4DCSideVoltageMinimumLimitSetting_spn9315'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['DC/ACAccessoryInverter4DCSideCurrentMaximumLimitSetting_spn9316'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) # Unit = A
    data['DC/ACAccessoryInverter4ACSideRMSVoltageMaximumLimitSetting_spn9317'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.03125) # Unit = V
    data['DC/ACAccessoryInverter4ACSideRMSCurrentMaximumLimitSetting_spn9318'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.03125) # Unit = A
    data['DC/ACAccessoryInverter4DCSideVoltageMaximumLimitSetting_spn9549'] = ( enforceMaxV(( (int(msg[16:18], 16)) + ((int(msg[18:20], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['DC/ACAccessoryInverter4DCSideCurrentMinimumLimitSetting_spn9550'] = ( enforceMaxV(( (int(msg[20:22], 16)) + ((int(msg[22:24], 16)) << 8 )), 64255)  * 0.05) - 3212.75 # Unit = A
    data['DC/ACAccessoryInverter4ACSideDefaultFrequencyCommandSetting_spn9551'] = ( enforceMaxV(( (int(msg[24:26], 16))), 250)  * 1.0) # Unit = Hz
    return data

# DCAC_AI4_LD
def PGN_64428(msg, data):
    data['DC/ACAccessoryInverter4TotalDCInputCharge_spn9319'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 100.0) # Unit = Ah
    data['DC/ACAccessoryInverter4TotalDCInputEnergy_spn9320'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 ) + ((int(msg[12:14], 16)) << 16 ) + ((int(msg[14:16], 16)) << 24 )), 4211081215)  * 100.0) # Unit = Watt-hour
    return data

# DCAC_AI5_T
def PGN_64429(msg, data):
    data['DC/ACAccessoryInverter5ControllerTemperature_spn9337'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['DC/ACAccessoryInverter5InverterElectronicFilterTemperature_spn9338'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['DC/ACAccessoryInverter5PowerElectronicsTemperature_spn9339'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['DC/ACAccessoryInverter5CoolantInTemperature_spn9340'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['DC/ACAccessoryInverter5CoolantOutTemperature_spn9341'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    return data

# DCAC_AI5_DCL
def PGN_64430(msg, data):
    data['DC/ACAccessoryInverter5DCSideVoltageMinimumLimitRequest_spn9357'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['DC/ACAccessoryInverter5DCSideCurrentMaximumLimitRequest_spn9358'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) # Unit = A
    data['DC/ACAccessoryInverter5DCSideVoltageMaximumLimitRequest_spn9553'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['DC/ACAccessoryInverter5DCSideCurrentMinimumLimitRequest_spn9554'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.05) - 3212.75 # Unit = A
    return data

# DCAC_AI5_ACL
def PGN_64431(msg, data):
    data['DC/ACAccessoryInverter5ACSideRMSVoltageMaximumLimitRequest_spn9359'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.03125) # Unit = V
    data['DC/ACAccessoryInverter5ACSideRMSCurrentMaximumLimitRequest_spn9360'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.03125) # Unit = A
    data['DC/ACAccessoryInverter5ACSideDefaultFrequencyRequest_spn9527'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) # Unit = Hz
    return data

# DCAC_AI5_CFG1
def PGN_64432(msg, data):
    data['DC/ACAccessoryInverter5DCSideVoltageMinimumLimitSetting_spn9361'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['DC/ACAccessoryInverter5DCSideCurrentMaximumLimitSetting_spn9362'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) # Unit = A
    data['DC/ACAccessoryInverter5ACSideRMSVoltageMaximumLimitSetting_spn9363'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.03125) # Unit = V
    data['DC/ACAccessoryInverter5ACSideRMSCurrentMaximumLimitSetting_spn9364'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.03125) # Unit = A
    data['DC/ACAccessoryInverter5DCSideVoltageMaximumLimitSetting_spn9555'] = ( enforceMaxV(( (int(msg[16:18], 16)) + ((int(msg[18:20], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['DC/ACAccessoryInverter5DCSideCurrentMinimumLimitSetting_spn9556'] = ( enforceMaxV(( (int(msg[20:22], 16)) + ((int(msg[22:24], 16)) << 8 )), 64255)  * 0.05) - 3212.75 # Unit = A
    data['DC/ACAccessoryInverter5ACSideDefaultFrequencyCommandSetting_spn9557'] = ( enforceMaxV(( (int(msg[24:26], 16))), 250)  * 1.0) # Unit = Hz
    return data

# DCAC_AI5_LD
def PGN_64433(msg, data):
    data['DC/ACAccessoryInverter5TotalDCInputCharge_spn9365'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 100.0) # Unit = Ah
    data['DC/ACAccessoryInverter5TotalDCInputEnergy_spn9366'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 ) + ((int(msg[12:14], 16)) << 16 ) + ((int(msg[14:16], 16)) << 24 )), 4211081215)  * 100.0) # Unit = Watt-hour
    return data

# WSPSCS
def PGN_64434(msg, data):
    data['WellStimulationPumpSuctionPressureCalibrationSetPoint_spn9193'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['WellStimulationPumpSuctionPressureCalibrationSetPointStatus_spn9194'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['WellStimulationPumpDischargePressureCalibrationSetPoint_spn9195'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['WellStimulationPumpDischargePressureCalibrationSetPointStatus_spn9196'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    return data

# WSPFV
def PGN_64435(msg, data):
    data['WellStimulationPumpTotalFluidPumped_spn9191'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 0.5) # Unit = l
    data['WellStimulationPumpTripFluidPumped_spn9192'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 ) + ((int(msg[12:14], 16)) << 16 ) + ((int(msg[14:16], 16)) << 24 )), 4211081215)  * 0.5) # Unit = l
    return data

# WSPH2
def PGN_64437(msg, data):
    data['WellStimulationPumpFluidEndTripHours_spn9187'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 1.0) # Unit = s
    data['WellStimulationPumpPowerEndTripHours_spn9188'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 ) + ((int(msg[12:14], 16)) << 16 ) + ((int(msg[14:16], 16)) << 24 )), 4211081215)  * 1.0) # Unit = s
    return data

# AT1OG4
def PGN_64438(msg, data):
    data['Aftertreatment1OutletOxygenPumpingCurrent_spn9178'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.001) - 32.127 # Unit = mA
    data['Aftertreatment1OutletNOxSensorProtectionAirPressure(Absolute)_spn12908'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    return data

# AT1IG4
def PGN_64439(msg, data):
    data['Aftertreatment1IntakeOxygenPumpingCurrent_spn9177'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.001) - 32.127 # Unit = mA
    data['Aftertreatment1IntakeNOxSensorProtectionAirPressure(Absolute)_spn12907'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    return data

# DCDC4LD
def PGN_64440(msg, data):
    data['DC/DC4TotalHighSideEnergy_spn9030'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 100.0) # Unit = Watt-hour
    data['DC/DC4TotalLowSideEnergy_spn9031'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 ) + ((int(msg[12:14], 16)) << 16 ) + ((int(msg[14:16], 16)) << 24 )), 4211081215)  * 100.0) # Unit = Watt-hour
    data['DC/DC4TotalHighSideCharge_spn9032'] = ( enforceMaxV(( (int(msg[16:18], 16)) + ((int(msg[18:20], 16)) << 8 ) + ((int(msg[20:22], 16)) << 16 ) + ((int(msg[22:24], 16)) << 24 )), 4211081215)  * 100.0) # Unit = Ah
    data['DC/DC4TotalLowSideCharge_spn9033'] = ( enforceMaxV(( (int(msg[24:26], 16)) + ((int(msg[26:28], 16)) << 8 ) + ((int(msg[28:30], 16)) << 16 ) + ((int(msg[30:32], 16)) << 24 )), 4211081215)  * 100.0) # Unit = Ah
    return data

# DCDC4CFG1
def PGN_64441(msg, data):
    data['DC/DC4HighSideVoltageMinimumLimitSetting_spn9034'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['DC/DC4HighSideVoltageMaximumLimitSetting_spn9035'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['DC/DC4HighSideCurrentMaximumLimitSetting_spn9036'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.05) # Unit = A
    data['DC/DC4LowSideVoltageMinimumLimitSetting_spn9037'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    data['DC/DC4LowSideVoltageMaximumLimitSetting_spn9038'] = ( enforceMaxV(( (int(msg[16:18], 16)) + ((int(msg[18:20], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    data['DC/DC4LowSideCurrentMaximumLimitSetting_spn9039'] = ( enforceMaxV(( (int(msg[20:22], 16)) + ((int(msg[22:24], 16)) << 8 )), 64255)  * 0.05) # Unit = A
    data['DC/DC4SLIBatteryTerminalVoltageMaximumLimitSetting_spn9040'] = ( enforceMaxV(( (int(msg[24:26], 16)) + ((int(msg[26:28], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    data['DC/DC4SLIBatteryTerminalChargeCurrentMaximumLimitSetting_spn9041'] = ( enforceMaxV(( (int(msg[28:30], 16)) + ((int(msg[30:32], 16)) << 8 )), 64255)  * 0.05) # Unit = A
    data['DC/DC4SLIBatteryTemperatureMaximumLimitSetting_spn9042'] = ( enforceMaxV(( (int(msg[32:34], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['DC/DC4LowSideVoltageBuckDefaultSetting_spn9522'] = ( enforceMaxV(( (int(msg[34:36], 16)) + ((int(msg[36:38], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    return data

# DCDC4SBL
def PGN_64442(msg, data):
    data['DC/DC4SLIBatteryTerminalVoltageMaximumLimitRequest_spn9043'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    data['DC/DC4SLIBatteryTerminalChargeCurrentMaximumLimitRequest_spn9044'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) # Unit = A
    data['DC/DC4SLIBatteryTemperatureMaximumLimitRequest_spn9045'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    return data

# DCDC4T
def PGN_64443(msg, data):
    data['DC/DC4ConverterTemperature_spn9046'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['DC/DC4ConverterElectronicFilterTemperature_spn9047'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['DC/DC4PowerElectronicsTemperature_spn9048'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['DC/DC4CoolantInTemperature_spn9049'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['DC/DC4CoolantOutTemperature_spn9050'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    return data

# DCDC4LL
def PGN_64444(msg, data):
    data['DC/DC4LowSideVoltageMinimumLimitRequest_spn9051'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    data['DC/DC4LowSideVoltageMaximumLimitRequest_spn9052'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    data['DC/DC4LowSideCurrentMaximumLimitRequest_spn9053'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.05) # Unit = A
    return data

# DCDC4HL
def PGN_64445(msg, data):
    data['DC/DC4HighSideVoltageMinimumLimitRequest_spn9054'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['DC/DC4HighSideVoltageMaximumLimitRequest_spn9055'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['DC/DC4HighSideCurrentMaximumLimitRequest_spn9056'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.05) # Unit = A
    return data

# DCDC3LD
def PGN_64446(msg, data):
    data['DC/DC3TotalHighSideEnergy_spn8975'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 100.0) # Unit = Watt-hour
    data['DC/DC3TotalLowSideEnergy_spn8976'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 ) + ((int(msg[12:14], 16)) << 16 ) + ((int(msg[14:16], 16)) << 24 )), 4211081215)  * 100.0) # Unit = Watt-hour
    data['DC/DC3TotalHighSideCharge_spn8977'] = ( enforceMaxV(( (int(msg[16:18], 16)) + ((int(msg[18:20], 16)) << 8 ) + ((int(msg[20:22], 16)) << 16 ) + ((int(msg[22:24], 16)) << 24 )), 4211081215)  * 100.0) # Unit = Ah
    data['DC/DC3TotalLowSideCharge_spn8978'] = ( enforceMaxV(( (int(msg[24:26], 16)) + ((int(msg[26:28], 16)) << 8 ) + ((int(msg[28:30], 16)) << 16 ) + ((int(msg[30:32], 16)) << 24 )), 4211081215)  * 100.0) # Unit = Ah
    return data

# DCDC3CFG1
def PGN_64447(msg, data):
    data['DC/DC3HighSideVoltageMinimumLimitSetting_spn8979'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['DC/DC3HighSideVoltageMaximumLimitSetting_spn8980'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['DC/DC3HighSideCurrentMaximumLimitSetting_spn8981'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.05) # Unit = A
    data['DC/DC3LowSideVoltageMinimumLimitSetting_spn8982'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    data['DC/DC3LowSideVoltageMaximumLimitSetting_spn8983'] = ( enforceMaxV(( (int(msg[16:18], 16)) + ((int(msg[18:20], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    data['DC/DC3LowSideCurrentMaximumLimitSetting_spn8984'] = ( enforceMaxV(( (int(msg[20:22], 16)) + ((int(msg[22:24], 16)) << 8 )), 64255)  * 0.05) # Unit = A
    data['DC/DC3SLIBatteryTerminalVoltageMaximumLimitSetting_spn8985'] = ( enforceMaxV(( (int(msg[24:26], 16)) + ((int(msg[26:28], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    data['DC/DC3SLIBatteryTerminalChargeCurrentMaximumLimitSetting_spn8986'] = ( enforceMaxV(( (int(msg[28:30], 16)) + ((int(msg[30:32], 16)) << 8 )), 64255)  * 0.05) # Unit = A
    data['DC/DC3SLIBatteryTemperatureMaximumLimitSetting_spn8987'] = ( enforceMaxV(( (int(msg[32:34], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['DC/DC3LowSideVoltageBuckDefaultSetting_spn9521'] = ( enforceMaxV(( (int(msg[34:36], 16)) + ((int(msg[36:38], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    return data

# DCDC3SBL
def PGN_64448(msg, data):
    data['DC/DC3SLIBatteryTerminalVoltageMaximumLimitRequest_spn8988'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    data['DC/DC3SLIBatteryTerminalChargeCurrentMaximumLimitRequest_spn8989'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) # Unit = A
    data['DC/DC3SLIBatteryTemperatureMaximumLimitRequest_spn8990'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    return data

# DCDC3T
def PGN_64449(msg, data):
    data['DC/DC3ConverterTemperature_spn8991'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['DC/DC3ConverterElectronicFilterTemperature_spn8992'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['DC/DC3PowerElectronicsTemperature_spn8993'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['DC/DC3CoolantInTemperature_spn8994'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['DC/DC3CoolantOutTemperature_spn8995'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    return data

# DCDC3LL
def PGN_64450(msg, data):
    data['DC/DC3LowSideVoltageMinimumLimitRequest_spn8996'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    data['DC/DC3LowSideVoltageMaximumLimitRequest_spn8997'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    data['DC/DC3LowSideCurrentMaximumLimitRequest_spn8998'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.05) # Unit = A
    return data

# DCDC3HL
def PGN_64451(msg, data):
    data['DC/DC3HighSideVoltageMinimumLimitRequest_spn8999'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['DC/DC3HighSideVoltageMaximumLimitRequest_spn9000'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['DC/DC3HighSideCurrentMaximumLimitRequest_spn9001'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.05) # Unit = A
    return data

# DCDC2LD
def PGN_64452(msg, data):
    data['DC/DC2TotalHighSideEnergy_spn8920'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 100.0) # Unit = Watt-hour
    data['DC/DC2TotalLowSideEnergy_spn8921'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 ) + ((int(msg[12:14], 16)) << 16 ) + ((int(msg[14:16], 16)) << 24 )), 4211081215)  * 100.0) # Unit = Watt-hour
    data['DC/DC2TotalHighSideCharge_spn8922'] = ( enforceMaxV(( (int(msg[16:18], 16)) + ((int(msg[18:20], 16)) << 8 ) + ((int(msg[20:22], 16)) << 16 ) + ((int(msg[22:24], 16)) << 24 )), 4211081215)  * 100.0) # Unit = Ah
    data['DC/DC2TotalLowSideCharge_spn8923'] = ( enforceMaxV(( (int(msg[24:26], 16)) + ((int(msg[26:28], 16)) << 8 ) + ((int(msg[28:30], 16)) << 16 ) + ((int(msg[30:32], 16)) << 24 )), 4211081215)  * 100.0) # Unit = Ah
    return data

# DCDC2CFG1
def PGN_64453(msg, data):
    data['DC/DC2HighSideVoltageMinimumLimitSetting_spn8924'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['DC/DC2HighSideVoltageMaximumLimitSetting_spn8925'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['DC/DC2HighSideCurrentMaximumLimitSetting_spn8926'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.05) # Unit = A
    data['DC/DC2LowSideVoltageMinimumLimitSetting_spn8927'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    data['DC/DC2LowSideVoltageMaximumLimitSetting_spn8928'] = ( enforceMaxV(( (int(msg[16:18], 16)) + ((int(msg[18:20], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    data['DC/DC2LowSideCurrentMaximumLimitSetting_spn8929'] = ( enforceMaxV(( (int(msg[20:22], 16)) + ((int(msg[22:24], 16)) << 8 )), 64255)  * 0.05) # Unit = A
    data['DC/DC2SLIBatteryTerminalVoltageMaximumLimitSetting_spn8930'] = ( enforceMaxV(( (int(msg[24:26], 16)) + ((int(msg[26:28], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    data['DC/DC2SLIBatteryTerminalChargeCurrentMaximumLimitSetting_spn8931'] = ( enforceMaxV(( (int(msg[28:30], 16)) + ((int(msg[30:32], 16)) << 8 )), 64255)  * 0.05) # Unit = A
    data['DC/DC2SLIBatteryTemperatureMaximumLimitSetting_spn8932'] = ( enforceMaxV(( (int(msg[32:34], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['DC/DC2LowSideVoltageBuckDefaultSetting_spn9520'] = ( enforceMaxV(( (int(msg[34:36], 16)) + ((int(msg[36:38], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    return data

# DCDC2SBL
def PGN_64454(msg, data):
    data['DC/DC2SLIBatteryTerminalVoltageMaximumLimitRequest_spn8933'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    data['DC/DC2SLIBatteryTerminalChargeCurrentMaximumLimitRequest_spn8934'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) # Unit = A
    data['DC/DC2SLIBatteryTemperatureMaximumLimitRequest_spn8935'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    return data

# DCDC2T
def PGN_64455(msg, data):
    data['DC/DC2ConverterTemperature_spn8936'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['DC/DC2ConverterElectronicFilterTemperature_spn8937'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['DC/DC2PowerElectronicsTemperature_spn8938'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['DC/DC2CoolantInTemperature_spn8939'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['DC/DC2CoolantOutTemperature_spn8940'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    return data

# DCDC2LL
def PGN_64456(msg, data):
    data['DC/DC2LowSideVoltageMinimumLimitRequest_spn8941'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    data['DC/DC2LowSideVoltageMaximumLimitRequest_spn8942'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    data['DC/DC2LowSideCurrentMaximumLimitRequest_spn8943'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.05) # Unit = A
    return data

# DCDC2HL
def PGN_64457(msg, data):
    data['DC/DC2HighSideVoltageMinimumLimitRequest_spn8944'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['DC/DC2HighSideVoltageMaximumLimitRequest_spn8945'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['DC/DC2HighSideCurrentMaximumLimitRequest_spn8946'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.05) # Unit = A
    return data

# EEPCSI
def PGN_64459(msg, data):
    data['ExhaustParticulateControlSystemDiagnosticTime_spn8887'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 1.0) # Unit = s
    data['ExhaustParticulateControlSystemDiagnosticCount_spn8888'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 ) + ((int(msg[12:14], 16)) << 16 ) + ((int(msg[14:16], 16)) << 24 )), 4211081215)  * 1.0) # Unit = count
    return data

# WSPH
def PGN_64460(msg, data):
    data['WellStimulationPumpMaintenanceIntervalHours_spn8882'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 1.0) # Unit = s
    data['WellStimulationPumpValveOperationHours_spn8883'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 ) + ((int(msg[12:14], 16)) << 16 ) + ((int(msg[14:16], 16)) << 24 )), 4211081215)  * 1.0) # Unit = s
    data['WellStimulationPumpPackingOperationHours_spn8884'] = ( enforceMaxV(( (int(msg[16:18], 16)) + ((int(msg[18:20], 16)) << 8 ) + ((int(msg[20:22], 16)) << 16 ) + ((int(msg[22:24], 16)) << 24 )), 4211081215)  * 1.0) # Unit = s
    data['WellStimulationPumpValveSeatOperationHours_spn8885'] = ( enforceMaxV(( (int(msg[24:26], 16)) + ((int(msg[26:28], 16)) << 8 ) + ((int(msg[28:30], 16)) << 16 ) + ((int(msg[30:32], 16)) << 24 )), 4211081215)  * 1.0) # Unit = s
    return data

# WSPT2
def PGN_64461(msg, data):
    data['WellStimulationPumpGearBoxOilPressureLowThresholdSetting_spn8871'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    data['WellStimulationPumpGearBoxOilPressureHighThresholdSetting_spn8872'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    data['WellStimulationPumpGearBoxOilTemperatureLowThresholdSetting_spn8873'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['WellStimulationPumpGearBoxOilTemperatureHighThresholdSetting_spn8874'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['WellStimulationPumpSuctionPressureLowThresholdSetting_spn8875'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.1) - 3212.7 # Unit = kPa
    data['WellStimulationPumpSuctionPressureHighThresholdSetting_spn8876'] = ( enforceMaxV(( (int(msg[16:18], 16)) + ((int(msg[18:20], 16)) << 8 )), 64255)  * 0.1) - 3212.7 # Unit = kPa
    data['WellStimulationPumpDischargePressureHighThresholdSetting_spn8877'] = ( enforceMaxV(( (int(msg[20:22], 16)) + ((int(msg[22:24], 16)) << 8 )), 64255)  * 5.0) # Unit = kPa
    data['WellStimulationPumpCrankshaftSpeedLowThresholdSetting_spn8878'] = ( enforceMaxV(( (int(msg[24:26], 16)) + ((int(msg[26:28], 16)) << 8 )), 64255)  * 0.125) # Unit = rpm
    data['WellStimulationPumpCrankshaftSpeedHighThresholdSetting_spn8879'] = ( enforceMaxV(( (int(msg[28:30], 16)) + ((int(msg[30:32], 16)) << 8 )), 64255)  * 0.125) # Unit = rpm
    data['WellStimulationPumpRodLoadHighThresholdSetting_spn8880'] = ( enforceMaxV(( (int(msg[32:34], 16)) + ((int(msg[34:36], 16)) << 8 )), 64255)  * 5.0) # Unit = kN
    data['WellStimulationPumpPlungerFiringOrderSetting_spn8881'] = ( enforceMaxV(( (int(msg[36:38], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    return data

# DCDC1LD
def PGN_64463(msg, data):
    data['DC/DC1TotalHighSideEnergy_spn8833'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 100.0) # Unit = Watt-hour
    data['DC/DC1TotalLowSideEnergy_spn8834'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 ) + ((int(msg[12:14], 16)) << 16 ) + ((int(msg[14:16], 16)) << 24 )), 4211081215)  * 100.0) # Unit = Watt-hour
    data['DC/DC1TotalHighSideCharge_spn8835'] = ( enforceMaxV(( (int(msg[16:18], 16)) + ((int(msg[18:20], 16)) << 8 ) + ((int(msg[20:22], 16)) << 16 ) + ((int(msg[22:24], 16)) << 24 )), 4211081215)  * 100.0) # Unit = Ah
    data['DC/DC1TotalLowSideCharge_spn8836'] = ( enforceMaxV(( (int(msg[24:26], 16)) + ((int(msg[26:28], 16)) << 8 ) + ((int(msg[28:30], 16)) << 16 ) + ((int(msg[30:32], 16)) << 24 )), 4211081215)  * 100.0) # Unit = Ah
    return data

# DCDC1CFG1
def PGN_64464(msg, data):
    data['DC/DC1HighSideVoltageMinimumLimitSetting_spn8824'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['DC/DC1HighSideVoltageMaximumLimitSetting_spn8825'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['DC/DC1HighSideCurrentMaximumLimitSetting_spn8826'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.05) # Unit = A
    data['DC/DC1LowSideVoltageMinimumLimitSetting_spn8827'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    data['DC/DC1LowSideVoltageMaximumLimitSetting_spn8828'] = ( enforceMaxV(( (int(msg[16:18], 16)) + ((int(msg[18:20], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    data['DC/DC1LowSideCurrentMaximumLimitSetting_spn8829'] = ( enforceMaxV(( (int(msg[20:22], 16)) + ((int(msg[22:24], 16)) << 8 )), 64255)  * 0.05) # Unit = A
    data['DC/DC1SLIBatteryTerminalVoltageMaximumLimitSetting_spn8830'] = ( enforceMaxV(( (int(msg[24:26], 16)) + ((int(msg[26:28], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    data['DC/DC1SLIBatteryTerminalChargeCurrentMaximumLimitSetting_spn8831'] = ( enforceMaxV(( (int(msg[28:30], 16)) + ((int(msg[30:32], 16)) << 8 )), 64255)  * 0.05) # Unit = A
    data['DC/DC1SLIBatteryTemperatureMaximumLimitSetting_spn8832'] = ( enforceMaxV(( (int(msg[32:34], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['DC/DC1LowSideVoltageBuckDefaultSetting_spn9519'] = ( enforceMaxV(( (int(msg[34:36], 16)) + ((int(msg[36:38], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    return data

# DCDC1SBL
def PGN_64465(msg, data):
    data['DC/DC1SLIBatteryTerminalVoltageMaximumLimitRequest_spn8817'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    data['DC/DC1SLIBatteryTerminalChargeCurrentMaximumLimitRequest_spn8818'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) # Unit = A
    data['DC/DC1SLIBatteryTemperatureMaximumLimitRequest_spn8819'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    return data

# POM
def PGN_64466(msg, data):
    data['WellStimulationPumpOilViscosity_spn8660'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.015625) # Unit = cP
    data['WellStimulationPumpOilDensity_spn8661'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64253)  * 3.052e-05) # Unit = g/cc
    data['WellStimulationPumpOilRelativeDielectricity_spn8662'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64295)  * 0.000122) # Unit = 
    data['WellStimulationPumpOilTemperature_spn8663'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    return data

# WSPC
def PGN_64468(msg, data):
    data['WellStimulationPumpPlungerDiameter_spn8652'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 1.0) # Unit = mm
    data['WellStimulationPumpStrokeLength_spn8653'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 1.0) # Unit = mm
    data['WellStimulationPumpGearRatio_spn8654'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.001) # Unit = Ratio
    data['WellStimulationPumpRatedSpeed_spn8655'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.125) # Unit = rpm
    return data

# ACOCF2
def PGN_64469(msg, data):
    data['AlternatorBearingHeaderIntakePressure_spn8635'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 2.0) # Unit = kPa
    data['AlternatorOilCoolerDischargePumpPressure_spn8636'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 2.0) # Unit = kPa
    data['EngineOilCoolerDischargePumpPressure_spn8637'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 2.0) # Unit = kPa
    data['EngineOilCoolerIntakeTemperature_spn8638'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    return data

# EEC21
def PGN_64470(msg, data):
    data['EngineExhaustManifoldAbsolutePressure1_spn8619'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    data['EngineExhaustManifoldAbsolutePressure2_spn8620'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    return data

# DCDC1T
def PGN_64472(msg, data):
    data['DC/DC1ConverterTemperature_spn8592'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['DC/DC1ConverterElectronicFilterTemperature_spn8593'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['DC/DC1PowerElectronicsTemperature_spn8594'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['DC/DC1CoolantInTemperature_spn8822'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['DC/DC1CoolantOutTemperature_spn8823'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    return data

# DCDC1LL
def PGN_64473(msg, data):
    data['DC/DC1LowSideVoltageMinimumLimitRequest_spn8566'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    data['DC/DC1LowSideVoltageMaximumLimitRequest_spn8567'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.01) # Unit = V
    data['DC/DC1LowSideCurrentMaximumLimitRequest_spn8568'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.05) # Unit = A
    return data

# DCDC1HL
def PGN_64474(msg, data):
    data['DC/DC1HighSideVoltageMinimumLimitRequest_spn8563'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['DC/DC1HighSideVoltageMaximumLimitRequest_spn8564'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['DC/DC1HighSideCurrentMaximumLimitRequest_spn8565'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.05) # Unit = A
    return data

# DC4
def PGN_64476(msg, data):
    data['LockStatusofDoor21_spn8525'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['OpenStatusofDoor21_spn8526'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['EnableStatusofDoor21_spn8527'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['LockStatusofDoor22_spn8528'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['OpenStatusofDoor22_spn8529'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EnableStatusofDoor22_spn8530'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['LockStatusofDoor23_spn8531'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['OpenStatusofDoor23_spn8532'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['EnableStatusofDoor23_spn8533'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['LockStatusofDoor24_spn8534'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['OpenStatusofDoor24_spn8535'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['EnableStatusofDoor24_spn8536'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['LockStatusofDoor25_spn8537'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['OpenStatusofDoor25_spn8538'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['EnableStatusofDoor25_spn8539'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['LockStatusofDoor26_spn8540'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['OpenStatusofDoor26_spn8541'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EnableStatusofDoor26_spn8542'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['LockStatusofDoor27_spn8543'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['OpenStatusofDoor27_spn8544'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['EnableStatusofDoor27_spn8545'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['LockStatusofDoor28_spn8546'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['OpenStatusofDoor28_spn8547'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['EnableStatusofDoor28_spn8548'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['LockStatusofDoor29_spn8549'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['OpenStatusofDoor29_spn8550'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['EnableStatusofDoor29_spn8551'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['LockStatusofDoor30_spn8552'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['OpenStatusofDoor30_spn8553'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EnableStatusofDoor30_spn8554'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    return data

# DC3
def PGN_64477(msg, data):
    data['LockStatusofDoor11_spn8495'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['OpenStatusofDoor11_spn8496'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['EnableStatusofDoor11_spn8497'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['LockStatusofDoor12_spn8498'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['OpenStatusofDoor12_spn8499'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EnableStatusofDoor12_spn8500'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['LockStatusofDoor13_spn8501'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['OpenStatusofDoor13_spn8502'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['EnableStatusofDoor13_spn8503'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['LockStatusofDoor14_spn8504'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['OpenStatusofDoor14_spn8505'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['EnableStatusofDoor14_spn8506'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['LockStatusofDoor15_spn8507'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['OpenStatusofDoor15_spn8508'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['EnableStatusofDoor15_spn8509'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['LockStatusofDoor16_spn8510'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['OpenStatusofDoor16_spn8511'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EnableStatusofDoor16_spn8512'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['LockStatusofDoor17_spn8513'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['OpenStatusofDoor17_spn8514'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['EnableStatusofDoor17_spn8515'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['LockStatusofDoor18_spn8516'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['OpenStatusofDoor18_spn8517'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['EnableStatusofDoor18_spn8518'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['LockStatusofDoor19_spn8519'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['OpenStatusofDoor19_spn8520'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['EnableStatusofDoor19_spn8521'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['LockStatusofDoor20_spn8522'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['OpenStatusofDoor20_spn8523'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EnableStatusofDoor20_spn8524'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    return data

# ET6
def PGN_64478(msg, data):
    data['EngineChargeAirCoolerIntakeCoolantTemperature_spn8487'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineChargeAirCoolerOutletCoolantTemperature_spn8488'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineIntakeCoolantTemperature_spn8489'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineIntakeManifoldAirtoSecondaryCoolantCircuitCoolantDifferentialTemperature_spn12306'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    return data

# IC3
def PGN_64479(msg, data):
    data['EngineMixer1IntakePressure_spn8477'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    data['EngineMixer2IntakePressure_spn8607'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    data['EngineIntakeManifold2AbsolutePressure(HighResolution)_spn11731'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    data['DesiredEngineIntakeManifoldPressureHighLimit_spn12307'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    return data

# ACOCF1
def PGN_64480(msg, data):
    data['AlternatorOilCoolerOilIntakeTemperature_spn8466'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['AlternatorOilCoolerOilOutletTemperature_spn8467'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['AlternatorOilCoolerCoolantIntakeTemperature_spn8468'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['AlternatorOilCoolerCoolantOutletTemperature_spn8469'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['EngineOilCoolerCoolantOutletTemperature_spn728'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['AlternatorAftercoolerCoolantPumpOutletTemperature_spn8470'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['AlternatorAftercoolerCoolantOutletTemperature_spn8471'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['AlternatorAftercoolerCoolantPumpOutletPressure_spn8472'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 2.0) # Unit = kPa
    return data

# DT2
def PGN_64481(msg, data):
    data['PowerRectifierDiode9Temperature_spn8459'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['PowerRectifierDiode10Temperature_spn8460'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['PowerRectifierDiode11Temperature_spn8461'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['PowerRectifierDiode12Temperature_spn8462'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    return data

# DT1
def PGN_64482(msg, data):
    data['PowerRectifierDiode1Temperature_spn8451'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['PowerRectifierDiode2Temperature_spn8452'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['PowerRectifierDiode3Temperature_spn8453'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['PowerRectifierDiode4Temperature_spn8454'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['PowerRectifierDiode5Temperature_spn8455'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['PowerRectifierDiode6Temperature_spn8456'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['PowerRectifierDiode7Temperature_spn8457'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['PowerRectifierDiode8Temperature_spn8458'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    return data

# AT2
def PGN_64483(msg, data):
    data['EngineAlternatorWinding7Temperature_spn8443'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['EngineAlternatorWinding8Temperature_spn8444'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['EngineAlternatorWinding9Temperature_spn8445'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['EngineAlternatorWinding10Temperature_spn8446'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['EngineAlternatorWinding11Temperature_spn8447'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['EngineAlternatorWinding12Temperature_spn8448'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['AlternatorAirCoolerAirIntakeTemperature_spn8449'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['AlternatorAirCoolerAirOutletTemperature_spn8450'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    return data

# GFI7
def PGN_64484(msg, data):
    data['DriverSideFuelReceptacle1CoverStatus_spn8415'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['DriverSideFuelReceptacle2CoverStatus_spn8416'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['PassengerSideFuelReceptacle1CoverStatus_spn8417'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['PassengerSideFuelReceptacle2CoverStatus_spn8418'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['FrontFuelReceptacleCoverStatus_spn8419'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['FuelStorageCompartment1Temperature1_spn8420'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['FuelStorageCompartment1Temperature2_spn8421'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['FuelStorageCompartment2Temperature1_spn8422'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['FuelStorageCompartment2Temperature2_spn8423'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['FuelStorageCompartment3Temperature1_spn8424'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['FuelStorageCompartment3Temperature2_spn8425'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    return data

# HVESSFS
def PGN_64485(msg, data):
    data['HVESSFanEnableStatus_spn8403'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESSFanStatusReasonCode_spn8404'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00111100) >> 2)), 15)  * 1.0) # Unit = bit
    data['HVESSFanCommandStatus_spn8405'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['HVESSFanSpeed_spn8406'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 )), 64255)  * 0.5) # Unit = rpm
    data['HVESSFanMediumTemperature_spn8407'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['HVESSFanPower_spn8408'] = ( enforceMaxV(( (int(msg[10:12], 16)) + ((int(msg[12:14], 16)) << 8 )), 64255)  * 0.5) # Unit = W
    data['HVESSFanServiceIndicator_spn8409'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESSFanOperatingStatus_spn8410'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESSFanInstance_spn8411'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    return data

# HVESSFC
def PGN_64486(msg, data):
    data['HVESSFanEnableCommand_spn8384'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HVESSFanPowerHold_spn8385'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HVESSFanSpeedCommand_spn8386'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 )), 64255)  * 0.5) # Unit = rpm
    data['HVESSFanPercentSpeedCommand_spn8387'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 0.4) # Unit = %
    data['HVESSFanInstance1_spn8388'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000001)), 1)  * 1.0) # Unit = bit
    data['HVESSFanInstance2_spn8389'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00000010) >> 1)), 1)  * 1.0) # Unit = bit
    data['HVESSFanInstance3_spn8390'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00000100) >> 2)), 1)  * 1.0) # Unit = bit
    data['HVESSFanInstance4_spn8391'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00001000) >> 3)), 1)  * 1.0) # Unit = bit
    data['HVESSFanInstance5_spn8392'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00010000) >> 4)), 1)  * 1.0) # Unit = bit
    data['HVESSFanInstance6_spn8393'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00100000) >> 5)), 1)  * 1.0) # Unit = bit
    data['HVESSFanInstance7_spn8394'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b01000000) >> 6)), 1)  * 1.0) # Unit = bit
    data['HVESSFanInstance8_spn8395'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b10000000) >> 7)), 1)  * 1.0) # Unit = bit
    data['HVESSFanInstance9_spn8396'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00000001)), 1)  * 1.0) # Unit = bit
    data['HVESSFanInstance10_spn8397'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00000010) >> 1)), 1)  * 1.0) # Unit = bit
    data['HVESSFanInstance11_spn8398'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00000100) >> 2)), 1)  * 1.0) # Unit = bit
    data['HVESSFanInstance12_spn8399'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00001000) >> 3)), 1)  * 1.0) # Unit = bit
    data['HVESSFanInstance13_spn8400'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00010000) >> 4)), 1)  * 1.0) # Unit = bit
    data['HVESSFanInstance14_spn8401'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00100000) >> 5)), 1)  * 1.0) # Unit = bit
    data['HVESSFanInstance15_spn8402'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b01000000) >> 6)), 1)  * 1.0) # Unit = bit
    return data

# SCROII5
def PGN_64487(msg, data):
    data['Aftertreatment1SCRIntakeHighTemperatureTime_spn8327'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 1.0) # Unit = s
    data['SCROperatorInducementEmergencyOverrideTotalActivationTime_spn9179'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 ) + ((int(msg[12:14], 16)) << 16 ) + ((int(msg[14:16], 16)) << 24 )), 4211081215)  * 1.0) # Unit = s
    return data

# ASI2
def PGN_64488(msg, data):
    data['AftertreatmentTotalDieselExhaustFluidUsed_spn8326'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 0.5) # Unit = l
    data['AftertreatmentDieselExhaustFluidUsedThisOperatingCycle_spn12748'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.1) # Unit = l
    data['DEFDosingMode_spn12749'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 1.0) # Unit = count
    data['HCDoserDutyCycle_spn12743'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 0.4) # Unit = %
    return data

# ODMCF1_2
def PGN_64491(msg, data):
    data['OilDebrisMonitorFerrousBins1and2IdentificationNumber_spn8167'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) # Unit = count
    data['OilDebrisMonitorFerrousBin1Count_spn8168'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 ) + ((int(msg[6:8], 16)) << 16 )), 16449535)  * 1.0) # Unit = count
    data['OilDebrisMonitorFerrousBin2Count_spn8169'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 ) + ((int(msg[12:14], 16)) << 16 )), 16449535)  * 1.0) # Unit = count
    return data

# ODMCF3_4
def PGN_64492(msg, data):
    data['OilDebrisMonitorFerrousBins3and4IdentificationNumber_spn8170'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) # Unit = count
    data['OilDebrisMonitorFerrousBin3Count_spn8171'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 ) + ((int(msg[6:8], 16)) << 16 )), 16449535)  * 1.0) # Unit = count
    data['OilDebrisMonitorFerrousBin4Count_spn8172'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 ) + ((int(msg[12:14], 16)) << 16 )), 16449535)  * 1.0) # Unit = count
    return data

# ODMCF5_6
def PGN_64493(msg, data):
    data['OilDebrisMonitorFerrousBins5and6IdentificationNumber_spn8173'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) # Unit = count
    data['OilDebrisMonitorFerrousBin5Count_spn8174'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 ) + ((int(msg[6:8], 16)) << 16 )), 16449535)  * 1.0) # Unit = count
    data['OilDebrisMonitorFerrousBin6Count_spn8175'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 ) + ((int(msg[12:14], 16)) << 16 )), 16449535)  * 1.0) # Unit = count
    return data

# ODMCNF1_2
def PGN_64494(msg, data):
    data['OilDebrisMonitorNon-FerrousBins1and2IdentificationNumber_spn8176'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) # Unit = count
    data['OilDebrisMonitorNon-FerrousBin1Count_spn8177'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 ) + ((int(msg[6:8], 16)) << 16 )), 16449535)  * 1.0) # Unit = count
    data['OilDebrisMonitorNon-FerrousBin2Count_spn8178'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 ) + ((int(msg[12:14], 16)) << 16 )), 16449535)  * 1.0) # Unit = count
    return data

# ODMCNF3_4
def PGN_64495(msg, data):
    data['OilDebrisMonitorNon-FerrousBins3and4IdentificationNumber_spn8179'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) # Unit = count
    data['OilDebrisMonitorNon-FerrousBin3Count_spn8180'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 ) + ((int(msg[6:8], 16)) << 16 )), 16449535)  * 1.0) # Unit = count
    data['OilDebrisMonitorNon-FerrousBin4Count_spn8181'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 ) + ((int(msg[12:14], 16)) << 16 )), 16449535)  * 1.0) # Unit = count
    return data

# ODMCNF5_6
def PGN_64496(msg, data):
    data['OilDebrisMonitorNon-FerrousBins5and6IdentificationNumber_spn8182'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) # Unit = count
    data['OilDebrisMonitorNon-FerrousBin5Count_spn8183'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 ) + ((int(msg[6:8], 16)) << 16 )), 16449535)  * 1.0) # Unit = count
    data['OilDebrisMonitorNon-FerrousBin6Count_spn8184'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 ) + ((int(msg[12:14], 16)) << 16 )), 16449535)  * 1.0) # Unit = count
    return data

# ODMSS
def PGN_64497(msg, data):
    data['OilDebrisMonitorStatusIdentificationNumber_spn8185'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) # Unit = count
    data['OilDebrisMonitorTotalnumberofSensors_spn8186'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) # Unit = count
    data['OilDebrisMonitorEnvironmentStatus_spn8187'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['OilDebrisMonitorSensingElementStatus_spn8188'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['OilDebrisMonitorSignalProcessingElectronicsStatus_spn8189'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['OilDebrisMonitorElectronicsTemperatureStatus_spn8190'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# CCVS5
def PGN_64499(msg, data):
    data['DirectionalVehicleSpeed_spn8166'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64259)  * 0.007812) - 250.0 # Unit = km/h
    return data

# A2DOC2
def PGN_64500(msg, data):
    data['Aftertreatment2DieselOxidationCatalystIntakePressure_spn8163'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    data['Aftertreatment2DieselOxidationCatalystOutletPressure_spn8164'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    data['Aftertreatment2DOCIntaketoDPFOutletDeltaPressure_spn8165'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    return data

# A1DOC2
def PGN_64501(msg, data):
    data['Aftertreatment1DieselOxidationCatalystIntakePressure_spn8160'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    data['Aftertreatment1DieselOxidationCatalystOutletPressure_spn8161'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    data['Aftertreatment1DOCIntaketoDPFOutletDeltaPressure_spn8162'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    return data

# VP2
def PGN_64502(msg, data):
    data['TotalNumberofSatellitesinView_spn8128'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) # Unit = count
    data['HorizontalDilutionofPrecision_spn8129'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 0.1) # Unit = Ratio
    data['VerticalDilutionofPrecision_spn8130'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 0.1) # Unit = Ratio
    data['PositionDilutionofPrecision_spn8131'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 0.1) # Unit = Ratio
    data['TimeDilutionofPrecision_spn8132'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.1) # Unit = Ratio
    return data

# EAPMCF3S
def PGN_64503(msg, data):
    data['PropulsionMotorCoolantFan3EnableStatus_spn8067'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['PropulsionMotorCoolantFan3ControllerStatusReasonCode_spn8068'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00111100) >> 2)), 15)  * 1.0) # Unit = bit
    data['PropulsionMotorCoolantFan3ControllerCommandStatus_spn8069'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['PropulsionMotorCoolantFan3MotorSpeed_spn8070'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 )), 64255)  * 0.5) # Unit = rpm
    data['PropulsionMotorCoolantFan3ControlTemperature_spn8071'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['PropulsionMotorCoolantFan3Power_spn8072'] = ( enforceMaxV(( (int(msg[10:12], 16)) + ((int(msg[12:14], 16)) << 8 )), 64255)  * 0.5) # Unit = W
    data['PropulsionMotorCoolantFan3ServiceIndicator_spn8073'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['PropulsionMotorCoolantFan3OperatingStatus_spn8074'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    return data

# EAPMCF2S
def PGN_64504(msg, data):
    data['PropulsionMotorCoolantFan2EnableStatus_spn8055'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['PropulsionMotorCoolantFan2ControllerStatusReasonCode_spn8056'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00111100) >> 2)), 15)  * 1.0) # Unit = bit
    data['PropulsionMotorCoolantFan2ControllerCommandStatus_spn8057'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['PropulsionMotorCoolantFan2MotorSpeed_spn8058'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 )), 64255)  * 0.5) # Unit = rpm
    data['PropulsionMotorCoolantFan2ControlTemperature_spn8059'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['PropulsionMotorCoolantFan2Power_spn8060'] = ( enforceMaxV(( (int(msg[10:12], 16)) + ((int(msg[12:14], 16)) << 8 )), 64255)  * 0.5) # Unit = W
    data['PropulsionMotorCoolantFan2ServiceIndicator_spn8061'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['PropulsionMotorCoolantFan2OperatingStatus_spn8062'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    return data

# EAPMCF1S
def PGN_64505(msg, data):
    data['PropulsionMotorCoolantFan1EnableStatus_spn8043'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['PropulsionMotorCoolantFan1ControllerStatusReasonCode_spn8044'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00111100) >> 2)), 15)  * 1.0) # Unit = bit
    data['PropulsionMotorCoolantFan1ControllerCommandStatus_spn8045'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['PropulsionMotorCoolantFan1MotorSpeed_spn8046'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 )), 64255)  * 0.5) # Unit = rpm
    data['PropulsionMotorCoolantFan1ControlTemperature_spn8047'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['PropulsionMotorCoolantFan1Power_spn8048'] = ( enforceMaxV(( (int(msg[10:12], 16)) + ((int(msg[12:14], 16)) << 8 )), 64255)  * 0.5) # Unit = W
    data['PropulsionMotorCoolantFan1ServiceIndicator_spn8049'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['PropulsionMotorCoolantFan1OperatingStatus_spn8050'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    return data

# EAPECF3S
def PGN_64506(msg, data):
    data['PowerElectronicsCoolantFan3EnableStatus_spn8031'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['PowerElectronicsCoolantFan3ControllerStatusReasonCode_spn8032'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00111100) >> 2)), 15)  * 1.0) # Unit = bit
    data['PowerElectronicsCoolantFan3ControllerCommandStatus_spn8033'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['PowerElectronicsCoolantFan3MotorSpeed_spn8034'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 )), 64255)  * 0.5) # Unit = rpm
    data['PowerElectronicsCoolantFan3ControlTemperature_spn8035'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['PowerElectronicsCoolantFan3Power_spn8036'] = ( enforceMaxV(( (int(msg[10:12], 16)) + ((int(msg[12:14], 16)) << 8 )), 64255)  * 0.5) # Unit = W
    data['PowerElectronicsCoolantFan3ServiceIndicator_spn8037'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['PowerElectronicsCoolantFan3OperatingStatus_spn8038'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    return data

# EAPECF2S
def PGN_64507(msg, data):
    data['PowerElectronicsCoolantFan2EnableStatus_spn8019'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['PowerElectronicsCoolantFan2ControllerStatusReasonCode_spn8020'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00111100) >> 2)), 15)  * 1.0) # Unit = bit
    data['PowerElectronicsCoolantFan2ControllerCommandStatus_spn8021'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['PowerElectronicsCoolantFan2MotorSpeed_spn8022'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 )), 64255)  * 0.5) # Unit = rpm
    data['PowerElectronicsCoolantFan2ControlTemperature_spn8023'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['PowerElectronicsCoolantFan2Power_spn8024'] = ( enforceMaxV(( (int(msg[10:12], 16)) + ((int(msg[12:14], 16)) << 8 )), 64255)  * 0.5) # Unit = W
    data['PowerElectronicsCoolantFan2ServiceIndicator_spn8025'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['PowerElectronicsCoolantFan2OperatingStatus_spn8026'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    return data

# EAPECF1S
def PGN_64508(msg, data):
    data['PowerElectronicsCoolantFan1EnableStatus_spn8007'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['PowerElectronicsCoolantFan1ControllerStatusReasonCode_spn8008'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00111100) >> 2)), 15)  * 1.0) # Unit = bit
    data['PowerElectronicsCoolantFan1ControllerCommandStatus_spn8009'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['PowerElectronicsCoolantFan1MotorSpeed_spn8010'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 )), 64255)  * 0.5) # Unit = rpm
    data['PowerElectronicsCoolantFan1ControlTemperature_spn8011'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['PowerElectronicsCoolantFan1Power_spn8012'] = ( enforceMaxV(( (int(msg[10:12], 16)) + ((int(msg[12:14], 16)) << 8 )), 64255)  * 0.5) # Unit = W
    data['PowerElectronicsCoolantFan1ServiceIndicator_spn8013'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['PowerElectronicsCoolantFan1OperatingStatus_spn8014'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    return data

# EAPMOPS
def PGN_64509(msg, data):
    data['PropulsionMotorOilPumpEnableStatus_spn7995'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['PropulsionMotorOilPumpControllerStatusReasonCode_spn7996'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00111100) >> 2)), 15)  * 1.0) # Unit = bit
    data['PropulsionMotorOilPumpControllerCommandStatus_spn7997'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['PropulsionMotorOilPumpMotorSpeed_spn7998'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 )), 64255)  * 0.5) # Unit = rpm
    data['PropulsionMotorOilPumpControlTemperature_spn7999'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['PropulsionMotorOilPumpPower_spn8000'] = ( enforceMaxV(( (int(msg[10:12], 16)) + ((int(msg[12:14], 16)) << 8 )), 64255)  * 0.5) # Unit = W
    data['PropulsionMotorOilPumpServiceIndicator_spn8001'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['PropulsionMotorOilPumpOperatingStatus_spn8002'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    return data

# EAPMCPS
def PGN_64510(msg, data):
    data['PropulsionMotorCoolantPumpEnableStatus_spn7983'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['PropulsionMotorCoolantPumpControllerStatusReasonCode_spn7984'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00111100) >> 2)), 15)  * 1.0) # Unit = bit
    data['PropulsionMotorCoolantPumpControllerCommandStatus_spn7985'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['PropulsionMotorCoolantPumpMotorSpeed_spn7986'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 )), 64255)  * 0.5) # Unit = rpm
    data['PropulsionMotorCoolantPumpControlTemperature_spn7987'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['PropulsionMotorCoolantPumpPower_spn7988'] = ( enforceMaxV(( (int(msg[10:12], 16)) + ((int(msg[12:14], 16)) << 8 )), 64255)  * 0.5) # Unit = W
    data['PropulsionMotorCoolantPumpServiceIndicator_spn7989'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['PropulsionMotorCoolantPumpOperatingStatus_spn7990'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    return data

# EAPECPS
def PGN_64511(msg, data):
    data['PowerElectronicsCoolantPumpEnableStatus_spn7971'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['PowerElectronicsCoolantPumpControllerStatusReasonCode_spn7972'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00111100) >> 2)), 15)  * 1.0) # Unit = bit
    data['PowerElectronicsCoolantPumpControllerCommandStatus_spn7973'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['PowerElectronicsCoolantPumpMotorSpeed_spn7974'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 )), 64255)  * 0.5) # Unit = rpm
    data['PowerElectronicsCoolantPumpControlTemperature_spn7975'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['PowerElectronicsCoolantPumpPower_spn7976'] = ( enforceMaxV(( (int(msg[10:12], 16)) + ((int(msg[12:14], 16)) << 8 )), 64255)  * 0.5) # Unit = W
    data['PowerElectronicsCoolantPumpServiceIndicator_spn7977'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['PowerElectronicsCoolantPumpOperatingStatus_spn7978'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    return data

# EAMS
def PGN_64513(msg, data):
    data['ElectrifiedAccessoryMotorEnableStatus_spn7947'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['ElectrifiedAccessoryMotorControllerStatusReasonCode_spn7948'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00111100) >> 2)), 15)  * 1.0) # Unit = bit
    data['ElectrifiedAccessoryMotorControllerCommandStatus_spn7949'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['ElectrifiedAccessoryMotorSpeed_spn7950'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 )), 64255)  * 0.5) # Unit = rpm
    data['ElectrifiedAccessoryMotorMediumTemperature_spn7951'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['ElectrifiedAccessoryMotorPower_spn7952'] = ( enforceMaxV(( (int(msg[10:12], 16)) + ((int(msg[12:14], 16)) << 8 )), 64255)  * 0.5) # Unit = W
    data['ElectrifiedAccessoryMotorServiceIndicator_spn7953'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['ElectrifiedAccessoryMotorOperatingStatus_spn7954'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['ElectrifiedAccessoryMotorInstance_spn8308'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    return data

# SCRSI
def PGN_64514(msg, data):
    data['DieselExhaustFluidFrozenTime_spn7938'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 1.0) # Unit = s
    data['Aftertreatment1SystemHydrocarbon_spn7934'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) # Unit = %
    data['Aftertreatment1DieselExhaustFluidDosingSystemFrozen_spn6802'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment2DieselExhaustFluidDosingSystemFrozen_spn6803'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment2SystemHydrocarbon_spn7935'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 1.0) # Unit = %
    return data

# VEP14
def PGN_64515(msg, data):
    data['SLIBatteryPack1Battery4StateofCharge_spn7927'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    data['SLIBatteryPack1Battery4Capacity_spn7928'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 1.0) # Unit = Ah
    data['SLIBatteryPack1Battery4Health_spn7929'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.5) # Unit = %
    data['SLIBatteryPack1Battery4PredictedMinimumCrankingVoltage_spn7930'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 0.2) # Unit = V
    data['SLIBatteryPack1Sensor4InitializationStatus_spn7931'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    return data

# VEP13
def PGN_64516(msg, data):
    data['SLIBatteryPack1Battery4NetCurrent_spn7924'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) - 1600.0 # Unit = A
    data['SLIBatteryPack1Battery4Temperature_spn7925'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['SLIBatteryPack1Battery4Voltage_spn7926'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    return data

# VEP12
def PGN_64517(msg, data):
    data['SLIBatteryPack1Battery3StateofCharge_spn7919'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    data['SLIBatteryPack1Battery3Capacity_spn7920'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 1.0) # Unit = Ah
    data['SLIBatteryPack1Battery3Health_spn7921'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.5) # Unit = %
    data['SLIBatteryPack1Battery3PredictedMinimumCrankingVoltage_spn7922'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 0.2) # Unit = V
    data['SLIBatteryPack1Sensor3InitializationStatus_spn7923'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    return data

# VEP11
def PGN_64518(msg, data):
    data['SLIBatteryPack1Battery3NetCurrent_spn7916'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) - 1600.0 # Unit = A
    data['SLIBatteryPack1Battery3Temperature_spn7917'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['SLIBatteryPack1Battery3Voltage_spn7918'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    return data

# VEP10
def PGN_64519(msg, data):
    data['SLIBatteryPack1Battery2StateofCharge_spn7911'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    data['SLIBatteryPack1Battery2Capacity_spn7912'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 1.0) # Unit = Ah
    data['SLIBatteryPack1Battery2Health_spn7913'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.5) # Unit = %
    data['SLIBatteryPack1Battery2PredictedMinimumCrankingVoltage_spn7914'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 0.2) # Unit = V
    data['SLIBatteryPack1Sensor2InitializationStatus_spn7915'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    return data

# VEP9
def PGN_64520(msg, data):
    data['SLIBatteryPack1Battery2NetCurrent_spn7908'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) - 1600.0 # Unit = A
    data['SLIBatteryPack1Battery2Temperature_spn7909'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['SLIBatteryPack1Battery2Voltage_spn7910'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    return data

# VEP8
def PGN_64521(msg, data):
    data['SLIBatteryPack1Battery1StateofCharge_spn7903'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    data['SLIBatteryPack1Battery1Capacity_spn7904'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 1.0) # Unit = Ah
    data['SLIBatteryPack1Battery1Health_spn7905'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.5) # Unit = %
    data['SLIBatteryPack1Battery1PredictedMinimumCrankingVoltage_spn7906'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 0.2) # Unit = V
    data['SLIBatteryPack1Sensor1InitializationStatus_spn7907'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    return data

# VEP7
def PGN_64522(msg, data):
    data['SLIBatteryPack1Battery1NetCurrent_spn7900'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) - 1600.0 # Unit = A
    data['SLIBatteryPack1Battery1Temperature_spn7901'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['SLIBatteryPack1Battery1Voltage_spn7902'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    return data

# EEC20
def PGN_64523(msg, data):
    data['EstimatedEngineParasiticLosses-PercentTorque(HighResolution)_spn7837'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.0015625) # Unit = %
    data['ActualMaximumAvailableEngine-PercentFuel_spn8630'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 0.4) # Unit = %
    data['NominalFrictionPercentTorque(HighResolution)_spn12926'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 0.0015625) # Unit = %
    data['AbsoluteEngineLoad-PercentAirMass_spn13131'] = ( enforceMaxV(( (int(msg[10:12], 16)) + ((int(msg[12:14], 16)) << 8 )), 64255)  * 0.025) # Unit = %
    return data

# FPS1
def PGN_64525(msg, data):
    data['FirePumpOperationTime_spn7825'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 1.0) # Unit = s
    data['FirePumpEngagementCycles_spn7826'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 1.0) # Unit = count
    return data

# PHRPS
def PGN_64526(msg, data):
    data['RearHitchRollSensitivity_spn7812'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 0.4) # Unit = %
    data['RearHitchPitchSensitivity_spn7813'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 0.4) # Unit = %
    return data

# AMB3
def PGN_64528(msg, data):
    data['BarometricAbsolutePressure2_spn7781'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    data['EngineIntake2AirTemperature_spn7850'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['EnginePowerDerateRelativeHumidityDifference_spn12852'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 0.01) - 321.27 # Unit = %
    return data

# TGFI
def PGN_64529(msg, data):
    data['EngineTotalGaseousFuelVolumeUsed_spn7455'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 0.5) # Unit = mÂ³
    data['EngineTotalGaseousIdleFuelVolumeUsed_spn7456'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 ) + ((int(msg[12:14], 16)) << 16 ) + ((int(msg[14:16], 16)) << 24 )), 4211081215)  * 0.5) # Unit = mÂ³
    return data

# CDC1
def PGN_64530(msg, data):
    data['CabDoorsLockActuationCommand_spn7727'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000111)), 7)  * 1.0) # Unit = bit
    data['RemoteCabDoorLockRequest_spn7728'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000111)), 7)  * 1.0) # Unit = bit
    data['LeftFrontWindowPositionCommand_spn7729'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000111)), 7)  * 1.0) # Unit = bit
    data['RightFrontWindowPositionCommand_spn7730'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00111000) >> 3)), 7)  * 1.0) # Unit = bit
    data['MirrorFoldingSwitch_spn12317'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['LeftRearWindowPositionCommand_spn7731'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000111)), 7)  * 1.0) # Unit = bit
    data['RightRearWindowPositionCommand_spn7732'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00111000) >> 3)), 7)  * 1.0) # Unit = bit
    data['MirrorAutoPanningEnable_spn12318'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['MirrorLeft1HorizontalCommand_spn7733'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['MirrorLeft1VerticalCommand_spn7734'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['MirrorRight1HorizontalCommand_spn7735'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['MirrorRight1VerticalCommand_spn7736'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['MirrorLeft2HorizontalCommand_spn7737'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['MirrorLeft2VerticalCommand_spn7738'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['MirrorRight2HorizontalCommand_spn7739'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['MirrorRight2VerticalCommand_spn7740'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['MirrorLeft1HeatCommand_spn7741'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['MirrorRight1HeatCommand_spn7742'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['MirrorLeft2HeatCommand_spn7743'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['MirrorRight2HeatCommand_spn7744'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# DLS
def PGN_64531(msg, data):
    data['LeftFrontCabDoorLatchPosition_spn7723'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000111)), 7)  * 1.0) # Unit = bit
    data['RightFrontCabDoorLatchPosition_spn7724'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000111)), 7)  * 1.0) # Unit = bit
    data['LeftRearCabDoorLatchPosition_spn7725'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000111)), 7)  * 1.0) # Unit = bit
    data['RightRearCabDoorLatchPosition_spn7726'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000111)), 7)  * 1.0) # Unit = bit
    return data

# VEP6
def PGN_64533(msg, data):
    data['BatteryPotential/PowerInput3_spn7712'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['BatteryPotential/PowerInput4_spn7713'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['SLIBattery3NetCurrent_spn7714'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.05) - 1600.0 # Unit = A
    data['SLIBattery4NetCurrent_spn7715'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.05) - 1600.0 # Unit = A
    return data

# PLT2
def PGN_64534(msg, data):
    data['PayloadTemperature5_spn7707'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    return data

# PLT1
def PGN_64535(msg, data):
    data['PayloadTemperature1_spn7703'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['PayloadTemperature2_spn7704'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['PayloadTemperature3_spn7705'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['PayloadTemperature4_spn7706'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    return data

# PLST2
def PGN_64536(msg, data):
    data['TotalPayloadTransactionCount_spn7701'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 1.0) # Unit = count
    return data

# PLST1
def PGN_64537(msg, data):
    data['TotalDeliveredPayloadWeight_spn7699'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 100.0) # Unit = kg
    data['TotalHaulCycleCount_spn7700'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 ) + ((int(msg[12:14], 16)) << 16 ) + ((int(msg[14:16], 16)) << 24 )), 4211081215)  * 1.0) # Unit = count
    return data

# EEC19
def PGN_64546(msg, data):
    data['TotalEngineEnergy_spn7608'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 1.0) # Unit = kWh
    data['EngineExhaustFlowRate(ExtendedRange)_spn7852'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 ) + ((int(msg[12:14], 16)) << 16 ) + ((int(msg[14:16], 16)) << 24 )), 4211081215)  * 0.001) # Unit = kg/h
    return data

# LFC2
def PGN_64547(msg, data):
    data['EngineTotalDieselFuelDemand_spn7597'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 0.5) # Unit = l
    return data

# AT2T1I2
def PGN_64548(msg, data):
    data['Aftertreatment2DieselExhaustFluidTankVolume2_spn7531'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 0.4) # Unit = %
    data['Aftertreatment2DieselExhaustFluidTankTemperature2_spn7574'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['Aftertreatment2DieselExhaustFluidTankHeater2_spn7575'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 0.4) # Unit = %
    return data

# AT1T1I2
def PGN_64549(msg, data):
    data['Aftertreatment1DieselExhaustFluidTankVolume2_spn7530'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 0.4) # Unit = %
    data['Aftertreatment1DieselExhaustFluidTankTemperature2_spn7572'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['Aftertreatment1DieselExhaustFluidTankHeater2_spn7573'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 0.4) # Unit = %
    return data

# A2DEFI2
def PGN_64550(msg, data):
    data['Aftertreatment2DieselExhaustFluidControllerTemperature_spn7529'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['Aftertreatment2DieselExhaustFluidController2Temperature_spn7535'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    return data

# A1DEFI2
def PGN_64551(msg, data):
    data['Aftertreatment1DieselExhaustFluidController1Temperature_spn5480'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['Aftertreatment1DieselExhaustFluidController2Temperature_spn7528'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    return data

# FLI3
def PGN_64553(msg, data):
    data['LeftDistancetoLaneMarkfromVehiclesMiddle_spn7476'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 0.02) # Unit = m
    data['RightDistancetoLaneMarkfromVehiclesMiddle_spn7477'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 0.02) # Unit = m
    data['RoadCurvatureBasedonLaneMarks_spn7478'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64259)  * 0.007812) - 250.0 # Unit = 1/km
    data['LaneDepartureAngleLeft_spn7479'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.1) - 12.5 # Unit = deg
    data['LaneDepartureAngleRight_spn7480'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 0.1) - 12.5 # Unit = deg
    data['LaneMarkQualityontheLeftSide_spn7481'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000111)), 7)  * 1.0) # Unit = bit
    data['LaneMarkQualityontheRightSide_spn7482'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00111000) >> 3)), 7)  * 1.0) # Unit = bit
    data['RightLaneMarkerType_spn8143'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['LeftLaneMarkerType_spn8144'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    return data

# OII
def PGN_64554(msg, data):
    data['OperatorInducementTorqueDerateLevel1_spn7425'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) # Unit = %
    data['OperatorInducementTimetoTorqueDerateLevel1_spn7426'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 )), 64255)  * 1.0) # Unit = min
    data['OperatorInducementTorqueDerateLevel2_spn7427'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) # Unit = %
    data['OperatorInducementTimetoTorqueDerateLevel2_spn7428'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 1.0) # Unit = min
    data['OperatorInducementTimetoFinalInducementAction_spn7719'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 1.0) # Unit = min
    return data

# CCVS4
def PGN_64555(msg, data):
    data['AppliedVehicleSpeedLimit(HighResolution)_spn7420'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64259)  * 0.003906) # Unit = km/h
    data['CruiseControlAdjustedMaximumSpeed_spn7495'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64259)  * 0.003906) # Unit = km/h
    data['EngineExternalIdleRequestFeedback_spn8441'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['SourceAddressofControllingDeviceforSettingCruiseControl_spn9844'] = ( enforceMaxV(( (int(msg[10:12], 16))), 255)  * 1.0) # Unit = SA
    return data

# BCLC
def PGN_64556(msg, data):
    data['TractorBrakeCaliperLiningClearanceAxle1Left_spn7396'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['TractorBrakeCaliperLiningClearanceAxle1Right_spn7397'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['TractorBrakeCaliperLiningClearanceAxle2Left_spn7398'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['TractorBrakeCaliperLiningClearanceAxle2Right_spn7399'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['TractorBrakeCaliperLiningClearanceAxle3Left_spn7400'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['TractorBrakeCaliperLiningClearanceAxle3Right_spn7401'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['TractorBrakeCaliperLiningClearanceAxle4Left_spn7402'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['TractorBrakeCaliperLiningClearanceAxle4Right_spn7403'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['TractorBrakeCaliperLiningClearanceAxle5Left_spn7404'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['TractorBrakeCaliperLiningClearanceAxle5Right_spn7405'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['TrailerBrakeCaliperLiningClearanceAxle1Left_spn7406'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['TrailerBrakeCaliperLiningClearanceAxle1Right_spn7407'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['TrailerBrakeCaliperLiningClearanceAxle2Left_spn7408'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['TrailerBrakeCaliperLiningClearanceAxle2Right_spn7409'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['TrailerBrakeCaliperLiningClearanceAxle3Left_spn7410'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['TrailerBrakeCaliperLiningClearanceAxle3Right_spn7411'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['TrailerBrakeCaliperLiningClearanceAxle4Left_spn7412'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['TrailerBrakeCaliperLiningClearanceAxle4Right_spn7413'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['TrailerBrakeCaliperLiningClearanceAxle5Left_spn7414'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['TrailerBrakeCaliperLiningClearanceAxle5Right_spn7415'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# AF5
def PGN_64557(msg, data):
    data['LNGTank1VaporPressure_spn6787'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    data['LNGTank2VaporPressure_spn6788'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    data['EngineFuel2InjectorMeteringRail1Temperature2_spn7514'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    return data

# ETCC3
def PGN_64558(msg, data):
    data['EngineTurbochargerCompressorBlowoffActuator1MotorCurrentDisable_spn7380'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EngineTurbochargerWastegateActuator1MotorCurrentDisable_spn7381'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['EngineCylinderHeadBypassActuator1MotorCurrentDisable_spn7382'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['EngineThrottleValve1MotorCurrentDisable_spn7383'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['EngineTurbochargerCompressorBypassActuator1MotorCurrentDisable_spn7708'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EngineTurbochargerCompressorBypassActuator2MotorCurrentDisable_spn7709'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['EngineTurbochargerWastegateActuator2MotorCurrentDisable_spn7710'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    return data

# FSAS
def PGN_64559(msg, data):
    data['FireSuppressionWaterTankLevel_spn7347'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 0.4) # Unit = %
    data['FireSuppressionClass-AFoamTankLevel_spn7348'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 0.4) # Unit = %
    data['FireSuppressionClass-BFoamTankLevel_spn7349'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 0.4) # Unit = %
    data['FireSuppressionCompressedAirFoamSystemAirPressure_spn7350'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 8.0) # Unit = kPa
    return data

# SCROII4
def PGN_64560(msg, data):
    data['SCROperatorInducementEmergencyOverrideTotalResetOccurrences_spn7341'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 1.0) # Unit = count
    data['SCROperatorInducementOverrideMode_spn7342'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000111)), 7)  * 1.0) # Unit = bit
    data['SCROperatorInducementOverrideRenewalRequired_spn7343'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00011000) >> 3)), 3)  * 1.0) # Unit = bit
    data['SCROperatorInducementOverrideTimeRemaining(ExtendedRange)_spn7344'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 1.0) # Unit = min
    return data

# ASI1
def PGN_64561(msg, data):
    data['AftertreatmentThermalManagementStatus_spn7332'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['AftertreatmentActiveRegenerationInhibitedDuetoLowExhaustPressure_spn7440'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['AftertreatmentEngineSpeedIncreaserequest_spn7502'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['AftertreatmentEngineLoadRequest_spn7503'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['AftertreatmentAmbientAirTemperature_spn7441'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['AftertreatmentDieselExhaustFluidHeaterCircuitBreaker_spn7588'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['DieselExhaustFluidQualityMalfunctionEvaluationPeriodActive_spn7899'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['AftertreatmentSCRDosingModeStatus_spn9176'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b01110000) >> 4)), 7)  * 1.0) # Unit = bit
    data['AftertreatmentDieselExhaustFluidTankVolume_spn7606'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.4) # Unit = %
    data['AftertreatmentDieselExhaustFluidTankTemperature_spn7607'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['DPFActiveRegenerationTimeRemaining_spn10156'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 1.0) # Unit = min
    return data

# AFT1PSI3
def PGN_64562(msg, data):
    data['Aftertreatment1ParticulateSensorHeaterHighSideDriverPreliminaryFMI_spn7321'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00011111)), 31)  * 1.0) # Unit = bit
    data['Aftertreatment1ParticulateSensorHeaterHighSideDriverDiagnosticStatus_spn7322'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11100000) >> 5)), 7)  * 1.0) # Unit = bit
    data['Aftertreatment1ParticulateSensorHeaterLowSideDriverPreliminaryFMI_spn7323'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00011111)), 31)  * 1.0) # Unit = bit
    data['Aftertreatment1ParticulateSensorHeaterLowSideDriverDiagnosticStatus_spn7324'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11100000) >> 5)), 7)  * 1.0) # Unit = bit
    data['Aftertreatment1ParticulateSensorInputPreliminaryFMI_spn7325'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00011111)), 31)  * 1.0) # Unit = bit
    data['Aftertreatment1ParticulateSensorInputDiagnosticStatus_spn7326'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11100000) >> 5)), 7)  * 1.0) # Unit = bit
    data['Aftertreatment1ParticulateSensorPowerSupplyPreliminaryFMI_spn7327'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00011111)), 31)  * 1.0) # Unit = bit
    data['Aftertreatment1ParticulateSensorPowerSupplyDiagnosticStatus_spn7328'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11100000) >> 5)), 7)  * 1.0) # Unit = bit
    data['Aftertreatment1ParticulateSensorHeaterPowerSupplyPreliminaryFMI_spn7329'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00011111)), 31)  * 1.0) # Unit = bit
    data['Aftertreatment1ParticulateSensorHeaterPowerSupplyDiagnosticStatus_spn7330'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11100000) >> 5)), 7)  * 1.0) # Unit = bit
    return data

# EFIMRPI3
def PGN_64563(msg, data):
    data['EngineFuel1InjectorMeteringRail1DesiredPressure_spn7100'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 5.0) # Unit = kPa
    data['EngineFuel1InjectorMeteringRail2DesiredPressure_spn7101'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 5.0) # Unit = kPa
    return data

# EFIMRPI2
def PGN_64564(msg, data):
    data['EngineFuel1InjectorMeteringRail1Pressure1(ExtendedRange)_spn7096'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 5.0) # Unit = kPa
    data['EngineFuel1InjectorMeteringRail1Pressure2(ExtendedRange)_spn7097'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 5.0) # Unit = kPa
    data['EngineFuel1InjectorMeteringRail2Pressure1(ExtendedRange)_spn7098'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 5.0) # Unit = kPa
    data['EngineFuel1InjectorMeteringRail2Pressure2(ExtendedRange)_spn7099'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 5.0) # Unit = kPa
    return data

# AT2P1I
def PGN_64565(msg, data):
    data['Aftertreatment2DieselExhaustFluidPumpHeater_spn7086'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 0.4) # Unit = %
    data['Aftertreatment2DieselExhaustFluidPump2MotorSpeed_spn7466'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 )), 64255)  * 0.5) # Unit = rpm
    return data

# GFSVI
def PGN_64566(msg, data):
    data['EngineGaseousFuelSupplyShutoffValve1Position_spn7081'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 0.4) # Unit = %
    data['EngineGaseousFuelSupplyShutoffValve2Position_spn7082'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 0.4) # Unit = %
    data['EngineGaseousFuelSupplyBleedValve1Position_spn7083'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 0.4) # Unit = %
    data['EngineGaseousFuelSupplyBleedValve2Position_spn7084'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 0.4) # Unit = %
    data['EngineGaseousFuelSupplyBleedValve3Position_spn7085'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.4) # Unit = %
    data['InertGasSupplyValvePosition_spn7442'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 0.4) # Unit = %
    return data

# EOMDI2
def PGN_64567(msg, data):
    data['EngineOilMist9Concentration_spn7079'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) # Unit = %
    data['EngineOilMist10Concentration_spn7080'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) # Unit = %
    return data

# EOMDI1
def PGN_64568(msg, data):
    data['EngineOilMist1Concentration_spn7071'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) # Unit = %
    data['EngineOilMist2Concentration_spn7072'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) # Unit = %
    data['EngineOilMist3Concentration_spn7073'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) # Unit = %
    data['EngineOilMist4Concentration_spn7074'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) # Unit = %
    data['EngineOilMist5Concentration_spn7075'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) # Unit = %
    data['EngineOilMist6Concentration_spn7076'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 1.0) # Unit = %
    data['EngineOilMist7Concentration_spn7077'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 1.0) # Unit = %
    data['EngineOilMist8Concentration_spn7078'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 1.0) # Unit = %
    return data

# GFSP2
def PGN_64569(msg, data):
    data['PlantGaseousFuelSupplyOutletPressure_spn7067'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.5) # Unit = kPa
    data['PlantInertGasSupplyOutletPressure_spn7068'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.5) # Unit = kPa
    return data

# GFSP1
def PGN_64570(msg, data):
    data['EngineGaseousFuelSupplyPressure2_spn7063'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.5) # Unit = kPa
    data['EngineGaseousFuelSupplyUnitIntakePressure_spn7064'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.5) # Unit = kPa
    data['EngineGaseousFuelSupplyShutoffValve1IntakePressure_spn7065'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.5) # Unit = kPa
    data['EngineGaseousFuelSupplyShutoffValve2IntakePressure_spn7066'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.5) # Unit = kPa
    return data

# EEBT3
def PGN_64571(msg, data):
    data['EngineEndBearing17Temperature_spn7059'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['EngineEndBearing18Temperature_spn7060'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['EngineEndBearing19Temperature_spn7061'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['EngineEndBearing20Temperature_spn7062'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    return data

# EEBT2
def PGN_64572(msg, data):
    data['EngineEndBearing9Temperature_spn7051'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['EngineEndBearing10Temperature_spn7052'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['EngineEndBearing11Temperature_spn7053'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['EngineEndBearing12Temperature_spn7054'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['EngineEndBearing13Temperature_spn7055'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['EngineEndBearing14Temperature_spn7056'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['EngineEndBearing15Temperature_spn7057'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['EngineEndBearing16Temperature_spn7058'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    return data

# EEBT1
def PGN_64573(msg, data):
    data['EngineEndBearing1Temperature_spn7043'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['EngineEndBearing2Temperature_spn7044'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['EngineEndBearing3Temperature_spn7045'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['EngineEndBearing4Temperature_spn7046'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['EngineEndBearing5Temperature_spn7047'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['EngineEndBearing6Temperature_spn7048'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['EngineEndBearing7Temperature_spn7049'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['EngineEndBearing8Temperature_spn7050'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    return data

# HEDPI
def PGN_64574(msg, data):
    data['HeatExchangerDebrisPurgeStatus_spn7035'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HeatExchangerDebrisPurgeApproaching_spn7036'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    return data

# ETCC2
def PGN_64575(msg, data):
    data['EngineStagedTurbochargerSolenoidStatus_spn7025'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 0.4) # Unit = %
    return data

# EHF2PC
def PGN_64576(msg, data):
    data['EngineFuel2PumpHydraulicFlowControlValve_spn7016'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 0.4) # Unit = %
    data['EngineFuel2PumpHydraulicSwashPlateAngle_spn7017'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 0.4) # Unit = %
    data['EngineFuel2PumpHydraulicDirectionalValve_spn7018'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 0.4) # Unit = %
    data['EngineFuel2PumpHydraulicPressure_spn7019'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 2.0) # Unit = kPa
    return data

# AF4
def PGN_64577(msg, data):
    data['EngineFuel2InjectorMeteringRail1Pressure_spn7021'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 2.0) # Unit = kPa
    data['EngineFuel2InjectorMeteringRail2Pressure_spn7022'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 2.0) # Unit = kPa
    data['EngineFuel2InjectorMeteringRail1Temperature_spn7023'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['EngineFuel2InjectorMeteringRail2Temperature_spn7024'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['EngineFuel2InjectorMeteringRail1Pressure2_spn7513'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 2.0) # Unit = kPa
    return data

# TIRE2
def PGN_64578(msg, data):
    data['TirePressure(ExtendedRange)_spn6988'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 )), 64255)  * 1.0) # Unit = kPa
    data['RequiredTirePressure_spn6989'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 1.0) # Unit = kPa
    return data

# TCSI
def PGN_64579(msg, data):
    data['ColdInflationPressure_spn6980'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 )), 64255)  * 1.0) # Unit = kPa
    data['UnderPressurePercentageThreshold_spn6981'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 0.5) # Unit = %
    data['ExtremeUnderPressurePercentageThreshold_spn6982'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.5) # Unit = %
    data['OverPressurePercentageThreshold_spn6983'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 0.5) # Unit = %
    data['OverTemperature_spn6984'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    return data

# MTI
def PGN_64583(msg, data):
    data['NumberofAxlesontheVehicle_spn6949'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00001111)), 13)  * 1.0) # Unit = count
    data['NumberofTiresontheVehicle_spn6950'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) # Unit = count
    data['Axle1MonitoredTireCount_spn6951'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00001111)), 13)  * 1.0) # Unit = count
    data['Axle2MonitoredTireCount_spn6952'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11110000) >> 4)), 13)  * 1.0) # Unit = count
    data['Axle3MonitoredTireCount_spn6953'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00001111)), 13)  * 1.0) # Unit = count
    data['Axle4MonitoredTireCount_spn6954'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11110000) >> 4)), 13)  * 1.0) # Unit = count
    data['Axle5MonitoredTireCount_spn6955'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00001111)), 13)  * 1.0) # Unit = count
    data['Axle6MonitoredTireCount_spn6956'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11110000) >> 4)), 13)  * 1.0) # Unit = count
    data['Axle7MonitoredTireCount_spn6957'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00001111)), 13)  * 1.0) # Unit = count
    data['Axle8MonitoredTireCount_spn6958'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b11110000) >> 4)), 13)  * 1.0) # Unit = count
    data['Axle9MonitoredTireCount_spn6959'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00001111)), 13)  * 1.0) # Unit = count
    data['Axle10MonitoredTireCount_spn6960'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11110000) >> 4)), 13)  * 1.0) # Unit = count
    data['Axle11MonitoredTireCount_spn6961'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00001111)), 13)  * 1.0) # Unit = count
    data['Axle12MonitoredTireCount_spn6962'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b11110000) >> 4)), 13)  * 1.0) # Unit = count
    return data

# SCRSC
def PGN_64586(msg, data):
    data['SCRSystemCleaningLampCommand_spn6915'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000111)), 7)  * 1.0) # Unit = bit
    data['SCRSystemCleaningStatus_spn6916'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['SCRSystemCleaningInhibitedStatus_spn6917'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['SCRSystemCleaningInhibitedDuetoInhibitSwitch_spn6918'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['SCRSystemCleaningInhibitedDuetoClutchDisengaged_spn6919'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['SCRSystemCleaningInhibitedDuetoServiceBrakeActive_spn6920'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['SCRSystemCleaningInhibitedDuetoPTOActive_spn6921'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['SCRSystemCleaningInhibitedDuetoAcceleratorPedalOffIdle_spn6922'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['SCRSystemCleaningInhibitedDuetoOutofNeutral_spn6923'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['SCRSystemCleaningInhibitedDuetoVehicleSpeedAboveAllowedSpeed_spn6924'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['SCRSystemCleaningInhibitedDuetoParkingBrakeNotSet_spn6925'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['SCRSystemCleaningInhibitedDuetoLowExhaustTemperature_spn6926'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['SCRSystemCleaningInhibitedDuetoSystemFaultActive_spn6927'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['SCRSystemCleaningInhibitedDuetoSystemTimeout_spn6928'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['SCRSystemCleaningInhibitedDuetoTemporarySystemLockout_spn6929'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['SCRSystemCleaningInhibitedDuetoPermanentSystemLockout_spn6930'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['SCRSystemCleaningInhibitedDuetoEngineNotWarmedUp_spn6931'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['SCRSystemCleaningInhibitedDuetoVehicleSpeedBelowAllowedSpeed_spn6932'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['SCRSystemCleaningAutomaticInitiationConfiguration_spn6933'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['SCRSystemCleaningForcedStatus_spn6934'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11100000) >> 5)), 7)  * 1.0) # Unit = bit
    data['Aftertreatment1SCRSystemConditionsNotMetforActiveCleaning_spn7848'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    return data

# EEC17
def PGN_64587(msg, data):
    data['PEMSEngineFuelMassFlowRate_spn6893'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.02) # Unit = g/s
    data['VehicleFuelRate_spn6894'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.02) # Unit = g/s
    data['EngineExhaustFlowRate_spn6895'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.2) # Unit = kg/h
    data['CylinderFuelRate_spn7333'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.03125) # Unit = mg/stroke
    return data

# SCROII3
def PGN_64588(msg, data):
    data['SCROperatorInducementOverrideEnable_spn6877'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['SCROperatorInducementOverrideTimeRemaining_spn6878'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 )), 64255)  * 1.0) # Unit = s
    data['NumberofSCROperatorInducementOverrideEventsRemaining_spn6879'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) # Unit = count
    data['TotalNumberofSCROperatorInducementOverrideEvents_spn6880'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 1.0) # Unit = count
    return data

# A2SCRDSI3
def PGN_64589(msg, data):
    data['Aftertreatment2DieselExhaustFluidDoserPressure_spn6876'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 4.0) # Unit = kPa
    data['Aftertreatment2DieselExhaustFluidDoser2AbsolutePressure_spn7464'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 8.0) # Unit = kPa
    data['Aftertreatment2DieselExhaustFluidDoser2Temperature_spn7465'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['Aftertreatment2DieselExhaustFluidDoser2Pressure_spn8153'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 4.0) # Unit = kPa
    return data

# A1SCRDSI3
def PGN_64590(msg, data):
    data['Aftertreatment1DieselExhaustFluidDoserPressure_spn6875'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 4.0) # Unit = kPa
    data['Aftertreatment1DieselExhaustFluidDoser2AbsolutePressure_spn7459'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 8.0) # Unit = kPa
    data['Aftertreatment1DieselExhaustFluidDoser2Temperature_spn7460'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['Aftertreatment1DieselExhaustFluidDoser2Pressure_spn8152'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 4.0) # Unit = kPa
    return data

# PWSI
def PGN_64591(msg, data):
    data['PayloadWeightSensor1Status_spn6855'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['PayloadWeightSensor2Status_spn6856'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['PayloadWeightSensor3Status_spn6857'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['PayloadWeightSensor4Status_spn6858'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['PayloadWeightSensor5Status_spn6859'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['PayloadWeightSensor6Status_spn6860'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['PayloadWeightSensor7Status_spn6861'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['PayloadWeightSensor8Status_spn6862'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# PLSS
def PGN_64592(msg, data):
    data['HaulCycleCount_spn6847'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 1.0) # Unit = count
    data['HaulModeStatus_spn6848'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['PayloadDeliveryTransactionStatus_spn7702'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['DeliveredPayloadWeight_spn6849'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 ) + ((int(msg[10:12], 16)) << 16 )), 16449535)  * 2.0) # Unit = kg
    data['DeliveredPayloadConfidence_spn6850'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 0.5) # Unit = %
    return data

# ASC7
def PGN_64593(msg, data):
    data['LiftAxle1Status_spn6843'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000111)), 7)  * 1.0) # Unit = bit
    data['LiftAxle2Status_spn6844'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00111000) >> 3)), 7)  * 1.0) # Unit = bit
    data['LiftAxle3Status_spn12298'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000111)), 7)  * 1.0) # Unit = bit
    data['LiftAxle4Status_spn12299'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00111000) >> 3)), 7)  * 1.0) # Unit = bit
    return data

# BWLN
def PGN_64594(msg, data):
    data['BinInstance_spn6845'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00001111)), 15)  * 1.0) # Unit = count
    data['BinWeighingErrorStatus_spn6842'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['BinLiftCount_spn6840'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 )), 64255)  * 1.0) # Unit = count
    data['NetBinWeight_spn6841'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 2.0) # Unit = kg
    return data

# EGLI
def PGN_64595(msg, data):
    data['GaseousFuelLeakage1Concentration_spn6834'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 0.5) # Unit = %
    data['GaseousFuelLeakage2Concentration_spn6835'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 0.5) # Unit = %
    data['GaseousFuelLeakage3Concentration_spn6836'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 0.5) # Unit = %
    data['GasLeakageDetection1Pressure_spn6837'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 4.0) # Unit = kPa
    data['GasLeakageDetection2Pressure_spn6838'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 4.0) # Unit = kPa
    data['GasLeakageDetection3Pressure_spn6839'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 4.0) # Unit = kPa
    return data

# SCROII2
def PGN_64598(msg, data):
    data['AftertreatmentSCRMalfunctionTime_spn6819'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 1.0) # Unit = s
    data['SCROperatorInducementTotalTime_spn7095'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 ) + ((int(msg[12:14], 16)) << 16 ) + ((int(msg[14:16], 16)) << 24 )), 4211081215)  * 1.0) # Unit = s
    return data

# SCROII1
def PGN_64599(msg, data):
    data['DieselExhaustFluidTank1EmptyTime_spn6817'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 1.0) # Unit = s
    data['DieselExhaustFluidQualityMalfunctionTime_spn6818'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 ) + ((int(msg[12:14], 16)) << 16 ) + ((int(msg[14:16], 16)) << 24 )), 4211081215)  * 1.0) # Unit = s
    return data

# TCI7
def PGN_64600(msg, data):
    data['EngineTurbocharger2LubeOilPressure_spn6811'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 4.0) # Unit = kPa
    data['EngineTurbocharger3LubeOilPressure_spn6812'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 4.0) # Unit = kPa
    data['EngineTurbocharger4LubeOilPressure_spn6813'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 4.0) # Unit = kPa
    data['EngineTurbocharger2OilTemperature_spn8850'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    return data

# ELS
def PGN_64601(msg, data):
    data['EngineUnloadStatus_spn6793'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EngineLoadShareStatus_spn6794'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00111100) >> 2)), 15)  * 1.0) # Unit = bit
    return data

# AFT1PSI2
def PGN_64651(msg, data):
    data['Aftertreatment1ParticulateSensorDetectionStatus_spn6777'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Aftertreatment1ParticulateSensorPowerSupply_spn6778'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment1ParticulateSensorRegenerationFailedCount_spn6779'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) # Unit = count
    data['Aftertreatment1ParticulateSensorTemperature_spn6780'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['Aftertreatment1ParticulateSensorMaximumResistance_spn6781'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 250.0) # Unit = kohm
    data['Aftertreatment1ParticulateSensorHeaterResistance_spn7070'] = ( enforceMaxV(( (int(msg[10:12], 16)) + ((int(msg[12:14], 16)) << 8 )), 64255)  * 0.1) # Unit = ohm
    return data

# AFT1PSI1
def PGN_64652(msg, data):
    data['Aftertreatment1ParticulateSensorResistance_spn6771'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 1.0) # Unit = kohm
    data['Aftertreatment1ParticulateSensorHeaterState_spn6772'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment1ParticulateSensorRegenerationStatus_spn6773'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment1ParticulateSensorRegenerationState_spn6774'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['Aftertreatment1ParticulateSensorActiveAccumulationTime_spn6775'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 6.0) # Unit = s
    data['Aftertreatment1ParticulateSensorTimeBetweenRegenerations_spn6776'] = ( enforceMaxV(( (int(msg[10:12], 16)) + ((int(msg[12:14], 16)) << 8 )), 64255)  * 6.0) # Unit = s
    return data

# AF3
def PGN_64655(msg, data):
    data['EngineGaseousFuelSupplyPressure1(ExtendedRange)_spn6646'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.00390625) # Unit = MPa
    data['EngineFuelVaporizer1DischargeTemperature_spn6610'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['GaseousFuelAccumulatorTemperature_spn6815'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['EngineGaseousFuelSupplyPressureRegulatorControlCommand_spn9649'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    return data

# EFIMRPI1
def PGN_64656(msg, data):
    data['EngineFuel1InjectorMeteringRail1Pressure1_spn6589'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.00390625) # Unit = MPa
    data['EngineFuel1InjectorMeteringRail1Pressure2_spn6590'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.00390625) # Unit = MPa
    data['EngineFuel1InjectorMeteringRail2Pressure1_spn6591'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.00390625) # Unit = MPa
    data['EngineFuel1InjectorMeteringRail2Pressure2_spn6592'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.00390625) # Unit = MPa
    return data

# EEN
def PGN_64657(msg, data):
    data['EngineExhaustNOx_spn6579'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) - 200.0 # Unit = ppm
    data['EngineExhaustDesiredNOx_spn6580'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) - 200.0 # Unit = ppm
    data['EngineExhaustNOxSensorPowerSupply_spn9812'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    return data

# AFR
def PGN_64658(msg, data):
    data['EngineMainChamberAirFuelRatio_spn6575'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.001) # Unit = Ratio
    data['EngineMainChamberDesiredAirFuelRatio_spn6576'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.001) # Unit = Ratio
    data['EnginePrechamberAirFuelRatio_spn6577'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.001) # Unit = Ratio
    data['EnginePrechamberDesiredAirFuelRatio_spn6578'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.001) # Unit = Ratio
    return data

# GFP2
def PGN_64659(msg, data):
    data['EngineMainChamberFuelAbsolutePressure_spn6571'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    data['EngineMainChamberFuelDesiredAbsolutePressure_spn6572'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    data['EnginePrechamberFuelAbsolutePressure_spn6573'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    data['EnginePrechamberFuelDesiredAbsolutePressure_spn6574'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    return data

# ASAI
def PGN_64660(msg, data):
    data['AftertreatmentDieselExhaustFluidDoserCooldownInterruptCount_spn6476'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 1.0) # Unit = count
    data['AftertreatmentDieselExhaustFluidDoserPurgeInterruptCount_spn6477'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 1.0) # Unit = count
    data['AftertreatmentDieselExhaustFluidDoserCooldownCompleteThisCycle_spn6478'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['AftertreatmentDieselExhaustFluidDoserCooldownCompleteLastCycle_spn6479'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['AftertreatmentDieselExhaustFluidDoserPurgeCompleteThisCycle_spn6480'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['AftertreatmentDieselExhaustFluidDoserPurgeCompleteLastCycle_spn6481'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['After-runCompleteThisCycle_spn6482'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    return data

# ECPMSI
def PGN_64661(msg, data):
    data['EngineCylinderPressureMonitor1PreliminaryFMI_spn6390'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['EngineCylinderPressureMonitor2PreliminaryFMI_spn6391'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    return data

# EI2
def PGN_64662(msg, data):
    data['EngineExhaustPressure1(ExtendedRange)_spn6384'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.125) # Unit = kPa
    data['EngineOilFilterIntakePressure(HighResolution/ExtendedRange)_spn7470'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    data['EngineCommonRailOilPressure_spn7720'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 4.0) # Unit = kPa
    data['EngineCommonRailOilAbsolutePressure_spn7721'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 4.0) # Unit = kPa
    data['EngineExhaustPressure2_spn5749'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64259)  * 0.007812) - 250.0 # Unit = kPa
    return data

# ESC2
def PGN_64663(msg, data):
    data['RequestedSteeringMode_spn6375'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000111)), 7)  * 1.0) # Unit = bit
    data['FrontSteeringAxleCenteredStatus_spn6376'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['RearSteeringAxleCenteredStatus_spn6377'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['2WheelSteerActuatorState_spn6378'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['4WheelSteerActuatorState_spn6379'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['CircleSteerModeActuatorState_spn6380'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['CrabSteerModeActuatorState_spn6381'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['SteeringControllerECUTemperature_spn6374'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['SteeringModeTwoWheelSwitchInput_spn11733'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['SteeringModeCrabSwitchInput_spn11734'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['SteeringModeCircleSwitchInput_spn11735'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['SteeringModeStatus_spn11736'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00000111)), 7)  * 1.0) # Unit = bit
    return data

# VSL
def PGN_64664(msg, data):
    data['SoftTopSpeedLimitActive_spn6370'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['SoftTopRatioLimitExceeded_spn6371'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['SoftTopSpeedLimitRemainingDistance_spn6372'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 )), 64255)  * 1.0) # Unit = km
    data['SoftTopSpeedLimitResetDistance_spn6373'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 1.0) # Unit = km
    data['SoftTopSpeedLimitRemainingContinuousIntervalDistance_spn6914'] = ( enforceMaxV(( (int(msg[10:12], 16)) + ((int(msg[12:14], 16)) << 8 )), 64255)  * 1.0) # Unit = km
    return data

# JS3LS
def PGN_64666(msg, data):
    data['Joystick3Lamp1Status_spn6358'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick3Lamp2Status_spn6359'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick3Lamp3Status_spn6360'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick3Lamp4Status_spn6361'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Joystick3Lamp5Status_spn6362'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick3Lamp6Status_spn6363'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick3Lamp7Status_spn6364'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick3Lamp8Status_spn6365'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Joystick3Lamp9Status_spn6366'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick3Lamp10Status_spn6367'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    return data

# JS2LS
def PGN_64667(msg, data):
    data['Joystick2Lamp1Status_spn6348'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick2Lamp2Status_spn6349'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick2Lamp3Status_spn6350'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick2Lamp4Status_spn6351'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Joystick2Lamp5Status_spn6352'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick2Lamp6Status_spn6353'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick2Lamp7Status_spn6354'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick2Lamp8Status_spn6355'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Joystick2Lamp9Status_spn6356'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick2Lamp10Status_spn6357'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    return data

# JS1LS
def PGN_64668(msg, data):
    data['Joystick1Lamp1Status_spn6338'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick1Lamp2Status_spn6339'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick1Lamp3Status_spn6340'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick1Lamp4Status_spn6341'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Joystick1Lamp5Status_spn6342'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick1Lamp6Status_spn6343'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick1Lamp7Status_spn6344'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick1Lamp8Status_spn6345'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Joystick1Lamp9Status_spn6346'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick1Lamp10Status_spn6347'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    return data

# ETAPC
def PGN_64669(msg, data):
    data['EngineTimingActuator1PositionCommand_spn6336'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000111)), 7)  * 1.0) # Unit = bit
    data['EngineTimingActuator2PositionCommand_spn6337'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00111000) >> 3)), 7)  * 1.0) # Unit = bit
    return data

# ETAP
def PGN_64670(msg, data):
    data['EngineTimingActuator1_spn635'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000111)), 7)  * 1.0) # Unit = bit
    data['EngineTimingActuator2_spn1245'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00111000) >> 3)), 7)  * 1.0) # Unit = bit
    data['EngineTimingActuator1RequestedPosition_spn6334'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000111)), 7)  * 1.0) # Unit = bit
    data['EngineTimingActuator2RequestedPosition_spn6335'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00111000) >> 3)), 7)  * 1.0) # Unit = bit
    return data

# DD2
def PGN_64671(msg, data):
    data['EngineOilFilterDifferentialPressure(ExtendedRange)_spn6321'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64259)  * 0.007812) - 250.0 # Unit = kPa
    data['EngineFuel2Tank1Level_spn6642'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 0.4) # Unit = %
    data['EngineFuel2Tank2Level_spn6643'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 0.4) # Unit = %
    data['EngineFuel2Tank3Level_spn6644'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.4) # Unit = %
    data['EngineFuel2Tank4Level_spn6645'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 0.4) # Unit = %
    data['DisplayRemainPowered_spn6846'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EngineOilLevelHigh/Low_spn8856'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 0.5) - 62.5 # Unit = l
    return data

# MFEH
def PGN_64672(msg, data):
    data['EngineTotalHoursofGaseousFuelOperation_spn6319'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 0.05) # Unit = h
    data['EngineTotalHoursofDieselFuelOperation_spn6320'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 ) + ((int(msg[12:14], 16)) << 16 ) + ((int(msg[14:16], 16)) << 24 )), 4211081215)  * 0.05) # Unit = h
    return data

# ESMR3
def PGN_64673(msg, data):
    data['EngineSparkPlug17MisfireRate_spn6286'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 0.4) # Unit = %
    data['EngineSparkPlug18MisfireRate_spn6287'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 0.4) # Unit = %
    data['EngineSparkPlug19MisfireRate_spn6288'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 0.4) # Unit = %
    data['EngineSparkPlug20MisfireRate_spn6289'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 0.4) # Unit = %
    data['EngineSparkPlug21MisfireRate_spn6290'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.4) # Unit = %
    data['EngineSparkPlug22MisfireRate_spn6291'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 0.4) # Unit = %
    data['EngineSparkPlug23MisfireRate_spn6292'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 0.4) # Unit = %
    data['EngineSparkPlug24MisfireRate_spn6293'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 0.4) # Unit = %
    return data

# ESMR2
def PGN_64674(msg, data):
    data['EngineSparkPlug9MisfireRate_spn6278'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 0.4) # Unit = %
    data['EngineSparkPlug10MisfireRate_spn6279'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 0.4) # Unit = %
    data['EngineSparkPlug11MisfireRate_spn6280'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 0.4) # Unit = %
    data['EngineSparkPlug12MisfireRate_spn6281'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 0.4) # Unit = %
    data['EngineSparkPlug13MisfireRate_spn6282'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.4) # Unit = %
    data['EngineSparkPlug14MisfireRate_spn6283'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 0.4) # Unit = %
    data['EngineSparkPlug15MisfireRate_spn6284'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 0.4) # Unit = %
    data['EngineSparkPlug16MisfireRate_spn6285'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 0.4) # Unit = %
    return data

# ESMR1
def PGN_64675(msg, data):
    data['EngineSparkPlug1MisfireRate_spn6270'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 0.4) # Unit = %
    data['EngineSparkPlug2MisfireRate_spn6271'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 0.4) # Unit = %
    data['EngineSparkPlug3MisfireRate_spn6272'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 0.4) # Unit = %
    data['EngineSparkPlug4MisfireRate_spn6273'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 0.4) # Unit = %
    data['EngineSparkPlug5MisfireRate_spn6274'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.4) # Unit = %
    data['EngineSparkPlug6MisfireRate_spn6275'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 0.4) # Unit = %
    data['EngineSparkPlug7MisfireRate_spn6276'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 0.4) # Unit = %
    data['EngineSparkPlug8MisfireRate_spn6277'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 0.4) # Unit = %
    return data

# ESVMAX6
def PGN_64676(msg, data):
    data['EngineSparkPlug21MaximumVoltage_spn6266'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['EngineSparkPlug22MaximumVoltage_spn6267'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['EngineSparkPlug23MaximumVoltage_spn6268'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['EngineSparkPlug24MaximumVoltage_spn6269'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    return data

# ESVMAX5
def PGN_64677(msg, data):
    data['EngineSparkPlug17MaximumVoltage_spn6262'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['EngineSparkPlug18MaximumVoltage_spn6263'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['EngineSparkPlug19MaximumVoltage_spn6264'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['EngineSparkPlug20MaximumVoltage_spn6265'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    return data

# ESVMAX4
def PGN_64678(msg, data):
    data['EngineSparkPlug13MaximumVoltage_spn6258'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['EngineSparkPlug14MaximumVoltage_spn6259'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['EngineSparkPlug15MaximumVoltage_spn6260'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['EngineSparkPlug16MaximumVoltage_spn6261'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    return data

# ESVMAX3
def PGN_64679(msg, data):
    data['EngineSparkPlug9MaximumVoltage_spn6254'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['EngineSparkPlug10MaximumVoltage_spn6255'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['EngineSparkPlug11MaximumVoltage_spn6256'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['EngineSparkPlug12MaximumVoltage_spn6257'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    return data

# ESVMAX2
def PGN_64680(msg, data):
    data['EngineSparkPlug5MaximumVoltage_spn6250'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['EngineSparkPlug6MaximumVoltage_spn6251'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['EngineSparkPlug7MaximumVoltage_spn6252'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['EngineSparkPlug8MaximumVoltage_spn6253'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    return data

# ESVMAX1
def PGN_64681(msg, data):
    data['EngineSparkPlug1MaximumVoltage_spn6246'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['EngineSparkPlug2MaximumVoltage_spn6247'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['EngineSparkPlug3MaximumVoltage_spn6248'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['EngineSparkPlug4MaximumVoltage_spn6249'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    return data

# ESVMIN6
def PGN_64682(msg, data):
    data['EngineSparkPlug21MinimumVoltage_spn6242'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['EngineSparkPlug22MinimumVoltage_spn6243'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['EngineSparkPlug23MinimumVoltage_spn6244'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['EngineSparkPlug24MinimumVoltage_spn6245'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    return data

# ESVMIN5
def PGN_64683(msg, data):
    data['EngineSparkPlug17MinimumVoltage_spn6238'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['EngineSparkPlug18MinimumVoltage_spn6239'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['EngineSparkPlug19MinimumVoltage_spn6240'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['EngineSparkPlug20MinimumVoltage_spn6241'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    return data

# ESVMIN4
def PGN_64684(msg, data):
    data['EngineSparkPlug13MinimumVoltage_spn6234'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['EngineSparkPlug14MinimumVoltage_spn6235'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['EngineSparkPlug15MinimumVoltage_spn6236'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['EngineSparkPlug16MinimumVoltage_spn6237'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    return data

# ESVMIN3
def PGN_64685(msg, data):
    data['EngineSparkPlug9MinimumVoltage_spn6230'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['EngineSparkPlug10MinimumVoltage_spn6231'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['EngineSparkPlug11MinimumVoltage_spn6232'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['EngineSparkPlug12MinimumVoltage_spn6233'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    return data

# ESVMIN2
def PGN_64686(msg, data):
    data['EngineSparkPlug5MinimumVoltage_spn6226'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['EngineSparkPlug6MinimumVoltage_spn6227'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['EngineSparkPlug7MinimumVoltage_spn6228'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['EngineSparkPlug8MinimumVoltage_spn6229'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    return data

# ESVMIN1
def PGN_64687(msg, data):
    data['EngineSparkPlug1MinimumVoltage_spn6222'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['EngineSparkPlug2MinimumVoltage_spn6223'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['EngineSparkPlug3MinimumVoltage_spn6224'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['EngineSparkPlug4MinimumVoltage_spn6225'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    return data

# EICMH
def PGN_64688(msg, data):
    data['EngineIgnitionControlModule1TimeRemaining_spn6220'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 0.05) # Unit = h
    data['EngineIgnitionControlModule2TimeRemaining_spn6221'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 ) + ((int(msg[12:14], 16)) << 16 ) + ((int(msg[14:16], 16)) << 24 )), 4211081215)  * 0.05) # Unit = h
    return data

# ICMSTS
def PGN_64689(msg, data):
    data['EngineIgnitionControlModule1Temperature_spn6214'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['EngineIgnitionControlModule2Temperature_spn6215'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['EngineIgnitionControlModule1State_spn6216'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000111)), 7)  * 1.0) # Unit = bit
    data['EngineIgnitionControlModule2State_spn6217'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00111000) >> 3)), 7)  * 1.0) # Unit = bit
    return data

# SPOC1
def PGN_64690(msg, data):
    data['SwitchedOutput_1Current_spn6112'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.005) # Unit = A
    data['SwitchedOutput_2Current_spn6113'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.005) # Unit = A
    data['SwitchedOutput_3Current_spn6114'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.005) # Unit = A
    data['SwitchedOutput_4Current_spn6115'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.005) # Unit = A
    data['SwitchedOutput_5Current_spn6116'] = ( enforceMaxV(( (int(msg[16:18], 16)) + ((int(msg[18:20], 16)) << 8 )), 64255)  * 0.005) # Unit = A
    data['SwitchedOutput_6Current_spn6117'] = ( enforceMaxV(( (int(msg[20:22], 16)) + ((int(msg[22:24], 16)) << 8 )), 64255)  * 0.005) # Unit = A
    data['SwitchedOutput_7Current_spn6118'] = ( enforceMaxV(( (int(msg[24:26], 16)) + ((int(msg[26:28], 16)) << 8 )), 64255)  * 0.005) # Unit = A
    data['SwitchedOutput_8Current_spn6119'] = ( enforceMaxV(( (int(msg[28:30], 16)) + ((int(msg[30:32], 16)) << 8 )), 64255)  * 0.005) # Unit = A
    data['SwitchedOutput_9Current_spn6120'] = ( enforceMaxV(( (int(msg[32:34], 16)) + ((int(msg[34:36], 16)) << 8 )), 64255)  * 0.005) # Unit = A
    data['SwitchedOutput_10Current_spn6121'] = ( enforceMaxV(( (int(msg[36:38], 16)) + ((int(msg[38:40], 16)) << 8 )), 64255)  * 0.005) # Unit = A
    data['SwitchedOutput_11Current_spn6122'] = ( enforceMaxV(( (int(msg[40:42], 16)) + ((int(msg[42:44], 16)) << 8 )), 64255)  * 0.005) # Unit = A
    data['SwitchedOutput_12Current_spn6123'] = ( enforceMaxV(( (int(msg[44:46], 16)) + ((int(msg[46:48], 16)) << 8 )), 64255)  * 0.005) # Unit = A
    data['SwitchedOutput_13Current_spn6124'] = ( enforceMaxV(( (int(msg[48:50], 16)) + ((int(msg[50:52], 16)) << 8 )), 64255)  * 0.005) # Unit = A
    data['SwitchedOutput_14Current_spn6125'] = ( enforceMaxV(( (int(msg[52:54], 16)) + ((int(msg[54:56], 16)) << 8 )), 64255)  * 0.005) # Unit = A
    data['SwitchedOutput_15Current_spn6126'] = ( enforceMaxV(( (int(msg[56:58], 16)) + ((int(msg[58:60], 16)) << 8 )), 64255)  * 0.005) # Unit = A
    data['SwitchedOutput_16Current_spn6127'] = ( enforceMaxV(( (int(msg[60:62], 16)) + ((int(msg[62:64], 16)) << 8 )), 64255)  * 0.005) # Unit = A
    data['SwitchedOutput_17Current_spn6128'] = ( enforceMaxV(( (int(msg[64:66], 16)) + ((int(msg[66:68], 16)) << 8 )), 64255)  * 0.005) # Unit = A
    data['SwitchedOutput_18Current_spn6129'] = ( enforceMaxV(( (int(msg[68:70], 16)) + ((int(msg[70:72], 16)) << 8 )), 64255)  * 0.005) # Unit = A
    data['SwitchedOutput_19Current_spn6130'] = ( enforceMaxV(( (int(msg[72:74], 16)) + ((int(msg[74:76], 16)) << 8 )), 64255)  * 0.005) # Unit = A
    data['SwitchedOutput_20Current_spn6131'] = ( enforceMaxV(( (int(msg[76:78], 16)) + ((int(msg[78:80], 16)) << 8 )), 64255)  * 0.005) # Unit = A
    data['SwitchedOutput_21Current_spn6132'] = ( enforceMaxV(( (int(msg[80:82], 16)) + ((int(msg[82:84], 16)) << 8 )), 64255)  * 0.005) # Unit = A
    data['SwitchedOutput_22Current_spn6133'] = ( enforceMaxV(( (int(msg[84:86], 16)) + ((int(msg[86:88], 16)) << 8 )), 64255)  * 0.005) # Unit = A
    data['SwitchedOutput_23Current_spn6134'] = ( enforceMaxV(( (int(msg[88:90], 16)) + ((int(msg[90:92], 16)) << 8 )), 64255)  * 0.005) # Unit = A
    data['SwitchedOutput_24Current_spn6135'] = ( enforceMaxV(( (int(msg[92:94], 16)) + ((int(msg[94:96], 16)) << 8 )), 64255)  * 0.005) # Unit = A
    data['SwitchedOutput_25Current_spn6136'] = ( enforceMaxV(( (int(msg[96:98], 16)) + ((int(msg[98:100], 16)) << 8 )), 64255)  * 0.005) # Unit = A
    data['SwitchedOutput_26Current_spn6137'] = ( enforceMaxV(( (int(msg[100:102], 16)) + ((int(msg[102:104], 16)) << 8 )), 64255)  * 0.005) # Unit = A
    data['SwitchedOutput_27Current_spn6138'] = ( enforceMaxV(( (int(msg[104:106], 16)) + ((int(msg[106:108], 16)) << 8 )), 64255)  * 0.005) # Unit = A
    data['SwitchedOutput_28Current_spn6139'] = ( enforceMaxV(( (int(msg[108:110], 16)) + ((int(msg[110:112], 16)) << 8 )), 64255)  * 0.005) # Unit = A
    data['SwitchedOutput_29Current_spn6140'] = ( enforceMaxV(( (int(msg[112:114], 16)) + ((int(msg[114:116], 16)) << 8 )), 64255)  * 0.005) # Unit = A
    data['SwitchedOutput_30Current_spn6141'] = ( enforceMaxV(( (int(msg[116:118], 16)) + ((int(msg[118:120], 16)) << 8 )), 64255)  * 0.005) # Unit = A
    data['SwitchedOutput_31Current_spn6142'] = ( enforceMaxV(( (int(msg[120:122], 16)) + ((int(msg[122:124], 16)) << 8 )), 64255)  * 0.005) # Unit = A
    data['SwitchedOutput_32Current_spn6143'] = ( enforceMaxV(( (int(msg[124:126], 16)) + ((int(msg[126:128], 16)) << 8 )), 64255)  * 0.005) # Unit = A
    return data

# FPOC
def PGN_64691(msg, data):
    data['FusedOutput_1Current_spn6080'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.005) # Unit = A
    data['FusedOutput_2Current_spn6081'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.005) # Unit = A
    data['FusedOutput_3Current_spn6082'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.005) # Unit = A
    data['FusedOutput_4Current_spn6083'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.005) # Unit = A
    data['FusedOutput_5Current_spn6084'] = ( enforceMaxV(( (int(msg[16:18], 16)) + ((int(msg[18:20], 16)) << 8 )), 64255)  * 0.005) # Unit = A
    data['FusedOutput_6Current_spn6085'] = ( enforceMaxV(( (int(msg[20:22], 16)) + ((int(msg[22:24], 16)) << 8 )), 64255)  * 0.005) # Unit = A
    data['FusedOutput_7Current_spn6086'] = ( enforceMaxV(( (int(msg[24:26], 16)) + ((int(msg[26:28], 16)) << 8 )), 64255)  * 0.005) # Unit = A
    data['FusedOutput_8Current_spn6087'] = ( enforceMaxV(( (int(msg[28:30], 16)) + ((int(msg[30:32], 16)) << 8 )), 64255)  * 0.005) # Unit = A
    data['FusedOutput_9Current_spn6088'] = ( enforceMaxV(( (int(msg[32:34], 16)) + ((int(msg[34:36], 16)) << 8 )), 64255)  * 0.005) # Unit = A
    data['FusedOutput_10Current_spn6089'] = ( enforceMaxV(( (int(msg[36:38], 16)) + ((int(msg[38:40], 16)) << 8 )), 64255)  * 0.005) # Unit = A
    data['FusedOutput_11Current_spn6090'] = ( enforceMaxV(( (int(msg[40:42], 16)) + ((int(msg[42:44], 16)) << 8 )), 64255)  * 0.005) # Unit = A
    data['FusedOutput_12Current_spn6091'] = ( enforceMaxV(( (int(msg[44:46], 16)) + ((int(msg[46:48], 16)) << 8 )), 64255)  * 0.005) # Unit = A
    data['FusedOutput_13Current_spn6092'] = ( enforceMaxV(( (int(msg[48:50], 16)) + ((int(msg[50:52], 16)) << 8 )), 64255)  * 0.005) # Unit = A
    data['FusedOutput_14Current_spn6093'] = ( enforceMaxV(( (int(msg[52:54], 16)) + ((int(msg[54:56], 16)) << 8 )), 64255)  * 0.005) # Unit = A
    data['FusedOutput_15Current_spn6094'] = ( enforceMaxV(( (int(msg[56:58], 16)) + ((int(msg[58:60], 16)) << 8 )), 64255)  * 0.005) # Unit = A
    data['FusedOutput_16Current_spn6095'] = ( enforceMaxV(( (int(msg[60:62], 16)) + ((int(msg[62:64], 16)) << 8 )), 64255)  * 0.005) # Unit = A
    data['FusedOutput_17Current_spn6096'] = ( enforceMaxV(( (int(msg[64:66], 16)) + ((int(msg[66:68], 16)) << 8 )), 64255)  * 0.005) # Unit = A
    data['FusedOutput_18Current_spn6097'] = ( enforceMaxV(( (int(msg[68:70], 16)) + ((int(msg[70:72], 16)) << 8 )), 64255)  * 0.005) # Unit = A
    data['FusedOutput_19Current_spn6098'] = ( enforceMaxV(( (int(msg[72:74], 16)) + ((int(msg[74:76], 16)) << 8 )), 64255)  * 0.005) # Unit = A
    data['FusedOutput_20Current_spn6099'] = ( enforceMaxV(( (int(msg[76:78], 16)) + ((int(msg[78:80], 16)) << 8 )), 64255)  * 0.005) # Unit = A
    data['FusedOutput_21Current_spn6100'] = ( enforceMaxV(( (int(msg[80:82], 16)) + ((int(msg[82:84], 16)) << 8 )), 64255)  * 0.005) # Unit = A
    data['FusedOutput_22Current_spn6101'] = ( enforceMaxV(( (int(msg[84:86], 16)) + ((int(msg[86:88], 16)) << 8 )), 64255)  * 0.005) # Unit = A
    data['FusedOutput_23Current_spn6102'] = ( enforceMaxV(( (int(msg[88:90], 16)) + ((int(msg[90:92], 16)) << 8 )), 64255)  * 0.005) # Unit = A
    data['FusedOutput_24Current_spn6103'] = ( enforceMaxV(( (int(msg[92:94], 16)) + ((int(msg[94:96], 16)) << 8 )), 64255)  * 0.005) # Unit = A
    data['FusedOutput_25Current_spn6104'] = ( enforceMaxV(( (int(msg[96:98], 16)) + ((int(msg[98:100], 16)) << 8 )), 64255)  * 0.005) # Unit = A
    data['FusedOutput_26Current_spn6105'] = ( enforceMaxV(( (int(msg[100:102], 16)) + ((int(msg[102:104], 16)) << 8 )), 64255)  * 0.005) # Unit = A
    data['FusedOutput_27Current_spn6106'] = ( enforceMaxV(( (int(msg[104:106], 16)) + ((int(msg[106:108], 16)) << 8 )), 64255)  * 0.005) # Unit = A
    data['FusedOutput_28Current_spn6107'] = ( enforceMaxV(( (int(msg[108:110], 16)) + ((int(msg[110:112], 16)) << 8 )), 64255)  * 0.005) # Unit = A
    data['FusedOutput_29Current_spn6108'] = ( enforceMaxV(( (int(msg[112:114], 16)) + ((int(msg[114:116], 16)) << 8 )), 64255)  * 0.005) # Unit = A
    data['FusedOutput_30Current_spn6109'] = ( enforceMaxV(( (int(msg[116:118], 16)) + ((int(msg[118:120], 16)) << 8 )), 64255)  * 0.005) # Unit = A
    data['FusedOutput_31Current_spn6110'] = ( enforceMaxV(( (int(msg[120:122], 16)) + ((int(msg[122:124], 16)) << 8 )), 64255)  * 0.005) # Unit = A
    data['FusedOutput_32Current_spn6111'] = ( enforceMaxV(( (int(msg[124:126], 16)) + ((int(msg[126:128], 16)) << 8 )), 64255)  * 0.005) # Unit = A
    return data

# SPOS
def PGN_64692(msg, data):
    data['SwitchedOutput_4_spn6048'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['SwitchedOutput_3_spn6049'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['SwitchedOutput_2_spn6050'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['SwitchedOutput_1_spn6051'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['SwitchedOutput_8_spn6052'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['SwitchedOutput_7_spn6053'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['SwitchedOutput_6_spn6054'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['SwitchedOutput_5_spn6055'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['SwitchedOutput_12_spn6056'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['SwitchedOutput_11_spn6057'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['SwitchedOutput_10_spn6058'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['SwitchedOutput_9_spn6059'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['SwitchedOutput_16_spn6060'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['SwitchedOutput_15_spn6061'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['SwitchedOutput_14_spn6062'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['SwitchedOutput_13_spn6063'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['SwitchedOutput_20_spn6064'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['SwitchedOutput_19_spn6065'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['SwitchedOutput_18_spn6066'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['SwitchedOutput_17_spn6067'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['SwitchedOutput_24_spn6068'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['SwitchedOutput_23_spn6069'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['SwitchedOutput_22_spn6070'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['SwitchedOutput_21_spn6071'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['SwitchedOutput_28_spn6072'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['SwitchedOutput_27_spn6073'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['SwitchedOutput_26_spn6074'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['SwitchedOutput_25_spn6075'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['SwitchedOutput_32_spn6076'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['SwitchedOutput_31_spn6077'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['SwitchedOutput_30_spn6078'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['SwitchedOutput_29_spn6079'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# FPOS
def PGN_64693(msg, data):
    data['FusedOutput_4_spn6016'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['FusedOutput_3_spn6017'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['FusedOutput_2_spn6018'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['FusedOutput_1_spn6019'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['FusedOutput_8_spn6020'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['FusedOutput_7_spn6021'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['FusedOutput_6_spn6022'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['FusedOutput_5_spn6023'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['FusedOutput_12_spn6024'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['FusedOutput_11_spn6025'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['FusedOutput_10_spn6026'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['FusedOutput_9_spn6027'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['FusedOutput_16_spn6028'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['FusedOutput_15_spn6029'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['FusedOutput_14_spn6030'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['FusedOutput_13_spn6031'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['FusedOutput_20_spn6032'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['FusedOutput_19_spn6033'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['FusedOutput_18_spn6034'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['FusedOutput_17_spn6035'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['FusedOutput_24_spn6036'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['FusedOutput_23_spn6037'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['FusedOutput_22_spn6038'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['FusedOutput_21_spn6039'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['FusedOutput_28_spn6040'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['FusedOutput_27_spn6041'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['FusedOutput_26_spn6042'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['FusedOutput_25_spn6043'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['FusedOutput_32_spn6044'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['FusedOutput_31_spn6045'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['FusedOutput_30_spn6046'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['FusedOutput_29_spn6047'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# VEP5
def PGN_64694(msg, data):
    data['SLIBatteryPackStateofCharge_spn5981'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    data['SLIBatteryPackCapacity_spn5982'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 1.0) # Unit = Ah
    data['SLIBatteryPackHealth_spn5983'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.5) # Unit = %
    data['SLICrankingPredictedMinimumBatteryVoltage_spn7497'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 0.2) # Unit = V
    return data

# HSS2
def PGN_64695(msg, data):
    data['HybridBatteryPackRemainingCharge_spn5464'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    data['HybridSystemEngineStop-StartRemainingPercentage_spn8558'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 0.4) # Unit = %
    data['HybridPropulsionModeMaximumSpeedSetting_spn9708'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) # Unit = km/h
    data['HybridPropulsionModeRemainingDistance_spn9709'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.03125) # Unit = km
    return data

# AT2S2
def PGN_64696(msg, data):
    data['Aftertreatment2DieselParticulateFilterTimetoNextActiveRegeneration_spn5979'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 1.0) # Unit = s
    data['Aftertreatment2SCRSystemTimeSinceLastSystemCleaningEvent_spn6948'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 ) + ((int(msg[12:14], 16)) << 16 ) + ((int(msg[14:16], 16)) << 24 )), 4211081215)  * 1.0) # Unit = s
    return data

# AT1S2
def PGN_64697(msg, data):
    data['Aftertreatment1DieselParticulateFilterTimetoNextActiveRegeneration_spn5978'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 1.0) # Unit = s
    data['Aftertreatment1SCRSystemTimeSinceLastSystemCleaningEvent_spn6941'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 ) + ((int(msg[12:14], 16)) << 16 ) + ((int(msg[14:16], 16)) << 24 )), 4211081215)  * 1.0) # Unit = s
    return data

# A2ECMI
def PGN_64698(msg, data):
    data['Aftertreatment2DieselExhaustFluidControlModule1RelayControl_spn5967'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment2DieselExhaustFluidControlModule1PowerSupply1_spn5968'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment2DieselExhaustFluidControlModule1PowerSupply2_spn6310'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment2DieselExhaustFluidControlModuleCircuitBreaker_spn8483'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment2DieselExhaustFluidControlModule2RelayControl_spn7532'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment2DieselExhaustFluidControlModule2PowerSupply1_spn7533'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment2DieselExhaustFluidControlModule2PowerSupply2_spn7534'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    return data

# A1ECMI
def PGN_64699(msg, data):
    data['Aftertreatment1DieselExhaustFluidControlModule1RelayControl_spn5965'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment1DieselExhaustFluidControlModule1PowerSupply1_spn5966'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment1DieselExhaustFluidControlModule1PowerSupply2_spn6309'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment1DieselExhaustFluidControlModuleCircuitBreaker_spn7417'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment1DieselExhaustFluidControlModule2RelayControl_spn7521'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment1DieselExhaustFluidControlModule2PowerSupply1_spn7522'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment1DieselExhaustFluidControlModule2PowerSupply2_spn7523'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    return data

# A2SCRSI2
def PGN_64700(msg, data):
    data['Aftertreatment2TotalDieselExhaustFluidUsed_spn5964'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 0.5) # Unit = l
    return data

# A1SCRSI2
def PGN_64701(msg, data):
    data['Aftertreatment1TotalDieselExhaustFluidUsed_spn5963'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 0.5) # Unit = l
    data['AftertreatmentTripDieselExhaustFluid_spn6563'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 ) + ((int(msg[12:14], 16)) << 16 ) + ((int(msg[14:16], 16)) << 24 )), 4211081215)  * 0.05) # Unit = l
    return data

# ETC9
def PGN_64702(msg, data):
    data['DualClutchTransmissionInputShaft1Speed_spn5960'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.125) # Unit = rpm
    data['DualClutchTransmissionInputShaft2Speed_spn5961'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.125) # Unit = rpm
    data['DualClutchTransmissionSelectedPre-selectionGear_spn5957'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) - 125.0 # Unit = gear value
    data['DualClutchTransmissionCurrentPre-selectionGear_spn5958'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 1.0) - 125.0 # Unit = gear value
    return data

# ETC10
def PGN_64703(msg, data):
    data['TransmissionClutch1ActuatorPercent_spn5944'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 0.4) # Unit = %
    data['TransmissionClutch2ActuatorPercent_spn5945'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 0.4) # Unit = %
    data['TransmissionHydraulicPumpActuator1Percent_spn5946'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 0.4) # Unit = %
    data['TransmissionShiftActuator1Percent_spn5947'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 0.4) # Unit = %
    data['TransmissionShiftActuator2Percent_spn5948'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.4) # Unit = %
    data['TransmissionClutch1CoolingActuatorStatus_spn5949'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['TransmissionClutch2CoolingActuatorStatus_spn5950'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['TransmissionShiftRail1ActuatorStatus_spn5951'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['TransmissionShiftRail2ActuatorStatus_spn5952'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['TransmissionShiftRail3ActuatorStatus_spn5953'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['TransmissionShiftRail4ActuatorStatus_spn5954'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['TransmissionShiftRail5ActuatorStatus_spn5955'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['TransmissionShiftRail6ActuatorStatus_spn5956'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['TransmissionHydraulicPumpActuator2Percent_spn6582'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 0.4) # Unit = %
    return data

# ETC11
def PGN_64704(msg, data):
    data['TransmissionShiftRail1Position_spn4218'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 0.4) # Unit = %
    data['TransmissionShiftRail2Position_spn4219'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 0.4) # Unit = %
    data['TransmissionShiftRail3Position_spn4220'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 0.4) # Unit = %
    data['TransmissionShiftRail4Position_spn5941'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 0.4) # Unit = %
    data['TransmissionShiftRail5Position_spn5942'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.4) # Unit = %
    data['TransmissionShiftRail6Position_spn5943'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 0.4) # Unit = %
    return data

# TRF3
def PGN_64705(msg, data):
    data['TransmissionClutch2Pressure_spn5937'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 16.0) # Unit = kPa
    data['TransmissionOilTransmissionCoolerOutletTemperature_spn5938'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    return data

# HSS1
def PGN_64706(msg, data):
    data['HybridSystemWarningIndicator_spn5872'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HybridSystemOverheatIndicator_spn5873'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HybridSystemStopIndicator_spn5874'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HybridSystemOBDRelatedDTCStatus_spn6810'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['PropulsionSystemActive_spn7315'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HybridSystemEngineAssistStatus_spn7418'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HybridSystemServiceIndicator_spn7448'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HybridSystemMotorOverspeedIndicator_spn7449'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['HybridSystemMotorOverspeedAudibleAlarm_spn7450'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HybridSystemElectricAlternatorIndicator_spn7451'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HybridSystemRegenerativeBrakingIndicator_spn7452'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HybridSystemInitializationIndicator_spn7453'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['HybridSystemHighVoltageExposureIndicator_spn7454'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['StoredEnergySourceOnlyModeAllowed_spn7893'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['StoredEnergySourceIncreasingModeAllowed_spn7894'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['StoredEnergySourceLevel_spn7895'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.4) # Unit = %
    data['HybridPropulsionModeStatus_spn7896'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['HybridPropulsionModeTransitionStatus_spn7897'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['ExternalEnergySourceConnectionStatus_spn7898'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['HybridSystemPropulsionDisableStatus_spn8267'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    return data

# GFI4
def PGN_64707(msg, data):
    data['SupplyGasMethanePercentage_spn5867'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    return data

# A2SCREGT2
def PGN_64708(msg, data):
    data['Aftertreatment2SCRIntermediateTemperature_spn5864'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['Aftertreatment2SCRIntermediateTemperaturePreliminaryFMI_spn5865'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    return data

# A1SCREGT2
def PGN_64709(msg, data):
    data['Aftertreatment1SCRIntermediateTemperature_spn5862'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['Aftertreatment1SCRIntermediateTemperaturePreliminaryFMI_spn5863'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    return data

# EEC13
def PGN_64712(msg, data):
    data['FeedbackEngineFuelingState_spn5794'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EngineFuelingInhibitAllowed_spn5795'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['EngineFuelingInhibitPreventedReason_spn5866'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['SourceAddressofControllingDeviceforFuelingState_spn6307'] = ( enforceMaxV(( (int(msg[2:4], 16))), 255)  * 1.0) # Unit = SA
    data['EngineDualFuelMode_spn6791'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EngineFuelingInhibitPreventedReasonExtension_spn8145'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11111100) >> 2)), 63)  * 1.0) # Unit = bit
    data['EngineGasSubstitutionFuelPercentage_spn6333'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 0.5) # Unit = %
    data['EngineFuelingInhibitRequestCount_spn6896'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['EngineFuelingDesiredRequestCount_spn6897'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['EngineProtectionDerateOverrideStatus_spn9174'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['RemainingEngineMotoringTime_spn12857'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b11111100) >> 2)), 58)  * 1.0) # Unit = s
    data['EnginePerformanceBiasLevel_spn10297'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 0.4) # Unit = %
    data['MinimumEngineMotoringSpeed_spn12858'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 10.0) # Unit = rpm
    return data

# EF/TVI2
def PGN_64713(msg, data):
    data['EngineThrottleValve1Temperature_spn5783'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['EngineThrottleValve2Temperature_spn5784'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['EngineFuelValve1Temperature_spn5785'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['EngineFuelValve2Temperature_spn5786'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['EngineTurbochargerWastegateActuator2Temperature_spn5787'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['EngineFuelRackFuelSupplyTemperature_spn7314'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['EngineThrottleValve1Position2_spn6650'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 0.4) # Unit = %
    return data

# EEGR2A
def PGN_64714(msg, data):
    data['EngineExhaustGasRecirculation2Actuator1PreliminaryFMI_spn5773'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['EngineExhaustGasRecirculation2Actuator1TemperatureStatus_spn5774'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11100000) >> 5)), 7)  * 1.0) # Unit = bit
    data['EngineExhaustGasRecirculation2Actuator1Temperature_spn5775'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['EngineExhaustGasRecirculation2Actuator1DesiredPosition_spn5776'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 0.4) # Unit = %
    data['EngineExhaustGasRecirculation2Actuator2PreliminaryFMI_spn5777'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['EngineExhaustGasRecirculation2Actuator2TemperatureStatus_spn5778'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11100000) >> 5)), 7)  * 1.0) # Unit = bit
    data['EngineExhaustGasRecirculation2Actuator2Temperature_spn5779'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['EngineExhaustGasRecirculation2Actuator2DesiredPosition_spn5780'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 0.4) # Unit = %
    data['EngineExhaustGasRecirculation2Actuator1OperationStatus_spn5781'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['EngineExhaustGasRecirculation2Actuator2OperationStatus_spn5782'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    return data

# EEGR1A
def PGN_64715(msg, data):
    data['EngineExhaustGasRecirculation1Actuator1PreliminaryFMI_spn5763'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['EngineExhaustGasRecirculation1Actuator1TemperatureStatus_spn5764'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11100000) >> 5)), 7)  * 1.0) # Unit = bit
    data['EngineExhaustGasRecirculation1Actuator1Temperature_spn5765'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['EngineExhaustGasRecirculation1Actuator1DesiredPosition_spn5766'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 0.4) # Unit = %
    data['EngineExhaustGasRecirculation1Actuator2PreliminaryFMI_spn5767'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['EngineExhaustGasRecirculation1Actuator2TemperatureStatus_spn5768'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11100000) >> 5)), 7)  * 1.0) # Unit = bit
    data['EngineExhaustGasRecirculation1Actuator2Temperature_spn5769'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['EngineExhaustGasRecirculation1Actuator2DesiredPosition_spn5770'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 0.4) # Unit = %
    data['EngineExhaustGasRecirculation1Actuator1OperationStatus_spn5771'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['EngineExhaustGasRecirculation1Actuator2OperationStatus_spn5772'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    return data

# EEC12
def PGN_64716(msg, data):
    data['EngineExhaust1GasSensor1PowerSupply_spn5758'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment1Outlet1GasSensorPowerSupply_spn5759'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['EngineExhaust2GasSensor1PowerSupply_spn5760'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment2Outlet1GasSensorPowerSupply_spn5761'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['EngineExhaust1GasSensor2PowerSupply_spn8146'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment1Outlet2GasSensorPowerSupply_spn8147'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    return data

# NSSR
def PGN_64719(msg, data):
    data['Aftertreatment1OutletNOxSensorSelf-diagnosisTrigger_spn5709'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['EngineExhaust1NOxSensorSelf-diagnosisTrigger_spn5710'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['Aftertreatment2OutletNOxSensorSelf-diagnosisTrigger_spn5711'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['EngineExhaust2NOxSensorSelf-diagnosisTrigger_spn5712'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    return data

# EPSI
def PGN_64720(msg, data):
    data['Aftertreatment1ParticulateSensor_spn5835'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.0125) # Unit = mg/mÂ³
    data['Aftertreatment2ParticulateSensor_spn5836'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.0125) # Unit = mg/mÂ³
    data['Aftertreatment1ParticulateSensorCurrent_spn7393'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64259)  * 0.003906) # Unit = ÂµA
    return data

# AT1P1I
def PGN_64725(msg, data):
    data['Aftertreatment1DieselExhaustFluidPumpHeater_spn5706'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 0.4) # Unit = %
    data['Aftertreatment1DieselExhaustFluidPump2MotorSpeed_spn7461'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 )), 64255)  * 0.5) # Unit = rpm
    data['Aftertreatment1DieselExhaustFluidDosingUnit1HeaterRelay_spn5746'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment1DieselExhaustFluidPumpPowerSupply_spn8474'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    return data

# AT1DPF2S5
def PGN_64726(msg, data):
    data['Aftertreatment1DieselParticulateFilter2SootSensorAnalysisFrequency3_spn5652'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.1) # Unit = MHz
    data['Aftertreatment1DieselParticulateFilter2SootSensorFrequency3SootSignal_spn5653'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    data['Aftertreatment1DieselParticulateFilter2SootSensorAnalysisFrequency4_spn5654'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.1) # Unit = MHz
    data['Aftertreatment1DieselParticulateFilter2SootSensorFrequency4SootSignal_spn5655'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    return data

# AT1DPF2S4
def PGN_64727(msg, data):
    data['Aftertreatment1DieselParticulateFilter2SootSensorAnalysisFrequency1_spn5648'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.1) # Unit = MHz
    data['Aftertreatment1DieselParticulateFilter2SootSensorFrequency1SootSignal_spn5649'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    data['Aftertreatment1DieselParticulateFilter2SootSensorAnalysisFrequency2_spn5650'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.1) # Unit = MHz
    data['Aftertreatment1DieselParticulateFilter2SootSensorFrequency2SootSignal_spn5651'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    return data

# AT1DPF2S3
def PGN_64728(msg, data):
    data['Aftertreatment1DieselParticulateFilter2SootSensorAnalysisRequestFrequency1_spn5644'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.1) # Unit = MHz
    data['Aftertreatment1DieselParticulateFilter2SootSensorAnalysisRequestFrequency2_spn5645'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.1) # Unit = MHz
    data['Aftertreatment1DieselParticulateFilter2SootSensorAnalysisRequestFrequency3_spn5646'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.1) # Unit = MHz
    data['Aftertreatment1DieselParticulateFilter2SootSensorAnalysisRequestFrequency4_spn5647'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.1) # Unit = MHz
    return data

# AT1DPF1S5
def PGN_64729(msg, data):
    data['Aftertreatment1DieselParticulateFilter1SootSensorAnalysisFrequency3_spn5640'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.1) # Unit = MHz
    data['Aftertreatment1DieselParticulateFilter1SootSensorFrequency3SootSignal_spn5641'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    data['Aftertreatment1DieselParticulateFilter1SootSensorAnalysisFrequency4_spn5642'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.1) # Unit = MHz
    data['Aftertreatment1DieselParticulateFilter1SootSensorFrequency4SootSignal_spn5643'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    return data

# AT1DPF1S4
def PGN_64730(msg, data):
    data['Aftertreatment1DieselParticulateFilter1SootSensorAnalysisFrequency1_spn5636'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.1) # Unit = MHz
    data['Aftertreatment1DieselParticulateFilter1SootSensorFrequency1SootSignal_spn5637'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    data['Aftertreatment1DieselParticulateFilter1SootSensorAnalysisFrequency2_spn5638'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.1) # Unit = MHz
    data['Aftertreatment1DieselParticulateFilter1SootSensorFrequency2SootSignal_spn5639'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    return data

# AT1DPF1S3
def PGN_64731(msg, data):
    data['Aftertreatment1DieselParticulateFilter1SootSensorAnalysisRequestFrequency1_spn5632'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.1) # Unit = MHz
    data['Aftertreatment1DieselParticulateFilter1SootSensorAnalysisRequestFrequency2_spn5633'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.1) # Unit = MHz
    data['Aftertreatment1DieselParticulateFilter1SootSensorAnalysisRequestFrequency3_spn5634'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.1) # Unit = MHz
    data['Aftertreatment1DieselParticulateFilter1SootSensorAnalysisRequestFrequency4_spn5635'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.1) # Unit = MHz
    return data

# CCVS3
def PGN_64732(msg, data):
    data['AdaptiveCruiseControlReadinessStatus_spn5606'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['CruiseControlSystemCommandState_spn5607'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00011100) >> 2)), 7)  * 1.0) # Unit = bit
    data['PredictiveCruiseControlSetSpeedOffsetStatus_spn7318'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b01100000) >> 5)), 3)  * 1.0) # Unit = bit
    data['SourceAddressofControllingDeviceforDisablingCruiseControl_spn5608'] = ( enforceMaxV(( (int(msg[2:4], 16))), 255)  * 1.0) # Unit = SA
    data['SourceAddressofControllingDeviceforPausingCruiseControl_spn5609'] = ( enforceMaxV(( (int(msg[4:6], 16))), 255)  * 1.0) # Unit = SA
    data['AEBSreadinessstate_spn6208'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['CruiseControlDriverCancellationStatus_spn7836'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['CruiseControlSetSpeed(HighResolution)_spn6809'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64259)  * 0.003906) # Unit = km/h
    data['CruiseControlSpeed_spn7319'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64259)  * 0.003906) # Unit = km/h
    return data

# AT2AC3
def PGN_64733(msg, data):
    data['Aftertreatment2SecondaryAirAbsolutePressure_spn5590'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    return data

# AT1AC3
def PGN_64734(msg, data):
    data['Aftertreatment1SecondaryAirAbsolutePressure_spn5589'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    data['OperatorInducementOverrideRenewalRequired_spn10154'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    return data

# EFL/P12
def PGN_64735(msg, data):
    data['EngineFuelDeliveryAbsolutePressure_spn5578'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 4.0) # Unit = kPa
    data['EngineFilteredFuelDeliveryPressure_spn5579'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 4.0) # Unit = kPa
    data['EngineFilteredFuelDeliveryAbsolutePressure_spn5580'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 4.0) # Unit = kPa
    data['EngineFuelFilterDegradation_spn5584'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) # Unit = %
    data['EngineFuelReturnPressure_spn6816'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.64) - 7.0 # Unit = kPa
    data['EngineThrottleValve2DifferentialPressure_spn7595'] = ( enforceMaxV(( (int(msg[10:12], 16)) + ((int(msg[12:14], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    data['EngineFuelSupplyPumpIntakeAbsolutePressure(ExtendedRange)_spn7472'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 5.0) # Unit = kPa
    return data

# DPFC2
def PGN_64736(msg, data):
    data['Aftertreatment1DieselParticulateFilterIntakeTemperatureSetPoint_spn5501'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineUnburnedFuelPercentage_spn5502'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    data['Aftertreatment1FuelMassRate_spn5503'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.05) # Unit = g/min
    data['Aftertreatment2FuelMassRate_spn5834'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.05) # Unit = g/min
    return data

# LFE2
def PGN_64737(msg, data):
    data['EngineFuelRate(HighResolution)_spn1600'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 0.001) # Unit = l/h
    data['EngineDieselFuelDemandRate_spn7596'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.05) # Unit = l/h
    return data

# SFS
def PGN_64738(msg, data):
    data['SupplementalFanEnableStatus_spn5556'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['SupplementalFanDirectionStatus_spn5557'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['SupplementalFanVelocityStatus_spn5558'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['SupplementalFanControllerTemperatureStatus_spn5559'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000111)), 7)  * 1.0) # Unit = bit
    data['SupplementalFanDriveStatus_spn5560'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b01111000) >> 3)), 15)  * 1.0) # Unit = bit
    data['SupplementalFanControllerECUTemperature_spn5561'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['SupplementalFanSpeed_spn5562'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 0.5) # Unit = rpm
    data['SupplementalFanCurrent_spn5563'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 1.0) - 125.0 # Unit = A
    data['SupplementalFanPower_spn5564'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.5) # Unit = W
    return data

# EBCC
def PGN_64739(msg, data):
    data['EngineTurbocharger1TurbineOutletPressure_spn5541'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 2.0) # Unit = kPa
    data['EngineTurbocharger1TurbineDesiredOutletPressure_spn5542'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 2.0) # Unit = kPa
    data['EngineExhaustBrakeActuatorCommand_spn5543'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 0.4) # Unit = %
    data['EngineTurbocharger2TurbineOutletPressure_spn5544'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 2.0) # Unit = kPa
    data['EngineTurbocharger2TurbineDesiredOutletPressure_spn5545'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 2.0) # Unit = kPa
    return data

# EFP
def PGN_64740(msg, data):
    data['EngineFuelDynamicViscosity_spn5537'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.015625) # Unit = cP
    data['EngineFuelDensity_spn5538'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64253)  * 3.052e-05) # Unit = g/cc
    data['EngineFuelDielectricity(HighResolution)_spn5539'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64295)  * 0.000122) # Unit = 
    data['EngineFuel1Temperature1(HighResolution)_spn5540'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    return data

# HOP
def PGN_64741(msg, data):
    data['HydraulicOilDynamicViscosity_spn5533'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.015625) # Unit = cP
    data['HydraulicOilDensity_spn5534'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64253)  * 3.052e-05) # Unit = g/cc
    data['HydraulicOilRelativeDielectricity(HighResolution)_spn5535'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64295)  * 0.000122) # Unit = 
    data['HydraulicOilTemperature(HighResolution)_spn5536'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    return data

# VLS2
def PGN_64742(msg, data):
    data['LubricationCycleModeLockStatus_spn5515'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['LubricationCycleModeStatus_spn5516'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00011100) >> 2)), 7)  * 1.0) # Unit = bit
    data['LubricationOperationModeStatus_spn5517'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11100000) >> 5)), 7)  * 1.0) # Unit = bit
    data['LubricationPumpEnableStatus_spn5518'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['LubricationReservoirLevel_spn5519'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['LubricationTimingCycleStatus_spn5520'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    return data

# EC3
def PGN_64743(msg, data):
    data['EngineFrictionPercentTorqueAtIdlePoint1_spn5471'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) - 125.0 # Unit = %
    data['EngineFrictionPercentTorquePoint2_spn5472'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) - 125.0 # Unit = %
    data['EngineFrictionPercentTorquePoint3_spn5473'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) - 125.0 # Unit = %
    data['EngineFrictionPercentTorquePoint4_spn5474'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) - 125.0 # Unit = %
    data['EngineFrictionPercentTorquePoint5_spn5475'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) - 125.0 # Unit = %
    data['EngineFrictionPercentTorquePoint6_spn5476'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 1.0) - 125.0 # Unit = %
    data['EngineFrictionPercentTorquePoint7_spn5477'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 1.0) - 125.0 # Unit = %
    return data

# IVAC
def PGN_64744(msg, data):
    data['IntakeValveActuationSystemOilPressure1SolenoidControl_spn5499'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['IntakeValveActuationSystemOilPressure2SolenoidControl_spn5500'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    return data

# ARMSWIMC
def PGN_64745(msg, data):
    data['Armrest1Switch1_spn1503'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Armrest1Switch2_spn5492'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Armrest2Switch1_spn5493'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Armrest2Switch2_spn5494'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# AFT2NAI
def PGN_64747(msg, data):
    data['Aftertreatment2NOxAdsorberRegenerationStatus_spn5460'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment2NOxAdsorberDesulfationStatus_spn5462'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    return data

# AFT1NAI
def PGN_64748(msg, data):
    data['Aftertreatment1NOxAdsorberRegenerationStatus_spn5459'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment1NOxAdsorberDesulfationStatus_spn5461'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    return data

# AT2WUDOC
def PGN_64749(msg, data):
    data['Aftertreatment2WarmUpDieselOxidationCatalystIntakeTemperature_spn5315'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['Aftertreatment2WarmUpDieselOxidationCatalystOutletTemperature_spn5316'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    return data

# LLRE
def PGN_64750(msg, data):
    data['BladeElevationDeviation-Left_spn5410'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 1.0) - 32000.0 # Unit = mm
    data['BladeElevationDeviation-Right_spn5411'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 1.0) - 32000.0 # Unit = mm
    data['BladeReferenceElevationOffset-Left_spn5412'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 1.0) - 32000.0 # Unit = mm
    data['BladeReferenceElevationOffset-Right_spn5413'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 1.0) - 32000.0 # Unit = mm
    return data

# EFL/P11
def PGN_64751(msg, data):
    data['EngineExhaustGasRecirculation1IntakeAbsolutePressure_spn5430'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    data['EngineExhaustGasRecirculation1OutletAbsolutePressure(HighResolution)_spn5431'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    data['EngineOilPressure(HighResolution/ExtendedRange)_spn7468'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    data['EngineFuelDeliveryPressure(HighResolution/ExtendedRange)_spn7469'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    return data

# EFS2
def PGN_64752(msg, data):
    data['EngineFuelFilter(SuctionSide)IntakeAbsolutePressure_spn5417'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 2.0) # Unit = kPa
    data['EngineFuelFilter(SuctionSide)Degradation_spn6716'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) # Unit = %
    data['FuelTankTransferPump_spn4010'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['FuelTankTransferPumpPressure_spn7395'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    data['EngineFuelPumpIntakeOilPressure_spn9648'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 4.0) # Unit = kPa
    return data

# ETWAI
def PGN_64753(msg, data):
    data['EngineTurbochargerWastegateActuator2PreliminaryFMI_spn5384'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['EngineTurbochargerWastegateActuator2TemperatureStatus_spn5385'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11100000) >> 5)), 7)  * 1.0) # Unit = bit
    data['EngineTurbochargerWastegateActuator1OperationStatus_spn5451'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['EngineTurbochargerWastegateActuator2OperationStatus_spn5452'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['EngineExhaustBank1PressureRegulatorPosition_spn5625'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 0.4) # Unit = %
    data['EngineExhaustPressureRegulatorPreliminaryFMI_spn5626'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['EngineExhaustPressureRegulatorTemperatureStatus_spn5627'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11100000) >> 5)), 7)  * 1.0) # Unit = bit
    data['EngineExhaustPressureRegulatorControlOperationStatus_spn5628'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['EngineTurbochargerWastegateActuator1Temperature_spn5788'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['EngineExhaustPressureActuator1DesiredPosition_spn5789'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 0.4) # Unit = %
    data['EngineExhaustPressureActuator1Temperature_spn5790'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    return data

# EFTVI1
def PGN_64754(msg, data):
    data['EngineDesiredThrottleValve1Position_spn5374'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 0.4) # Unit = %
    data['EngineThrottleValve1PreliminaryFMI_spn5375'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['EngineThrottleValve1TemperatureStatus_spn5376'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11100000) >> 5)), 7)  * 1.0) # Unit = bit
    data['EngineDesiredThrottleValve2Position_spn5377'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 0.4) # Unit = %
    data['EngineThrottleValve2PreliminaryFMI_spn5378'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['EngineThrottleValve2Temperaturestatus_spn5379'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11100000) >> 5)), 7)  * 1.0) # Unit = bit
    data['EngineFuelValve1PreliminaryFMI_spn5380'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['EngineFuelValve1TemperatureStatus_spn5381'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11100000) >> 5)), 7)  * 1.0) # Unit = bit
    data['EngineFuelValve2PreliminaryFMI_spn5382'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['EngineFuelValve2TemperatureStatus_spn5383'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b11100000) >> 5)), 7)  * 1.0) # Unit = bit
    data['EngineThrottleValve1OperationStatus_spn5445'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['EngineThrottleValve2OperationStatus_spn5446'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['EngineFuelValve1OperationStatus_spn5447'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['EngineFuelValve2OperationStatus_spn5448'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    return data

# ETCBI
def PGN_64755(msg, data):
    data['EngineTurbochargerCompressorBypassActuator2Position_spn5388'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 0.4) # Unit = %
    data['EngineTurbochargerCompressorBypassActuator2DesiredPosition_spn5389'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 0.4) # Unit = %
    data['EngineTurbochargercompressorBypassActuator2PreliminaryFMI_spn5390'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['EngineTurbochargerCompressorBypassActuator2TemperatureStatus_spn5391'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11100000) >> 5)), 7)  * 1.0) # Unit = bit
    data['EngineTurbochargerCompressorBypassActuator1OperationStatus_spn5449'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['EngineTurbochargerCompressorBypassActuator2OperationStatus_spn5450'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['EngineTurbochargerCompressorBypassActuator1Temperature_spn5791'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['EngineTurbochargerCompressorBypassActuator2Temperature_spn5792'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    return data

# CAC2
def PGN_64756(msg, data):
    data['EngineChargeAirCooler2IntakeTemperature_spn5289'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineChargeAirCooler2OutletTemperature_spn5290'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineChargeAirCooler2AmbientAirTemperature_spn5291'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineChargeAirCooler2Efficiency_spn5292'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 0.4) # Unit = %
    return data

# CAC2P
def PGN_64757(msg, data):
    data['EngineChargeAirCooler2PrecoolerIntakeTemperature_spn5286'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineChargeAirCooler2PrecoolerOutletTemperature_spn5287'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineChargeAirCooler2PrecoolerEfficiency_spn5288'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.4) # Unit = %
    return data

# CAC1
def PGN_64758(msg, data):
    data['EngineChargeAirCooler1IntakeTemperature_spn5283'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineChargeAirCooler1AmbientAirTemperature_spn5284'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineChargeAirCooler1Efficiency_spn5285'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.4) # Unit = %
    return data

# CAC1P
def PGN_64759(msg, data):
    data['EngineChargeAirCooler1PrecoolerIntakeTemperature_spn5280'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineChargeAirCooler1PrecoolerOutletTemperature_spn5281'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineChargeAirCooler1PrecoolerEfficiency_spn5282'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.4) # Unit = %
    return data

# DPF2S2
def PGN_64760(msg, data):
    data['Aftertreatment2DieselParticulateFilterSootSignalStandardDeviation_spn5269'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    data['Aftertreatment2DieselParticulateFilterSootSignalMaximum_spn5270'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    data['Aftertreatment2DieselParticulateFilterSootSignalMinimum_spn5271'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    return data

# DPF1S2
def PGN_64761(msg, data):
    data['Aftertreatment1DieselParticulateFilterSootSignalStandardDeviation_spn5266'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    data['Aftertreatment1DieselParticulateFilterSootSignalMaximum_spn5267'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    data['Aftertreatment1DieselParticulateFilterSootSignalMinimum_spn5268'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    return data

# EEC11
def PGN_64762(msg, data):
    data['EngineExhaustGasRecirculation2Valve1Control_spn5264'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    data['EngineExhaustGasRecirculation2Valve2Control_spn5265'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    data['EngineExhaustGasRecirculation2Valve1PositionError_spn5831'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.004) - 125.0 # Unit = %
    data['EngineExhaustGasRecirculation2Valve2PositionError_spn5832'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.004) - 125.0 # Unit = %
    return data

# EMAP
def PGN_64763(msg, data):
    data['EngineExhaustManifoldBank1FlowBalanceValveActuatorPosition_spn5277'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    data['EngineExhaustManifoldBank2FlowBalanceValveActuatorPosition_spn5279'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    return data

# EMAC
def PGN_64764(msg, data):
    data['EngineExhaustManifoldBank1FlowBalanceValveActuatorControl_spn5276'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    data['EngineExhaustManifoldBank2FlowBalanceValveActuatorControl_spn5278'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    return data

# EEC9
def PGN_64765(msg, data):
    data['EngineExhaustGasRecirculation2ValvePosition_spn5262'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    data['EngineExhaustGasRecirculation2Valve2Position_spn5263'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    data['CommandedEngineFuelRailPressure_spn5313'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.00390625) # Unit = MPa
    data['CommandedEngineFuelInjectionControlPressure_spn5314'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.00390625) # Unit = MPa
    return data

# EEC10
def PGN_64766(msg, data):
    data['EngineExhaustGasRecirculation2CoolerIntakeTemperature_spn5258'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineExhaustGasRecirculation2CoolerIntakeGasAbsolutePressure_spn5259'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.5) # Unit = kPa
    data['EngineExhaustGasRecirculation2CoolerEfficiency_spn5260'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.4) # Unit = %
    data['EngineExhaustGasRecirculation2CoolerBypassActuatorPosition_spn5261'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 0.4) # Unit = %
    data['EngineExhaustGasRecirculation2CoolerIntakePressure_spn9380'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 5.0) # Unit = kPa
    return data

# ET5
def PGN_64767(msg, data):
    data['EngineExhaustGasRecirculation2Temperature_spn5255'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineExhaustGasRecirculation2MixerIntakeTemperature_spn5256'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    return data

# EFL/P10
def PGN_64768(msg, data):
    data['EngineExhaustGasRecirculation2DifferentialPressure_spn5252'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64259)  * 0.007812) - 250.0 # Unit = kPa
    data['EngineExhaustGasRecirculation2IntakePressure_spn5253'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 2.0) # Unit = kPa
    data['EngineExhaustGasRecirculation2OutletAbsolutePressure_spn5254'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    data['EngineExhaustGasRecirculation2IntakeAbsolutePressure_spn5429'] = ( enforceMaxV(( (int(msg[10:12], 16)) + ((int(msg[12:14], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    data['EngineCoolantPressure2_spn5708'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 2.0) # Unit = kPa
    return data

# LVDS
def PGN_64769(msg, data):
    data['LowVoltageDisconnectManualDisconnectState_spn5141'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['LowVoltageDisconnectManualConnectState_spn5142'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['LowVoltageDisconnectCurrentOperatingMode_spn5143'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['LowVoltageDisconnectOutput_3State_spn5144'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['LowVoltageDisconnectOutput_2State_spn5145'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['LowVoltageDisconnectOutput_1State_spn5146'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['LowVoltageDisconnectVoutOutputState_spn5147'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['LowVoltageDisconnectTemperature_spn5148'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    return data

# DLCD2
def PGN_64772(msg, data):
    data['VehicleBatteryVoltageLowLampData_spn5104'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['VehicleFuelLevelLowLampData_spn5105'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['VehicleAirPressureLowLampData_spn5106'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['VehicleHVACRecirculationLampData_spn5107'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['VehicleBatteryChargingLampData_spn5108'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HillHolderLampData_spn1848'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['VehicleLimitedPerformanceModeLampData_spn10296'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['PrimaryAirPressureLowLampData_spn13121'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['SecondaryAirPressureLowLampData_spn13122'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['OptionalLamp1Data_spn13123'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['OptionalLamp2Data_spn13124'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['OptionalLamp3Data_spn13125'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['OptionalLamp4Data_spn13126'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['OptionalLamp5Data_spn13127'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['OptionalLamp6Data_spn13128'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    return data

# DLCD1
def PGN_64773(msg, data):
    data['EngineProtectLampData_spn5093'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EngineAmberWarningLampData_spn5094'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['EngineRedStopLampData_spn5095'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['OBDMalfunctionIndicatorLampData_spn5096'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['EngineBrakeActiveLampData_spn5097'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['CompressionBrakeEnableSwitchIndicatorLampData_spn5098'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['EngineOilPressureLowLampData_spn5099'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['EngineCoolantTemperatureHighLampData_spn5100'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['EngineCoolantLevelLowLampData_spn5101'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EngineIdleManagementActiveLampData_spn5102'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['EngineAirFilterRestrictionLampData_spn5103'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['EngineFuelFilterRestrictedLampData_spn5470'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['EngineControlModule1ReadyforUseLampData_spn6202'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EngineControlModule2ReadyforUseLampData_spn6203'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['EngineControlModule3ReadyforUseLampData_spn6204'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['EngineSpeedHighLampData_spn6711'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['EngineSpeedVeryHighLampData_spn6712'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['VehicleAccelerationRateLimitLampData_spn6900'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['EngineStop-StartAutomaticStopActiveLampData_spn9680'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['EngineStop-StartAutomaticStartFailedLampData_spn9681'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EngineStop-StartEnabledLampData_spn9682'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['EngineOilTemperatureHighLampData_spn13118'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['EngineFuelTemperatureHighLampData_spn13119'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['EngineIntercoolerTemperatureHighLampData_spn13120'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EngineWaitToStartLampData_spn5416'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# DLCC2
def PGN_64774(msg, data):
    data['VehicleBatteryVoltageLowLampCommand_spn5087'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['VehicleFuelLevelLowLampCommand_spn5088'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['VehicleAirPressureLowLampCommand_spn5089'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['VehicleHVACRecirculationLampCommand_spn5090'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['VehicleBatteryChargingLampCommand_spn5091'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HillHolderLampCommand_spn1847'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['VehicleLimitedPerformanceModeLampCommand_spn10295'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['PrimaryAirPressureLowLampCommand_spn13108'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['SecondaryAirPressureLowLampCommand_spn13109'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['OptionalLamp1Command_spn13110'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['OptionalLamp2Command_spn13111'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['OptionalLamp3Command_spn13112'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['OptionalLamp4Command_spn13113'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['OptionalLamp5Command_spn13114'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['OptionalLamp6Command_spn13115'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    return data

# DLCC1
def PGN_64775(msg, data):
    data['EngineProtectLampCommand_spn5077'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EngineAmberWarningLampCommand_spn5078'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['EngineRedStopLampCommand_spn5079'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['OBDMalfunctionIndicatorLampCommand_spn5080'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['EngineBrakeActiveLampCommand_spn5081'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['CompressionBrakeEnableSwitchIndicatorLampCommand_spn3987'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['EngineOilPressureLowLampCommand_spn5082'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['EngineCoolantTemperatureHighLampCommand_spn5083'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['EngineCoolantLevelLowLampCommand_spn5084'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EngineIdleManagementActiveLampCommand_spn5085'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['EngineAirFilterRestrictionLampCommand_spn5086'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['EngineFuelFilterRestrictedLampCommand_spn5469'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['EngineControlModule1ReadyforUseLampCommand_spn6205'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EngineControlModule2ReadyforUseLampCommand_spn6206'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['EngineControlModule3ReadyforUseLampCommand_spn6207'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['EngineSpeedHighLampCommand_spn6709'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['EngineSpeedVeryHighLampCommand_spn6710'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['VehicleAccelerationRateLimitLampCommand_spn6899'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['EngineIdleManagementPendingEventLampCommand_spn9372'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['EngineStop-StartAutomaticStopActiveLampCommand_spn9683'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['EngineStop-StartAutomaticStartFailedLampCommand_spn9684'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EngineStop-StartEnabledLampCommand_spn9685'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['EngineOilTemperatureHighLampCommand_spn13105'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['EngineFuelTemperatureHighLampCommand_spn13106'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['EngineIntercoolerTemperatureHighLampCommand_spn13107'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    return data

# EOM
def PGN_64776(msg, data):
    data['EngineOilViscosity_spn5055'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.015625) # Unit = cP
    data['EngineOilDensity_spn5056'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64253)  * 3.052e-05) # Unit = g/cc
    data['EngineOilRelativeDielectricity(HighResolution)_spn5468'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64295)  * 0.000122) # Unit = 
    data['EngineOilTemperature3_spn5925'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    return data

# HRLFC
def PGN_64777(msg, data):
    data['EngineTripFuel(HighResolution)_spn5053'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 0.001) # Unit = l
    data['EngineTotalFuelUsed(HighResolution)_spn5054'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 ) + ((int(msg[12:14], 16)) << 16 ) + ((int(msg[14:16], 16)) << 24 )), 4211081215)  * 0.001) # Unit = l
    return data

# AT2OGC2
def PGN_64778(msg, data):
    data['Aftertreatment2OutletNOxSensorO2PressureCorrection_spn5048'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 0.5) # Unit = %/bar
    data['Aftertreatment2OutletNOxSensorNOxPressureCorrection_spn5049'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 0.5) # Unit = %/bar
    data['Aftertreatment2OutletNOxSensorNO2Correction_spn5050'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 0.5) # Unit = %
    data['Aftertreatment2OutletNOxSensorNH3Correction_spn5051'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 0.5) # Unit = %
    data['Aftertreatment2OutletNOxSensorSelf-diagnosisFinalResult_spn5719'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) # Unit = Ratio
    data['Aftertreatment2OutletCorrectedNOx_spn7352'] = ( enforceMaxV(( (int(msg[10:12], 16)) + ((int(msg[12:14], 16)) << 8 )), 64255)  * 0.05) - 200.0 # Unit = ppm
    return data

# AT2OGC1
def PGN_64779(msg, data):
    data['Aftertreatment2OutletNOxSensorHeaterRatio_spn5045'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.001) # Unit = Ratio
    data['Aftertreatment2OutletNOxSensorNewpartdeviationNOxGain_spn5046'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.1) - 100.0 # Unit = %
    data['Aftertreatment2OutletNOxSensorNewpartdeviationNOxOffset_spn5047'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) - 125.0 # Unit = ppm
    data['Aftertreatment2OutletNOxSensorOperationHours_spn5723'] = ( enforceMaxV(( (int(msg[10:12], 16)) + ((int(msg[12:14], 16)) << 8 )), 64255)  * 1.0) # Unit = h
    return data

# AT2IGC2
def PGN_64780(msg, data):
    data['EngineExhaust2NOxSensorO2PressureCorrection_spn5041'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 0.5) # Unit = %/bar
    data['EngineExhaust2NOxSensorNOxPressureCorrection_spn5042'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 0.5) # Unit = %/bar
    data['EngineExhaust2NOxSensorNO2Correction_spn5043'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 0.5) # Unit = %
    data['EngineExhaust2NOxSensorNH3Correction_spn5044'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 0.5) # Unit = %
    data['EngineExhaust2NOxSensorSelf-diagnosisFinalResult_spn5720'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) # Unit = Ratio
    data['EngineExhaust2CorrectedNox_spn7354'] = ( enforceMaxV(( (int(msg[10:12], 16)) + ((int(msg[12:14], 16)) << 8 )), 64255)  * 0.05) - 200.0 # Unit = ppm
    return data

# AT2IGC1
def PGN_64781(msg, data):
    data['EngineExhaust2NOxSensorHeaterRatio_spn5038'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.001) # Unit = Ratio
    data['EngineExhaust2NOxSensorNewPartDeviationNOxGain_spn5039'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.1) - 100.0 # Unit = %
    data['EngineExhaust2NOxSensorNewPartDeviationNOxOffset_spn5040'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) - 125.0 # Unit = ppm
    data['EngineExhaust2NOxSensorOperationHours_spn5724'] = ( enforceMaxV(( (int(msg[10:12], 16)) + ((int(msg[12:14], 16)) << 8 )), 64255)  * 1.0) # Unit = h
    return data

# AT1OGC2
def PGN_64782(msg, data):
    data['Aftertreatment1OutletNOxSensorO2PressureCorrection_spn5034'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 0.5) # Unit = %/bar
    data['Aftertreatment1OutletNOxSensorNOxPressureCorrection_spn5035'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 0.5) # Unit = %/bar
    data['Aftertreatment1OutletNOxSensorNO2Correction_spn5036'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 0.5) # Unit = %
    data['Aftertreatment1OutletNOxSensorNH3Correction_spn5037'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 0.5) # Unit = %
    data['Aftertreatment1OutletNOxSensorSelf-diagnosisFinalResult_spn5717'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) # Unit = Ratio
    data['Aftertreatment1OutletCorrectedNOx_spn7351'] = ( enforceMaxV(( (int(msg[10:12], 16)) + ((int(msg[12:14], 16)) << 8 )), 64255)  * 0.05) - 200.0 # Unit = ppm
    return data

# AT1OGC1
def PGN_64783(msg, data):
    data['Aftertreatment1OutletNOxSensorHeaterRatio_spn5031'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.001) # Unit = Ratio
    data['Aftertreatment1OutletNOxSensorNewpartdeviationNOxGain_spn5032'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.1) - 100.0 # Unit = %
    data['Aftertreatment1OutletNOxSensorNewpartdeviationNOxOffset_spn5033'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) - 125.0 # Unit = ppm
    data['Aftertreatment1OutletNOxSensorOperationHours_spn5721'] = ( enforceMaxV(( (int(msg[10:12], 16)) + ((int(msg[12:14], 16)) << 8 )), 64255)  * 1.0) # Unit = h
    return data

# AT1IGC2
def PGN_64784(msg, data):
    data['EngineExhaust1NOxSensorO2PressureCorrection_spn5027'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 0.5) # Unit = %/bar
    data['EngineExhaust1NOxSensorNOxPressureCorrection_spn5028'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 0.5) # Unit = %/bar
    data['EngineExhaust1NOxSensorNO2Correction_spn5029'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 0.5) # Unit = %
    data['EngineExhaust1NOxSensorNH3Correction_spn5030'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 0.5) # Unit = %
    data['EngineExhaust1NOxSensorSelf-diagnosisFinalResult_spn5718'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) # Unit = Ratio
    data['EngineExhaust1CorrectedNox_spn7353'] = ( enforceMaxV(( (int(msg[10:12], 16)) + ((int(msg[12:14], 16)) << 8 )), 64255)  * 0.05) - 200.0 # Unit = ppm
    return data

# AT1IGC1
def PGN_64785(msg, data):
    data['EngineExhaust1NOxSensorHeaterRatio_spn5024'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.001) # Unit = Ratio
    data['EngineExhaust1NOxSensorNewpartdeviationNOxGain_spn5025'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.1) - 100.0 # Unit = %
    data['EngineExhaust1NOxSensorNewpartdeviationNOxOffset_spn5026'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) - 125.0 # Unit = ppm
    data['EngineExhaust1NOxSensorOperationHours_spn5722'] = ( enforceMaxV(( (int(msg[10:12], 16)) + ((int(msg[12:14], 16)) << 8 )), 64255)  * 1.0) # Unit = h
    return data

# MSI1
def PGN_64786(msg, data):
    data['GeneratorOverheatStatus_spn5000'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['GensetSystemOutputVoltageRangeStatus_spn5001'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Grapple/MagnetSelectionSwitch_spn5003'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['GensetSoftstartActiveStatus_spn5004'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['ReverseCurrentRangeSetting_spn5002'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00011111)), 31)  * 1.0) # Unit = bit
    data['GensetEnableActiveStatus_spn5005'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['VoltageMonitorActiveStatus_spn5006'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['GeneratorDutyCycleExceededStatus_spn5007'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    return data

# MSCI
def PGN_64787(msg, data):
    data['MagnetBoostTime_spn4998'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 0.25) # Unit = s
    data['MagnetRatedPower_spn4999'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 )), 64255)  * 0.5) # Unit = kW
    return data

# BCH2
def PGN_64788(msg, data):
    data['BatteryCharger2State_spn4994'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['BatteryCharger2PowerLineState_spn4995'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['BatteryCharger2OutputVoltage_spn4996'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['BatteryCharger2OutputCurrent_spn4997'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 0.05) - 1600.0 # Unit = A
    return data

# BCH1
def PGN_64789(msg, data):
    data['BatteryCharger1State_spn4990'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['BatteryCharger1PowerLineState_spn4991'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['BatteryCharger1OutputVoltage_spn4992'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['BatteryCharger1OutputCurrent_spn4993'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 0.05) - 1600.0 # Unit = A
    return data

# OCSI
def PGN_64790(msg, data):
    data['DriverOccupantClassificationSystemStatus_spn4963'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000111)), 7)  * 1.0) # Unit = bit
    data['PassengerOccupantClassificationSystemStatus_spn4964'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00111000) >> 3)), 7)  * 1.0) # Unit = bit
    data['OccupantClassificationSystem3Status_spn4965'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['OccupantClassificationSystem4Status_spn4966'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['OccupantClassificationSystem5Status_spn4967'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['OccupantClassificationSystem6Status_spn4968'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['OccupantClassificationSystem7Status_spn4969'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['OccupantClassificationSystem8Status_spn4970'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['OccupantClassificationSystem9Status_spn4971'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['OccupantClassificationSystem10Status_spn4972'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# BDS
def PGN_64791(msg, data):
    data['DriverBeltlockStatus_spn4952'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['PassengerBeltlockStatus_spn4953'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Beltlock3Status_spn4954'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Beltlock4Status_spn4955'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Beltlock5Status_spn4956'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Beltlock6Status_spn4957'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Beltlock7Status_spn4958'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Beltlock8Status_spn4959'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Beltlock9Status_spn4960'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Beltlock10Status_spn4961'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['PassengerAirbagDeactivationSwitchStatus_spn4962'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    return data

# AT1WUDOC
def PGN_64794(msg, data):
    data['Aftertreatment1WarmUpDieselOxidationCatalystIntakeTemperature_spn4809'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['Aftertreatment1WarmUpDieselOxidationCatalystOutletTemperature_spn4810'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    return data

# DPF2S
def PGN_64795(msg, data):
    data['Aftertreatment2DieselParticulateFilterSootMass_spn4786'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 4.0) # Unit = g
    data['Aftertreatment2DieselParticulateFilterSootDensity_spn4787'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 0.08) # Unit = g/L
    data['Aftertreatment2DieselParticulateFilterMeanSootSignal_spn4788'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    data['Aftertreatment2DieselParticulateFilterMedianSootSignal_spn4789'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    data['Aftertreatment2DieselParticulateFilterSootSensorPreliminaryFMI_spn4790'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['DieselParticulateFilter2SootSensorECUInternalTemperature_spn5570'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    return data

# DPF1S
def PGN_64796(msg, data):
    data['Aftertreatment1DieselParticulateFilterSootMass_spn4781'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 4.0) # Unit = g
    data['Aftertreatment1DieselParticulateFilterSootDensity_spn4782'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 0.08) # Unit = g/L
    data['Aftertreatment1DieselParticulateFilterMeanSootSignal_spn4783'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    data['Aftertreatment1DieselParticulateFilterMedianSootSignal_spn4784'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    data['Aftertreatment1DieselParticulateFilterSootSensorPreliminaryFMI_spn4785'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['DieselParticulateFilter1SootSensorECUInternalTemperature_spn5569'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    return data

# ATDT2
def PGN_64797(msg, data):
    data['Aftertreatment1ThreeWayCatalystDifferentialTemperature_spn4779'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['Aftertreatment2ThreeWayCatalystDifferentialTemperature_spn4780'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    return data

# ATDT1
def PGN_64798(msg, data):
    data['Aftertreatment1GasOxidationCatalystDifferentialTemperature_spn4777'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['Aftertreatment2GasOxidationCatalystDifferentialTemperature_spn4778'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    return data

# A2DOC1
def PGN_64799(msg, data):
    data['Aftertreatment2DieselOxidationCatalystIntakeTemperature_spn4771'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['Aftertreatment2DieselOxidationCatalystOutletTemperature_spn4772'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['Aftertreatment2DieselOxidationCatalystDifferentialPressure_spn4773'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.5) # Unit = kPa
    data['Aftertreatment2DieselOxidationCatalystIntakeTemperaturePreliminaryFMI_spn4774'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['Aftertreatment2DieselOxidationCatalystOutletTemperaturePreliminaryFMI_spn4775'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11100000) >> 5) + ((int(msg[14:16], 16) & 0b00000011) << 3 )), 31)  * 1.0) # Unit = binary
    data['Aftertreatment2DieselOxidationCatalystDifferentialPressurePreliminaryFMI_spn4776'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b01111100) >> 2)), 31)  * 1.0) # Unit = binary
    return data

# A1DOC1
def PGN_64800(msg, data):
    data['Aftertreatment1DieselOxidationCatalystIntakeTemperature_spn4765'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['Aftertreatment1DieselOxidationCatalystOutletTemperature_spn4766'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['Aftertreatment1DieselOxidationCatalystDifferentialPressure_spn4767'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    data['Aftertreatment1DieselOxidationCatalystIntakeTemperaturePreliminaryFMI_spn4768'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['Aftertreatment1DieselOxidationCatalystOutletTemperaturePreliminaryFMI_spn4769'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11100000) >> 5) + ((int(msg[14:16], 16) & 0b00000011) << 3 )), 31)  * 1.0) # Unit = binary
    data['Aftertreatment1DieselOxidationCatalystDifferentialPressurePreliminaryFMI_spn4770'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b01111100) >> 2)), 31)  * 1.0) # Unit = binary
    return data

# A2GOC
def PGN_64801(msg, data):
    data['Aftertreatment2GasOxidationCatalystIntakeTemperature_spn4759'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['Aftertreatment2GasOxidationCatalystOutletTemperature_spn4760'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['Aftertreatment2GasOxidationCatalystDifferentialPressure_spn4761'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    data['Aftertreatment2GasOxidationCatalystIntakeTemperaturePreliminaryFMI_spn4762'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['Aftertreatment2GasOxidationCatalystOutletTemperaturePreliminaryFMI_spn4763'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11100000) >> 5) + ((int(msg[14:16], 16) & 0b00000011) << 3 )), 31)  * 1.0) # Unit = binary
    data['Aftertreatment2GasOxidationCatalystDifferentialPressurePreliminaryFMI_spn4764'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b01111100) >> 2)), 31)  * 1.0) # Unit = binary
    return data

# A1GOC
def PGN_64802(msg, data):
    data['Aftertreatment1GasOxidationCatalystIntakeTemperature_spn4753'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['Aftertreatment1GasOxidationCatalystOutletTemperature_spn4754'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['Aftertreatment1GasOxidationCatalystDifferentialPressure_spn4755'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    data['Aftertreatment1GasOxidationCatalystIntakeTemperaturePreliminaryFMI_spn4756'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['Aftertreatment1GasOxidationCatalystOutletTemperaturePreliminaryFMI_spn4757'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11100000) >> 5) + ((int(msg[14:16], 16) & 0b00000011) << 3 )), 31)  * 1.0) # Unit = binary
    data['Aftertreatment1GasOxidationCatalystDifferentialPressurePreliminaryFMI_spn4758'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b01111100) >> 2)), 31)  * 1.0) # Unit = binary
    return data

# EJM10
def PGN_64803(msg, data):
    data['Joystick10GripX-AxisNeutralPositionStatus_spn4735'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick10GripX-AxisLeverLeftNegativePositionStatus_spn4736'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick10GripX-AxisLeverRightPositivePositionStatus_spn4737'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick10GripX-AxisPosition_spn4738'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6) + ((int(msg[2:4], 16)) << 2 )), 1020)  * 0.1) # Unit = %
    data['Joystick10GripY-AxisNeutralPositionStatus_spn4739'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick10GripY-AxisLeverBackNegativePositionStatus_spn4740'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick10GripY-AxisLeverForwardPositivePositionStatus_spn4741'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick10GripY-AxisPosition_spn4742'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6) + ((int(msg[6:8], 16)) << 2 )), 1020)  * 0.1) # Unit = %
    data['Joystick10Theta-AxisNeutralPositionStatus_spn4743'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick10Theta-AxisCounterClockwiseNegativePositionStatus_spn4744'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick10Theta-AxisClockwisePositivePositionStatus_spn4745'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick10Theta-AxisPosition_spn4746'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6) + ((int(msg[10:12], 16)) << 2 )), 1020)  * 0.1) # Unit = %
    data['Joystick10Theta-AxisDetentPositionStatus_spn4747'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick10GripY-AxisDetentPositionStatus_spn4748'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick10GripX-AxisDetentPositionStatus_spn4749'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Joystick10Button16PressedStatus_spn6770'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick10Button15PressedStatus_spn6769'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick10Button14PressedStatus_spn6768'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick10Button13PressedStatus_spn6767'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# BJM10
def PGN_64804(msg, data):
    data['Joystick10X-AxisNeutralPositionStatus_spn4713'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick10X-AxisLeverLeftNegativePositionStatus_spn4714'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick10X-AxisLeverRightPositivePositionStatus_spn4715'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick10X-AxisPosition_spn4716'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6) + ((int(msg[2:4], 16)) << 2 )), 1020)  * 0.1) # Unit = %
    data['Joystick10Y-AxisNeutralPositionStatus_spn4717'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick10Y-AxisLeverBackNegativePositionStatus_spn4718'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick10Y-AxisLeverForwardPositivePositionStatus_spn4719'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick10Y-AxisPosition_spn4720'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6) + ((int(msg[6:8], 16)) << 2 )), 1020)  * 0.1) # Unit = %
    data['Joystick10Y-AxisDetentPositionStatus_spn4721'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick10X-AxisDetentPositionStatus_spn4722'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Joystick10Button4PressedStatus_spn4723'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick10Button3PressedStatus_spn4724'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick10Button2PressedStatus_spn4725'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick10Button1PressedStatus_spn4726'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Joystick10Button8PressedStatus_spn4727'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick10Button7PressedStatus_spn4728'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick10Button6PressedStatus_spn4729'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick10Button5PressedStatus_spn4730'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Joystick10Button12PressedStatus_spn4731'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick10Button11PressedStatus_spn4732'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick10Button10PressedStatus_spn4733'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick10Button9PressedStatus_spn4734'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# EJM9
def PGN_64805(msg, data):
    data['Joystick9GripX-AxisNeutralPositionStatus_spn4698'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick9GripX-AxisLeverLeftNegativePositionStatus_spn4699'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick9GripX-AxisLeverRightPositivePositionStatus_spn4700'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick9GripX-AxisPosition_spn4701'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6) + ((int(msg[2:4], 16)) << 2 )), 1020)  * 0.1) # Unit = %
    data['Joystick9GripY-AxisNeutralPositionStatus_spn4702'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick9GripY-AxisLeverBackNegativePositionStatus_spn4703'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick9GripY-AxisLeverForwardPositivePositionStatus_spn4704'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick9GripY-AxisPosition_spn4705'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6) + ((int(msg[6:8], 16)) << 2 )), 1020)  * 0.1) # Unit = %
    data['Joystick9Theta-AxisNeutralPositionStatus_spn4706'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick9Theta-AxisCounterClockwiseNegativePositionStatus_spn4707'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick9Theta-AxisClockwisePositivePositionStatus_spn4708'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick9Theta-AxisPosition_spn4709'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6) + ((int(msg[10:12], 16)) << 2 )), 1020)  * 0.1) # Unit = %
    data['Joystick9Theta-AxisDetentPositionStatus_spn4710'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick9GripY-AxisDetentPositionStatus_spn4711'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick9GripX-AxisDetentPositionStatus_spn4712'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Joystick9Button16PressedStatus_spn6766'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick9Button15PressedStatus_spn6765'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick9Button14PressedStatus_spn6764'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick9Button13PressedStatus_spn6763'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# BJM9
def PGN_64806(msg, data):
    data['Joystick9X-AxisNeutralPositionStatus_spn4676'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick9X-AxisLeverLeftNegativePositionStatus_spn4677'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick9X-AxisLeverRightPositivePositionStatus_spn4678'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick9X-AxisPosition_spn4679'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6) + ((int(msg[2:4], 16)) << 2 )), 1020)  * 0.1) # Unit = %
    data['Joystick9Y-AxisNeutralPositionStatus_spn4680'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick9Y-AxisLeverBackNegativePositionStatus_spn4681'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick9Y-AxisLeverForwardPositivePositionStatus_spn4682'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick9Y-AxisPosition_spn4683'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6) + ((int(msg[6:8], 16)) << 2 )), 1020)  * 0.1) # Unit = %
    data['Joystick9Y-AxisDetentPositionStatus_spn4684'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick9X-AxisDetentPositionStatus_spn4685'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Joystick9Button4PressedStatus_spn4686'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick9Button3PressedStatus_spn4687'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick9Button2PressedStatus_spn4688'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick9Button1PressedStatus_spn4689'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Joystick9Button8PressedStatus_spn4690'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick9Button7PressedStatus_spn4691'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick9Button6PressedStatus_spn4692'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick9Button5PressedStatus_spn4693'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Joystick9Button12PressedStatus_spn4694'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick9Button11PressedStatus_spn4695'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick9Button10PressedStatus_spn4696'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick9Button9PressedStatus_spn4697'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# EJM8
def PGN_64807(msg, data):
    data['Joystick8GripX-AxisNeutralPositionStatus_spn4661'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick8GripX-AxisLeverLeftNegativePositionStatus_spn4662'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick8GripX-AxisLeverRightPositivePositionStatus_spn4663'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick8GripX-AxisPosition_spn4664'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6) + ((int(msg[2:4], 16)) << 2 )), 1020)  * 0.1) # Unit = %
    data['Joystick8GripY-AxisNeutralPositionStatus_spn4665'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick8GripY-AxisLeverBackNegativePositionStatus_spn4666'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick8GripY-AxisLeverForwardPositivePositionStatus_spn4667'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick8GripY-AxisPosition_spn4668'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6) + ((int(msg[6:8], 16)) << 2 )), 1020)  * 0.1) # Unit = %
    data['Joystick8Theta-AxisNeutralPositionStatus_spn4669'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick8Theta-AxisCounterClockwiseNegativePositionStatus_spn4670'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick8Theta-AxisClockwisePositivePositionStatus_spn4671'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick8Theta-AxisPosition_spn4672'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6) + ((int(msg[10:12], 16)) << 2 )), 1020)  * 0.1) # Unit = %
    data['Joystick8Theta-AxisDetentPositionStatus_spn4673'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick8GripY-AxisDetentPositionStatus_spn4674'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick8GripX-AxisDetentPositionStatus_spn4675'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Joystick8Button16PressedStatus_spn6762'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick8Button15PressedStatus_spn6761'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick8Button14PressedStatus_spn6760'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick8Button13PressedStatus_spn6759'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# BJM8
def PGN_64808(msg, data):
    data['Joystick8X-AxisNeutralPositionStatus_spn4639'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick8X-AxisLeverLeftNegativePositionStatus_spn4640'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick8X-AxisLeverRightPositivePositionStatus_spn4641'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick8X-AxisPosition_spn4642'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6) + ((int(msg[2:4], 16)) << 2 )), 1020)  * 0.1) # Unit = %
    data['Joystick8Y-AxisNeutralPositionStatus_spn4643'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick8Y-AxisLeverBackNegativePositionStatus_spn4644'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick8Y-AxisLeverForwardPositivePositionStatus_spn4645'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick8Y-AxisPosition_spn4646'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6) + ((int(msg[6:8], 16)) << 2 )), 1020)  * 0.1) # Unit = %
    data['Joystick8Y-AxisDetentPositionStatus_spn4647'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick8X-AxisDetentPositionStatus_spn4648'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Joystick8Button4PressedStatus_spn4649'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick8Button3PressedStatus_spn4650'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick8Button2PressedStatus_spn4651'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick8Button1PressedStatus_spn4652'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Joystick8Button8PressedStatus_spn4653'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick8Button7PressedStatus_spn4654'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick8Button6PressedStatus_spn4655'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick8Button5PressedStatus_spn4656'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Joystick8Button12PressedStatus_spn4657'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick8Button11PressedStatus_spn4658'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick8Button10PressedStatus_spn4659'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick8Button9PressedStatus_spn4660'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# EJM7
def PGN_64809(msg, data):
    data['Joystick7GripX-AxisNeutralPositionStatus_spn4624'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick7GripX-AxisLeverLeftNegativePositionStatus_spn4625'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick7GripX-AxisLeverRightPositivePositionStatus_spn4626'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick7GripX-AxisPosition_spn4627'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6) + ((int(msg[2:4], 16)) << 2 )), 1020)  * 0.1) # Unit = %
    data['Joystick7GripY-AxisNeutralPositionStatus_spn4628'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick7GripY-AxisLeverBackNegativePositionStatus_spn4629'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick7GripY-AxisLeverForwardPositivePositionStatus_spn4630'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick7GripY-AxisPosition_spn4631'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6) + ((int(msg[6:8], 16)) << 2 )), 1020)  * 0.1) # Unit = %
    data['Joystick7Theta-AxisNeutralPositionStatus_spn4632'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick7Theta-AxisCounterClockwiseNegativePositionStatus_spn4633'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick7Theta-AxisClockwisePositivePositionStatus_spn4634'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick7Theta-AxisPosition_spn4635'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6) + ((int(msg[10:12], 16)) << 2 )), 1020)  * 0.1) # Unit = %
    data['Joystick7Theta-AxisDetentPositionStatus_spn4636'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick7GripY-AxisDetentPositionStatus_spn4637'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick7GripX-AxisDetentPositionStatus_spn4638'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Joystick7Button16PressedStatus_spn6758'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick7Button15PressedStatus_spn6757'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick7Button14PressedStatus_spn6756'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick7Button13PressedStatus_spn6755'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# BJM7
def PGN_64810(msg, data):
    data['Joystick7X-AxisNeutralPositionStatus_spn4602'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick7X-AxisLeverLeftNegativePositionStatus_spn4603'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick7X-AxisLeverRightPositivePositionStatus_spn4604'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick7X-AxisPosition_spn4605'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6) + ((int(msg[2:4], 16)) << 2 )), 1020)  * 0.1) # Unit = %
    data['Joystick7Y-AxisNeutralPositionStatus_spn4606'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick7Y-AxisLeverBackNegativePositionStatus_spn4607'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick7Y-AxisLeverForwardPositivePositionStatus_spn4608'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick7Y-AxisPosition_spn4609'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6) + ((int(msg[6:8], 16)) << 2 )), 1020)  * 0.1) # Unit = %
    data['Joystick7Y-AxisDetentPositionStatus_spn4610'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick7X-AxisDetentPositionStatus_spn4611'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Joystick7Button4PressedStatus_spn4612'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick7Button3PressedStatus_spn4613'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick7Button2PressedStatus_spn4614'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick7Button1PressedStatus_spn4615'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Joystick7Button8PressedStatus_spn4616'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick7Button7PressedStatus_spn4617'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick7Button6PressedStatus_spn4618'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick7Button5PressedStatus_spn4619'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Joystick7Button12PressedStatus_spn4620'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick7Button11PressedStatus_spn4621'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick7Button10PressedStatus_spn4622'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick7Button9PressedStatus_spn4623'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# EJM6
def PGN_64811(msg, data):
    data['Joystick6GripX-AxisNeutralPositionStatus_spn4587'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick6GripX-AxisLeverLeftNegativePositionStatus_spn4588'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick6GripX-AxisLeverRightPositivePositionStatus_spn4589'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick6GripX-AxisPosition_spn4590'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6) + ((int(msg[2:4], 16)) << 2 )), 1020)  * 0.1) # Unit = %
    data['Joystick6GripY-AxisNeutralPositionStatus_spn4591'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick6GripY-AxisLeverBackNegativePositionStatus_spn4592'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick6GripY-AxisLeverForwardPositivePositionStatus_spn4593'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick6GripY-AxisPosition_spn4594'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6) + ((int(msg[6:8], 16)) << 2 )), 1020)  * 0.1) # Unit = %
    data['Joystick6Theta-AxisNeutralPositionStatus_spn4595'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick6Theta-AxisCounterClockwiseNegativePositionStatus_spn4596'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick6Theta-AxisClockwisePositivePositionStatus_spn4597'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick6Theta-AxisPosition_spn4598'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6) + ((int(msg[10:12], 16)) << 2 )), 1020)  * 0.1) # Unit = %
    data['Joystick6Theta-AxisDetentPositionStatus_spn4599'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick6GripY-AxisDetentPositionStatus_spn4600'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick6GripX-AxisDetentPositionStatus_spn4601'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Joystick6Button16PressedStatus_spn6754'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick6Button15PressedStatus_spn6753'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick6Button14PressedStatus_spn6752'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick6Button13PressedStatus_spn6751'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# BJM6
def PGN_64812(msg, data):
    data['Joystick6X-AxisNeutralPositionStatus_spn4565'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick6X-AxisLeverLeftNegativePositionStatus_spn4566'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick6X-AxisLeverRightPositivePositionStatus_spn4567'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick6X-AxisPosition_spn4568'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6) + ((int(msg[2:4], 16)) << 2 )), 1020)  * 0.1) # Unit = %
    data['Joystick6Y-AxisNeutralPositionStatus_spn4569'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick6Y-AxisLeverBackNegativePositionStatus_spn4570'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick6Y-AxisLeverForwardPositivePositionStatus_spn4571'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick6Y-AxisPosition_spn4572'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6) + ((int(msg[6:8], 16)) << 2 )), 1020)  * 0.1) # Unit = %
    data['Joystick6Y-AxisDetentPositionStatus_spn4573'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick6X-AxisDetentPositionStatus_spn4574'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Joystick6Button4PressedStatus_spn4575'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick6Button3PressedStatus_spn4576'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick6Button2PressedStatus_spn4577'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick6Button1PressedStatus_spn4578'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Joystick6Button8PressedStatus_spn4579'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick6Button7PressedStatus_spn4580'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick6Button6PressedStatus_spn4581'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick6Button5PressedStatus_spn4582'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Joystick6Button12PressedStatus_spn4583'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick6Button11PressedStatus_spn4584'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick6Button10PressedStatus_spn4585'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick6Button9PressedStatus_spn4586'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# EJM5
def PGN_64813(msg, data):
    data['Joystick5GripX-AxisNeutralPositionStatus_spn4550'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick5GripX-AxisLeverLeftNegativePositionStatus_spn4551'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick5GripX-AxisLeverRightPositivePositionStatus_spn4552'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick5GripX-AxisPosition_spn4553'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6) + ((int(msg[2:4], 16)) << 2 )), 1020)  * 0.1) # Unit = %
    data['Joystick5GripY-AxisNeutralPositionStatus_spn4554'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick5GripY-AxisLeverBackNegativePositionStatus_spn4555'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick5GripY-AxisLeverForwardPositivePositionStatus_spn4556'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick5GripY-AxisPosition_spn4557'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6) + ((int(msg[6:8], 16)) << 2 )), 1020)  * 0.1) # Unit = %
    data['Joystick5Theta-AxisNeutralPositionStatus_spn4558'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick5Theta-AxisCounterClockwiseNegativePositionStatus_spn4559'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick5Theta-AxisClockwisePositivePositionStatus_spn4560'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick5Theta-AxisPosition_spn4561'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6) + ((int(msg[10:12], 16)) << 2 )), 1020)  * 0.1) # Unit = %
    data['Joystick5Theta-AxisDetentPositionStatus_spn4562'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick5GripY-AxisDetentPositionStatus_spn4563'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick5GripX-AxisDetentPositionStatus_spn4564'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Joystick5Button16PressedStatus_spn6750'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick5Button15PressedStatus_spn6749'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick5Button14PressedStatus_spn6748'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick5Button13PressedStatus_spn6747'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# BJM5
def PGN_64814(msg, data):
    data['Joystick5X-AxisNeutralPositionStatus_spn4528'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick5X-AxisLeverLeftNegativePositionStatus_spn4529'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick5X-AxisLeverRightPositivePositionStatus_spn4530'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick5X-AxisPosition_spn4531'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6) + ((int(msg[2:4], 16)) << 2 )), 1020)  * 0.1) # Unit = %
    data['Joystick5Y-AxisNeutralPositionStatus_spn4532'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick5Y-AxisLeverBackNegativePositionStatus_spn4533'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick5Y-AxisLeverForwardPositivePositionStatus_spn4534'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick5Y-AxisPosition_spn4535'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6) + ((int(msg[6:8], 16)) << 2 )), 1020)  * 0.1) # Unit = %
    data['Joystick5Y-AxisDetentPositionStatus_spn4536'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick5X-AxisDetentPositionStatus_spn4537'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Joystick5Button4PressedStatus_spn4538'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick5Button3PressedStatus_spn4539'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick5Button2PressedStatus_spn4540'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick5Button1PressedStatus_spn4541'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Joystick5Button8PressedStatus_spn4542'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick5Button7PressedStatus_spn4543'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick5Button6PressedStatus_spn4544'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick5Button5PressedStatus_spn4545'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Joystick5Button12PressedStatus_spn4546'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick5Button11PressedStatus_spn4547'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick5Button10PressedStatus_spn4548'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick5Button9PressedStatus_spn4549'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# EJM4
def PGN_64815(msg, data):
    data['Joystick4GripX-AxisNeutralPositionStatus_spn4513'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick4GripX-AxisLeverLeftNegativePositionStatus_spn4514'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick4GripX-AxisLeverRightPositivePositionStatus_spn4515'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick4GripX-AxisPosition_spn4516'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6) + ((int(msg[2:4], 16)) << 2 )), 1020)  * 0.1) # Unit = %
    data['Joystick4GripY-AxisNeutralPositionStatus_spn4517'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick4GripY-AxisLeverBackNegativePositionStatus_spn4518'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick4GripY-AxisLeverForwardPositivePositionStatus_spn4519'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick4GripY-AxisPosition_spn4520'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6) + ((int(msg[6:8], 16)) << 2 )), 1020)  * 0.1) # Unit = %
    data['Joystick4Theta-AxisNeutralPositionStatus_spn4521'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick4Theta-AxisCounterClockwiseNegativePositionStatus_spn4522'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick4Theta-AxisClockwisePositivePositionStatus_spn4523'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick4Theta-AxisPosition_spn4524'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6) + ((int(msg[10:12], 16)) << 2 )), 1020)  * 0.1) # Unit = %
    data['Joystick4Theta-AxisDetentPositionStatus_spn4525'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick4GripY-AxisDetentPositionStatus_spn4526'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick4GripX-AxisDetentPositionStatus_spn4527'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Joystick4Button16PressedStatus_spn6746'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick4Button15PressedStatus_spn6745'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick4Button14PressedStatus_spn6744'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick4Button13PressedStatus_spn6743'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# BJM4
def PGN_64816(msg, data):
    data['Joystick4X-AxisNeutralPositionStatus_spn4491'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick4X-AxisLeverLeftNegativePositionStatus_spn4492'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick4X-AxisLeverRightPositivePositionStatus_spn4493'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick4X-AxisPosition_spn4494'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6) + ((int(msg[2:4], 16)) << 2 )), 1020)  * 0.1) # Unit = %
    data['Joystick4Y-AxisNeutralPositionStatus_spn4495'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick4Y-AxisLeverBackNegativePositionStatus_spn4496'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick4Y-AxisLeverForwardPositivePositionStatus_spn4497'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick4Y-AxisPosition_spn4498'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6) + ((int(msg[6:8], 16)) << 2 )), 1020)  * 0.1) # Unit = %
    data['Joystick4Y-AxisDetentPositionStatus_spn4499'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick4X-AxisDetentPositionStatus_spn4500'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Joystick4Button4PressedStatus_spn4501'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick4Button3PressedStatus_spn4502'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick4Button2PressedStatus_spn4503'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick4Button1PressedStatus_spn4504'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Joystick4Button8PressedStatus_spn4505'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick4Button7PressedStatus_spn4506'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick4Button6PressedStatus_spn4507'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick4Button5PressedStatus_spn4508'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Joystick4Button12PressedStatus_spn4509'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick4Button11PressedStatus_spn4510'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick4Button10PressedStatus_spn4511'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick4Button9PressedStatus_spn4512'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# FD2
def PGN_64817(msg, data):
    data['EstimatedPercentFan2Speed_spn1550'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 0.4) # Unit = %
    data['Fan2DriveState_spn1557'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Fan2Speed_spn1598'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.125) # Unit = rpm
    data['HydraulicFan2MotorPressure_spn1707'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.5) # Unit = kPa
    data['Fan2DriveBypassCommandStatus_spn1708'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 0.4) # Unit = %
    return data

# A2DEFSI
def PGN_64819(msg, data):
    data['Aftertreatment2DieselExhaustFluidPump1MotorSpeed_spn4440'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.5) # Unit = rpm
    data['Aftertreatment2DieselExhaustFluidPumpDrivePercentage_spn4441'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 0.4) # Unit = %
    data['Aftertreatment2DieselExhaustFluidDosingUnit1DiverterValve_spn4442'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 0.4) # Unit = %
    data['Aftertreatment2DieselExhaustFluidTankFillValveCommand_spn5437'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.4) # Unit = %
    data['Aftertreatment2DieselExhaustFluidPumpState_spn5438'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment2DieselExhaustFluidPumpPowerRelay_spn8481'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment2DieselExhaustFluidPump_spn7108'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment2DieselExhaustFluidTankDrainValveCommand_spn5439'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 0.4) # Unit = %
    data['Aftertreatment2DieselExhaustFluidDosingUnit2DiverterValve_spn7537'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 0.4) # Unit = %
    return data

# A2SCRRT2I
def PGN_64820(msg, data):
    data['Aftertreatment2DieselExhaustFluidQuickThawTankVolume_spn4433'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 0.4) # Unit = %
    data['Aftertreatment2DieselExhaustFluidQuickThawTankTemperature_spn4434'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['Aftertreatment2DieselExhaustFluidQuickThawTankLevel_spn4435'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.1) # Unit = mm
    data['Aftertreatment2DieselExhaustFluidQuickThawLevelPreliminaryFMI_spn4436'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['Aftertreatment2DieselExhaustFluidQuickThawTemperaturePreliminaryFMI_spn4437'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['Aftertreatment2DieselExhaustFluidQuickThawHeater_spn4438'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 0.4) # Unit = %
    data['Aftertreatment2DieselExhaustFluidQuickThawHeaterPreliminaryFMI_spn4439'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    return data

# A2DEFT1I1
def PGN_64821(msg, data):
    data['Aftertreatment2DieselExhaustFluidTankVolume_spn4426'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 0.4) # Unit = %
    data['Aftertreatment2DieselExhaustFluidTankTemperature1_spn4427'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['Aftertreatment2DieselExhaustFluidTankLevel_spn4428'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.1) # Unit = mm
    data['Aftertreatment2DieselExhaustFluidTankLevel/VolumePreliminaryFMI_spn4429'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['Aftertreatment2DieselExhaustFluidTank1TemperaturePreliminaryFMI_spn4430'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['Aftertreatment2DieselExhaustFluidTankHeater_spn4431'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 0.4) # Unit = %
    data['Aftertreatment2DieselExhaustFluidTank1HeaterPreliminaryFMI_spn4432'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    return data

# A2DEFI1
def PGN_64822(msg, data):
    data['Aftertreatment2DieselExhaustFluidTemperature2_spn4420'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['Aftertreatment2DieselExhaustFluidConcentration_spn4421'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 0.25) # Unit = %
    data['Aftertreatment2DieselExhaustFluidConductivity_spn4422'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 5.0) # Unit = ÂµSiemens/mm
    data['Aftertreatment2DieselExhaustFluidTemperature2PreliminaryFMI_spn4423'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['Aftertreatment2DieselExhaustFluidPropertiesPreliminaryFMI_spn4424'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['Aftertreatment2DieselExhaustFluidTypeProperty_spn4425'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    return data

# A2SCRSI1
def PGN_64823(msg, data):
    data['Aftertreatment2DieselExhaustFluidAverageConsumption_spn4417'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) # Unit = l/h
    data['Aftertreatment2SCRCommandedDieselExhaustFluidConsumption_spn4418'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) # Unit = l/h
    data['Aftertreatment2SCRConversionEfficiency_spn4419'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.4) # Unit = %
    data['Aftertreatment2SCRSystemSulfationLevel_spn7849'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 1.0) # Unit = %
    return data

# A2SCREGT1
def PGN_64824(msg, data):
    data['Aftertreatment2SCRIntakeTemperature_spn4413'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['Aftertreatment2SCRIntakeTemperaturePreliminaryFMI_spn4414'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00011111)), 31)  * 1.0) # Unit = bit
    data['Aftertreatment2SCROutletTemperature_spn4415'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['Aftertreatment2SCROutletTemperaturePreliminaryFMI_spn4416'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00011111)), 31)  * 1.0) # Unit = bit
    return data

# A2SCREGP
def PGN_64825(msg, data):
    data['Aftertreatment2SCRDifferentialPressure_spn4411'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    data['Aftertreatment2SCRDifferentialPressurePreliminaryFMI_spn4412'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00011111)), 31)  * 1.0) # Unit = bit
    data['Aftertreatment2SCRIntakePressure_spn6587'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 0.1) - 3212.7 # Unit = kPa
    data['Aftertreatment2SCRIntakeAbsolutePressure_spn6798'] = ( enforceMaxV(( (int(msg[10:12], 16)) + ((int(msg[12:14], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    return data

# A2SCRDSR2
def PGN_64826(msg, data):
    data['Aftertreatment2DieselExhaustFluidDoserFaultSuppressionRequest_spn4405'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment2DieselExhaustFluidDoserHeatingModeRequest_spn4406'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b01110000) >> 4)), 7)  * 1.0) # Unit = bit
    data['Aftertreatment2DieselExhaustFluidLineHeater1_spn4407'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment2DieselExhaustFluidLineHeater2_spn4408'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment2DieselExhaustFluidLineHeater3_spn4409'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment2DieselExhaustFluidLineHeater4_spn4410'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment2DieselExhaustFluidTankHeaterCommand_spn5138'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 0.4) # Unit = %
    data['Aftertreatment2DieselExhaustFluidQuickThawHeaterCommand_spn5415'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 0.4) # Unit = %
    data['Aftertreatment2DieselExhaustFluidLineHeaterRelay1_spn5973'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment2DieselExhaustFluidLineHeaterRelay2_spn7526'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment2DieselExhaustFluidLineHeaterRelay3_spn7527'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment2DieselExhaustFluidLineHeater5_spn5490'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment2DieselExhaustFluidLineHeater6_spn7567'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment2DieselExhaustFluidLineHeater7_spn7568'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment2DieselExhaustFluidLineHeater8_spn7569'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment2DieselExhaustFluidLineHeater9_spn7570'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment2DieselExhaustFluidLineHeater10_spn7571'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    return data

# A2SCRDSI2
def PGN_64827(msg, data):
    data['Aftertreatment2SCRDosingAirAssistAbsolutePressure_spn4388'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 8.0) # Unit = kPa
    data['Aftertreatment2SCRDosingAirAssistValve_spn4389'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 0.4) # Unit = %
    data['Aftertreatment2DieselExhaustFluidDoser1Temperature_spn4390'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['Aftertreatment2SCRDoserValveExhaustTemperatureReductionRequest_spn4391'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000111)), 7)  * 1.0) # Unit = bit
    data['Aftertreatment2SCRFeedbackControlStatus_spn4392'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00111000) >> 3)), 7)  * 1.0) # Unit = bit
    data['Aftertreatment2DieselExhaustFluidLineHeater1State_spn4393'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment2DieselExhaustFluidLineHeater1PreliminaryFMI_spn4394'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b01111100) >> 2)), 31)  * 1.0) # Unit = binary
    data['Aftertreatment2DieselExhaustFluidLineHeater2State_spn4395'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment2DieselExhaustFluidLineHeater2PreliminaryFMI_spn4396'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b01111100) >> 2)), 31)  * 1.0) # Unit = binary
    data['Aftertreatment2DieselExhaustFluidLineHeater3State_spn4397'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment2DieselExhaustFluidLineHeater3PreliminaryFMI_spn4398'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b01111100) >> 2)), 31)  * 1.0) # Unit = binary
    data['Aftertreatment2DieselExhaustFluidLineHeater4State_spn4399'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment2DieselExhaustFluidLineHeater4PreliminaryFMI_spn4400'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b01111100) >> 2)), 31)  * 1.0) # Unit = binary
    return data

# A1DEFSI
def PGN_64828(msg, data):
    data['Aftertreatment1DieselExhaustFluidPump1MotorSpeed_spn4374'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.5) # Unit = rpm
    data['Aftertreatment1DieselExhaustFluidPumpDrivePercentage_spn4375'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 0.4) # Unit = %
    data['Aftertreatment1DieselExhaustFluidDosingUnit1DiverterValve_spn4376'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 0.4) # Unit = %
    data['Aftertreatment1DieselExhaustFluidTankFillValveCommand_spn5434'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.4) # Unit = %
    data['Aftertreatment1DieselExhaustFluidPumpState_spn5435'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment1DieselExhaustFluidPumpPowerRelay_spn7416'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment1DieselExhaustFluidPump_spn7107'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment1DieselExhaustFluidTankDrainValveCommand_spn5436'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 0.4) # Unit = %
    data['Aftertreatment1DieselExhaustFluidDosingUnit2DiverterValve_spn7536'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 0.4) # Unit = %
    return data

# A1SCRRT2I
def PGN_64829(msg, data):
    data['Aftertreatment1DieselExhaustFluidQuickThawTankVolume_spn4367'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 0.4) # Unit = %
    data['Aftertreatment1DieselExhaustFluidQuickThawTankTemperature_spn4368'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['Aftertreatment1DieselExhaustFluidQuickThawTankLevel_spn4369'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.1) # Unit = mm
    data['Aftertreatment1DieselExhaustFluidQuickThawLevel/VolumePreliminaryFMI_spn4370'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['Aftertreatment1DieselExhaustFluidQuickThawTemperaturePreliminaryFMI_spn4371'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['Aftertreatment1DieselExhaustFluidQuickThawHeater_spn4372'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 0.4) # Unit = %
    data['Aftertreatment1DieselExhaustFluidQuickThawHeaterPreliminaryFMI_spn4373'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    return data

# A1SCREGT1
def PGN_64830(msg, data):
    data['Aftertreatment1SCRIntakeTemperature_spn4360'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['Aftertreatment1SCRIntakeTemperaturePreliminaryFMI_spn4361'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00011111)), 31)  * 1.0) # Unit = bit
    data['Aftertreatment1SCROutletTemperature_spn4363'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['Aftertreatment1SCROutletTemperaturePreliminaryFMI_spn4362'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00011111)), 31)  * 1.0) # Unit = bit
    return data

# A1SCREGP
def PGN_64831(msg, data):
    data['Aftertreatment1SCRDifferentialPressure_spn4358'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    data['Aftertreatment1SCRDifferentialPressurePreliminaryFMI_spn4359'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00011111)), 31)  * 1.0) # Unit = bit
    data['Aftertreatment1SCRIntakePressure_spn6586'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 0.1) - 3212.7 # Unit = kPa
    data['Aftertreatment1SCRIntakeAbsolutePressure_spn6797'] = ( enforceMaxV(( (int(msg[10:12], 16)) + ((int(msg[12:14], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    return data

# A1SCRDSR2
def PGN_64832(msg, data):
    data['Aftertreatment1DieselExhaustFluidDoserFaultSuppressionRequest_spn4352'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment1DieselExhaustFluidDoserHeatingModeRequest_spn4353'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b01110000) >> 4)), 7)  * 1.0) # Unit = bit
    data['Aftertreatment1DieselExhaustFluidLineHeater1_spn4354'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment1DieselExhaustFluidLineHeater2_spn4355'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment1DieselExhaustFluidLineHeater3_spn4356'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment1DieselExhaustFluidLineHeater4_spn4357'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment1DieselExhaustFluidTankHeaterCommand_spn5137'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 0.4) # Unit = %
    data['Aftertreatment1DieselExhaustFluidQuickThawHeaterCommand_spn5414'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 0.4) # Unit = %
    data['Aftertreatment1DieselExhaustFluidPumpHeaterCommand_spn5707'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.4) # Unit = %
    data['Aftertreatment1DieselExhaustFluidLineHeaterRelay1_spn5491'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment1DieselExhaustFluidLineHeaterRelay2_spn7069'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment1DieselExhaustFluidLineHeaterRelay3_spn7540'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment1DieselExhaustFluidLineHeater5_spn7561'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment1DieselExhaustFluidLineHeater6_spn7562'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment1DieselExhaustFluidLineHeater7_spn7563'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment1DieselExhaustFluidLineHeater8_spn7564'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment1DieselExhaustFluidLineHeater9_spn7565'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment1DieselExhaustFluidLineHeater10_spn7566'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    return data

# A1SCRDSI2
def PGN_64833(msg, data):
    data['Aftertreatment1SCRDosingAirAssistAbsolutePressure_spn4335'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 8.0) # Unit = kPa
    data['Aftertreatment1SCRDosingAirAssistValve_spn4336'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 0.4) # Unit = %
    data['Aftertreatment1DieselExhaustFluidDoser1Temperature_spn4337'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['Aftertreatment1SCRDoserValveExhaustTemperatureReductionRequest_spn4338'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000111)), 7)  * 1.0) # Unit = bit
    data['Aftertreatment1SCRFeedbackControlStatus_spn4339'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00111000) >> 3)), 7)  * 1.0) # Unit = bit
    data['Aftertreatment1DieselExhaustFluidLineHeater1State_spn4340'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment1DieselExhaustFluidLineHeater1PreliminaryFMI_spn4341'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b01111100) >> 2)), 31)  * 1.0) # Unit = binary
    data['Aftertreatment1DieselExhaustFluidLineHeater2State_spn4342'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment1DieselExhaustFluidLineHeater2PreliminaryFMI_spn4343'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b01111100) >> 2)), 31)  * 1.0) # Unit = binary
    data['Aftertreatment1DieselExhaustFluidLineHeater3State_spn4344'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment1DieselExhaustFluidLineHeater3PreliminaryFMI_spn4345'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b01111100) >> 2)), 31)  * 1.0) # Unit = binary
    data['Aftertreatment1DieselExhaustFluidLineHeater4State_spn4346'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment1DieselExhaustFluidLineHeater4PreliminaryFMI_spn4347'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b01111100) >> 2)), 31)  * 1.0) # Unit = binary
    return data

# AT2FC2
def PGN_64836(msg, data):
    data['Aftertreatment2FuelPressure2_spn4303'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    data['Aftertreatment2FuelPumpRelayControl_spn5426'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment2FuelFlowDiverterValveControl_spn5427'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment2FuelPressure2Control_spn5428'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    return data

# AT2TWC
def PGN_64837(msg, data):
    data['Aftertreatment2ThreeWayCatalystIntakeTemperature_spn4295'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['Aftertreatment2ThreeWayCatalystOutletTemperature_spn4296'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['Aftertreatment2ThreeWayCatalystDifferentialPressure_spn4297'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    data['Aftertreatment2ThreeWayCatalystIntakeTemperaturePreliminaryFMI_spn4298'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['Aftertreatment2ThreeWayCatalystOutletTemperaturePreliminaryFMI_spn4299'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11100000) >> 5) + ((int(msg[14:16], 16) & 0b00000011) << 3 )), 31)  * 1.0) # Unit = binary
    data['Aftertreatment2ThreeWayCatalyticConverterDifferentialPressurePreliminaryFMI_spn4300'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b01111100) >> 2)), 31)  * 1.0) # Unit = binary
    return data

# AT1TWC
def PGN_64838(msg, data):
    data['Aftertreatment1ThreeWayCatalystIntakeTemperature_spn4289'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['Aftertreatment1ThreeWayCatalystOutletTemperature_spn4290'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['Aftertreatment1ThreeWayCatalystDifferentialPressure_spn4291'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    data['Aftertreatment1ThreeWayCatalystIntakeTemperaturePreliminaryFMI_spn4292'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['Aftertreatment1ThreeWayCatalystOutletTemperaturePreliminaryFMI_spn4293'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11100000) >> 5) + ((int(msg[14:16], 16) & 0b00000011) << 3 )), 31)  * 1.0) # Unit = binary
    data['Aftertreatment1ThreeWayCatalyticConverterDifferentialPressurePreliminaryFMI_spn4294'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b01111100) >> 2)), 31)  * 1.0) # Unit = binary
    return data

# O2FT2
def PGN_64840(msg, data):
    data['Long-termFuelTrim-Bank2_spn4239'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.1) - 3212.75 # Unit = %
    data['Short-termFuelTrim-Bank2_spn4238'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.1) - 3212.75 # Unit = %
    data['EngineExhaustBank2O2SensorClosedLoopOperation_spn4241'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    return data

# O2FT1
def PGN_64841(msg, data):
    data['Long-termFuelTrim-Bank1_spn4237'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.1) - 3212.75 # Unit = %
    data['Short-termFuelTrim-Bank1_spn4236'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.1) - 3212.75 # Unit = %
    data['EngineExhaustBank1O2SensorClosedLoopOperation_spn4240'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    return data

# ACCVC
def PGN_64849(msg, data):
    data['AftercoolerCoolantThermostatMode_spn4198'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['DesiredAftercoolerCoolantIntakeTemperature_spn4199'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['DesiredAftercoolerCoolantThermostatOpening_spn4200'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 0.4) # Unit = %
    data['EngineChargeAirCoolerBypassValve1Command_spn7421'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    data['EngineChargeAirCoolerBypassValve2Command_spn7422'] = ( enforceMaxV(( (int(msg[10:12], 16)) + ((int(msg[12:14], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    return data

# ECCVC
def PGN_64850(msg, data):
    data['EngineCoolantThermostatMode_spn4195'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['DesiredEngineCoolantPumpOutletTemperature_spn4196'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['DesiredEngineCoolantThermostatOpening_spn4197'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 0.4) # Unit = %
    data['EngineAuxiliaryCoolerSupplyValve1ActuatorCommand_spn5546'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 0.4) # Unit = %
    data['EngineAuxiliaryCoolerSupplyValve2ActuatorCommand_spn5547'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.4) # Unit = %
    return data

# EAI
def PGN_64851(msg, data):
    data['EngineExhaustTemperatureAverage_spn4151'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineExhaustBank1TemperatureAverage_spn4153'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineExhaustBank2TemperatureAverage_spn4152'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    return data

# AT1FC2
def PGN_64869(msg, data):
    data['Aftertreatment1FuelPressure2_spn4077'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    data['Aftertreatment1FuelPumpRelayControl_spn5423'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment1FuelFlowDiverterValveControl_spn5424'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment1FuelPressure2Control_spn5425'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    data['Aftertreatment1HydrocarbonDoserIntakeFuelTemperature_spn5456'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    return data

# ET4
def PGN_64870(msg, data):
    data['EngineCoolantTemperature2_spn4076'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['EngineCoolantPumpOutletTemperature_spn4193'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['EngineCoolantThermostatOpening_spn4194'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 0.4) # Unit = %
    data['EngineExhaustValveActuationSystemOilTemperature_spn4288'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineExhaustGasRecirculation1MixerIntakeTemperature_spn5020'] = ( enforceMaxV(( (int(msg[10:12], 16)) + ((int(msg[12:14], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineCoolantTemperature3_spn6209'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    return data

# ZNVW
def PGN_64871(msg, data):
    data['ZeroNetVehicleWeightChange_spn4075'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    return data

# GCVW
def PGN_64872(msg, data):
    data['GrossCombinationWeight_spn417'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 )), 16449535)  * 2.0) # Unit = kg
    data['NetVehicleWeightChange_spn413'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 ) + ((int(msg[10:12], 16)) << 16 )), 16449535)  * 2.0) - 16449535.0 # Unit = kg
    return data

# AGCW
def PGN_64873(msg, data):
    data['AxleGroupLocation_spn4074'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['AdditionalAxleGroupLocation_spn5936'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['AxleGroupEmptyWeightCalibration_spn408'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 )), 64255)  * 2.0) # Unit = kg
    data['AxleGroupFullWeightCalibration_spn407'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 2.0) # Unit = kg
    return data

# AGW
def PGN_64874(msg, data):
    data['AxleGroupLocation_spn4073'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['AdditionalAxleGroupLocation_spn5935'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['AxleGroupWeight_spn409'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 )), 64255)  * 2.0) # Unit = kg
    return data

# AAGW
def PGN_64875(msg, data):
    data['SoleorForward-mostSteerAxleGroupWeightAvailable_spn4059'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['LiftAxleGroupWeightAvailable_spn4060'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['SoleorForward-mostDriveAxleGroupWeightAvailable_spn4061'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['TagAxleGroupWeightAvailable_spn4062'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['AdditionalTractorAxleGroupWeightAvailable_spn4063'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['TrailerAAxleGroupWeightAvailable_spn4064'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['TrailerBAxleGroupWeightAvailable_spn4065'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['TrailerCAxleGroupWeightAvailable_spn4066'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['TrailerDAxleGroupWeightAvailable_spn4067'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['TrailerEAxleGroupWeightAvailable_spn4068'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['TrailerFAxleGroupWeightAvailable_spn4069'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['TrailerGAxleGroupWeightAvailable_spn4070'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['TrailerHAxleGroupWeightAvailable_spn4071'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['AdditionalTrailerAxleGroupWeightAvailable_spn4072'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['RearSteerAxleGroupWeightAvailable_spn5933'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['RearDriveAxleGroupWeightAvailable_spn5934'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# AT2AC2
def PGN_64876(msg, data):
    data['Aftertreatment2SecondaryAirDifferentialPressure_spn3833'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64259)  * 0.007812) - 250.0 # Unit = kPa
    data['Aftertreatment2SecondaryAirTemperature_spn3834'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['Aftertreatment2SecondaryAirMassFlowRate_spn3835'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.2) # Unit = kg/h
    data['Aftertreatment2SecondaryAirPressure_spn3838'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    return data

# AT1AC2
def PGN_64877(msg, data):
    data['Aftertreatment1SecondaryAirDifferentialPressure_spn3830'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64259)  * 0.007812) - 250.0 # Unit = kPa
    data['Aftertreatment1SecondaryAirTemperature_spn3831'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['Aftertreatment1SecondaryAirMassFlowRate_spn3832'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.2) # Unit = kg/h
    data['Aftertreatment1SecondaryAirPressure_spn3837'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    return data

# A1SCRSI1
def PGN_64878(msg, data):
    data['Aftertreatment1DieselExhaustFluidAverageConsumption_spn3826'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) # Unit = l/h
    data['Aftertreatment1SCRCommandedDieselExhaustFluidConsumption_spn3828'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) # Unit = l/h
    data['Aftertreatment1SCRConversionEfficiency_spn4364'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.4) # Unit = %
    data['AftertreatmentSCROperatorInducementActiveTraveledDistance_spn5463'] = ( enforceMaxV(( (int(msg[10:12], 16)) + ((int(msg[12:14], 16)) << 8 )), 64255)  * 1.0) # Unit = km
    data['Aftertreatment1SCRSystemSulfationLevel_spn7504'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 1.0) # Unit = %
    return data

# EEC8
def PGN_64879(msg, data):
    data['EngineExhaustGasRecirculation1Valve2Control_spn3821'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    data['EngineExhaustGasRecirculation1CoolerIntakeTemperature_spn4750'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineExhaustGasRecirculation1CoolerIntakeAbsolutePressure_spn4751'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.5) # Unit = kPa
    data['EngineExhaustGasRecirculation1CoolerEfficiency_spn4752'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 0.4) # Unit = %
    return data

# DRC
def PGN_64880(msg, data):
    data['RetractStatusoframp1_spn3810'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Enablestatusoframp1_spn3811'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Movementstatusoframp1_spn3812'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['RetractStatusoframp2_spn3813'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Enablestatusoframp2_spn3814'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Movementstatusoframp2_spn3815'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['RetractStatusoframp3_spn3816'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Enablestatusoframp3_spn3817'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Movementstatusoframp3_spn3818'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['RetractStatusoframp4_spn4454'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Enablestatusoframp4_spn4455'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Movementstatusoframp4_spn4456'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['RetractStatusoframp5_spn4457'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Enablestatusoframp5_spn4458'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Movementstatusoframp5_spn4459'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    return data

# BSA
def PGN_64881(msg, data):
    data['TractorBrakeStrokeAxle1Left_spn3785'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000111)), 7)  * 1.0) # Unit = bit
    data['TractorBrakeStrokeAxle1Right_spn3786'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00111000) >> 3)), 7)  * 1.0) # Unit = bit
    data['TractorBrakeStrokeAxle2Left_spn3787'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6) + (((int(msg[2:4], 16) & 0b10000000) >> 7) << 2 )), 7)  * 1.0) # Unit = bit
    data['TractorBrakeStrokeAxle2Right_spn3788'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001110) >> 1)), 7)  * 1.0) # Unit = bit
    data['TractorBrakeStrokeAxle3Left_spn3789'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b01110000) >> 4)), 7)  * 1.0) # Unit = bit
    data['TractorBrakeStrokeAxle3Right_spn3790'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b10000000) >> 7) + ((int(msg[4:6], 16) & 0b00000011) << 1 )), 7)  * 1.0) # Unit = bit
    data['TractorBrakeStrokeAxle4Left_spn3791'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00011100) >> 2)), 7)  * 1.0) # Unit = bit
    data['TractorBrakeStrokeAxle4Right_spn3792'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11100000) >> 5)), 7)  * 1.0) # Unit = bit
    data['TractorBrakeStrokeAxle5Left_spn3793'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000111)), 7)  * 1.0) # Unit = bit
    data['TractorBrakeStrokeAxle5Right_spn3794'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00111000) >> 3)), 7)  * 1.0) # Unit = bit
    data['TrailerBrakeStrokeAxle1Left_spn3795'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11000000) >> 6) + (((int(msg[8:10], 16) & 0b10000000) >> 7) << 2 )), 7)  * 1.0) # Unit = bit
    data['TrailerBrakeStrokeAxle1Right_spn3796'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00001110) >> 1)), 7)  * 1.0) # Unit = bit
    data['TrailerBrakeStrokeAxle2Left_spn3797'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b01110000) >> 4)), 7)  * 1.0) # Unit = bit
    data['TrailerBrakeStrokeAxle2Right_spn3798'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b10000000) >> 7) + ((int(msg[10:12], 16) & 0b00000011) << 1 )), 7)  * 1.0) # Unit = bit
    data['TrailerBrakeStrokeAxle3Left_spn3799'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00011100) >> 2)), 7)  * 1.0) # Unit = bit
    data['TrailerBrakeStrokeAxle3Right_spn3800'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b11100000) >> 5)), 7)  * 1.0) # Unit = bit
    data['TrailerBrakeStrokeAxle4Left_spn3801'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000111)), 7)  * 1.0) # Unit = bit
    data['TrailerBrakeStrokeAxle4Right_spn3802'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00111000) >> 3)), 7)  * 1.0) # Unit = bit
    data['TrailerBrakeStrokeAxle5Left_spn3803'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11000000) >> 6) + (((int(msg[14:16], 16) & 0b10000000) >> 7) << 2 )), 7)  * 1.0) # Unit = bit
    data['TrailerBrakeStrokeAxle5Right_spn3804'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00001110) >> 1)), 7)  * 1.0) # Unit = bit
    return data

# ESV6
def PGN_64882(msg, data):
    data['EngineSparkPlug21_spn1314'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['EngineSparkPlug22_spn1315'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['EngineSparkPlug23_spn1316'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['EngineSparkPlug24_spn1317'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    return data

# ESV5
def PGN_64883(msg, data):
    data['EngineSparkPlug17_spn1310'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['EngineSparkPlug18_spn1311'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['EngineSparkPlug19_spn1312'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['EngineSparkPlug20_spn1313'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    return data

# ESV4
def PGN_64884(msg, data):
    data['EngineSparkPlug13_spn1306'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['EngineSparkPlug14_spn1307'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['EngineSparkPlug15_spn1308'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['EngineSparkPlug16_spn1309'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    return data

# ESV3
def PGN_64885(msg, data):
    data['EngineSparkPlug9_spn1302'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['EngineSparkPlug10_spn1303'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['EngineSparkPlug11_spn1304'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['EngineSparkPlug12_spn1305'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    return data

# ESV2
def PGN_64886(msg, data):
    data['EngineSparkPlug5_spn1298'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['EngineSparkPlug6_spn1299'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['EngineSparkPlug7_spn1300'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['EngineSparkPlug8_spn1301'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    return data

# ESV1
def PGN_64887(msg, data):
    data['EngineSparkPlug1_spn1294'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['EngineSparkPlug2_spn1295'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['EngineSparkPlug3_spn1296'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['EngineSparkPlug4_spn1297'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    return data

# AT2TI
def PGN_64888(msg, data):
    data['Aftertreatment2DieselParticulateFilterTripFuelUsed_spn3741'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 0.5) # Unit = l
    data['Aftertreatment2DieselParticulateFilterTripActiveRegenerationTime_spn3742'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 ) + ((int(msg[12:14], 16)) << 16 ) + ((int(msg[14:16], 16)) << 24 )), 4211081215)  * 1.0) # Unit = s
    data['Aftertreatment2DieselParticulateFilterTripDisabledTime_spn3743'] = ( enforceMaxV(( (int(msg[16:18], 16)) + ((int(msg[18:20], 16)) << 8 ) + ((int(msg[20:22], 16)) << 16 ) + ((int(msg[22:24], 16)) << 24 )), 4211081215)  * 1.0) # Unit = s
    data['Aftertreatment2DieselParticulateFilterTripNumberofActiveRegenerations_spn3744'] = ( enforceMaxV(( (int(msg[24:26], 16)) + ((int(msg[26:28], 16)) << 8 ) + ((int(msg[28:30], 16)) << 16 ) + ((int(msg[30:32], 16)) << 24 )), 4211081215)  * 1.0) # Unit = count
    data['Aftertreatment2DieselParticulateFilterTripPassiveRegenerationTime_spn3745'] = ( enforceMaxV(( (int(msg[32:34], 16)) + ((int(msg[34:36], 16)) << 8 ) + ((int(msg[36:38], 16)) << 16 ) + ((int(msg[38:40], 16)) << 24 )), 4211081215)  * 1.0) # Unit = s
    data['Aftertreatment2DieselParticulateFilterTripNumberofPassiveRegenerations_spn3746'] = ( enforceMaxV(( (int(msg[40:42], 16)) + ((int(msg[42:44], 16)) << 8 ) + ((int(msg[44:46], 16)) << 16 ) + ((int(msg[46:48], 16)) << 24 )), 4211081215)  * 1.0) # Unit = count
    data['Aftertreatment2DieselParticulateFilterTripNumberofActiveRegenerationInhibitRequests_spn3747'] = ( enforceMaxV(( (int(msg[48:50], 16)) + ((int(msg[50:52], 16)) << 8 ) + ((int(msg[52:54], 16)) << 16 ) + ((int(msg[54:56], 16)) << 24 )), 4211081215)  * 1.0) # Unit = count
    data['Aftertreatment2DieselParticulateFilterTripNumberofActiveRegenerationManualRequests_spn3748'] = ( enforceMaxV(( (int(msg[56:58], 16)) + ((int(msg[58:60], 16)) << 8 ) + ((int(msg[60:62], 16)) << 16 ) + ((int(msg[62:64], 16)) << 24 )), 4211081215)  * 1.0) # Unit = count
    return data

# AT1TI
def PGN_64889(msg, data):
    data['Aftertreatment1DieselParticulateFilterTripFuelUsed_spn3733'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 0.5) # Unit = l
    data['Aftertreatment1DieselParticulateFilterTripActiveRegenerationTime_spn3734'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 ) + ((int(msg[12:14], 16)) << 16 ) + ((int(msg[14:16], 16)) << 24 )), 4211081215)  * 1.0) # Unit = s
    data['Aftertreatment1DieselParticulateFilterTripDisabledTime_spn3735'] = ( enforceMaxV(( (int(msg[16:18], 16)) + ((int(msg[18:20], 16)) << 8 ) + ((int(msg[20:22], 16)) << 16 ) + ((int(msg[22:24], 16)) << 24 )), 4211081215)  * 1.0) # Unit = s
    data['Aftertreatment1DieselParticulateFilterTripNumberofActiveRegenerations_spn3736'] = ( enforceMaxV(( (int(msg[24:26], 16)) + ((int(msg[26:28], 16)) << 8 ) + ((int(msg[28:30], 16)) << 16 ) + ((int(msg[30:32], 16)) << 24 )), 4211081215)  * 1.0) # Unit = count
    data['Aftertreatment1DieselParticulateFilterTripPassiveRegenerationTime_spn3737'] = ( enforceMaxV(( (int(msg[32:34], 16)) + ((int(msg[34:36], 16)) << 8 ) + ((int(msg[36:38], 16)) << 16 ) + ((int(msg[38:40], 16)) << 24 )), 4211081215)  * 1.0) # Unit = s
    data['Aftertreatment1DieselParticulateFilterTripNumberofPassiveRegenerations_spn3738'] = ( enforceMaxV(( (int(msg[40:42], 16)) + ((int(msg[42:44], 16)) << 8 ) + ((int(msg[44:46], 16)) << 16 ) + ((int(msg[46:48], 16)) << 24 )), 4211081215)  * 1.0) # Unit = count
    data['Aftertreatment1DieselParticulateFilterTripNumberofActiveRegenerationInhibitRequests_spn3739'] = ( enforceMaxV(( (int(msg[48:50], 16)) + ((int(msg[50:52], 16)) << 8 ) + ((int(msg[52:54], 16)) << 16 ) + ((int(msg[54:56], 16)) << 24 )), 4211081215)  * 1.0) # Unit = count
    data['Aftertreatment1DieselParticulateFilterTripNumberofActiveRegenerationManualRequests_spn3740'] = ( enforceMaxV(( (int(msg[56:58], 16)) + ((int(msg[58:60], 16)) << 8 ) + ((int(msg[60:62], 16)) << 16 ) + ((int(msg[62:64], 16)) << 24 )), 4211081215)  * 1.0) # Unit = count
    return data

# AT2S1
def PGN_64890(msg, data):
    data['Aftertreatment2DieselParticulateFilterSootLoadPercent_spn3722'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) # Unit = %
    data['Aftertreatment2DieselParticulateFilterAshLoadPercent_spn3723'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) # Unit = %
    data['Aftertreatment2DieselParticulateFilterTimeSinceLastActiveRegeneration_spn3724'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 ) + ((int(msg[8:10], 16)) << 16 ) + ((int(msg[10:12], 16)) << 24 )), 4211081215)  * 1.0) # Unit = s
    data['Aftertreatment2DieselParticulateFilterSootLoadRegenerationThreshold_spn5467'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    return data

# AT1S1
def PGN_64891(msg, data):
    data['Aftertreatment1DieselParticulateFilterSootLoadPercent_spn3719'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) # Unit = %
    data['Aftertreatment1DieselParticulateFilterAshLoadPercent_spn3720'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) # Unit = %
    data['Aftertreatment1DieselParticulateFilterTimeSinceLastActiveRegeneration_spn3721'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 ) + ((int(msg[8:10], 16)) << 16 ) + ((int(msg[10:12], 16)) << 24 )), 4211081215)  * 1.0) # Unit = s
    data['Aftertreatment1DieselParticulateFilterSootLoadRegenerationThreshold_spn5466'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    return data

# DPFC1
def PGN_64892(msg, data):
    data['DieselParticulateFilterLampCommand_spn3697'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000111)), 7)  * 1.0) # Unit = bit
    data['DieselParticulateFilterActiveRegenerationAvailabilityStatus_spn8857'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00011000) >> 3)), 3)  * 1.0) # Unit = bit
    data['AftertreatmentDieselParticulateFilterPassiveRegenerationStatus_spn3699'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['AftertreatmentDieselParticulateFilterActiveRegenerationStatus_spn3700'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['AftertreatmentDieselParticulateFilterStatus_spn3701'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b01110000) >> 4)), 7)  * 1.0) # Unit = bit
    data['DieselParticulateFilterActiveRegenerationInhibitedStatus_spn3702'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['DieselParticulateFilterActiveRegenerationInhibitedDuetoInhibitSwitch_spn3703'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['DieselParticulateFilterActiveRegenerationInhibitedDuetoClutchDisengaged_spn3704'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['DieselParticulateFilterActiveRegenerationInhibitedDuetoServiceBrakeActive_spn3705'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['DieselParticulateFilterActiveRegenerationInhibitedDuetoPTOActive_spn3706'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['DieselParticulateFilterActiveRegenerationInhibitedDuetoAcceleratorPedalOffIdle_spn3707'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['DieselParticulateFilterActiveRegenerationInhibitedDuetoOutofNeutral_spn3708'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['DieselParticulateFilterActiveRegenerationInhibitedDuetoVehicleSpeedAboveAllowedSpeed_spn3709'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['DieselParticulateFilterActiveRegenerationInhibitedDuetoParkingBrakeNotSet_spn3710'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['DieselParticulateFilterActiveRegenerationInhibitedDuetoLowExhaustTemperature_spn3711'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['DieselParticulateFilterActiveRegenerationInhibitedDuetoSystemFaultActive_spn3712'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['DieselParticulateFilterActiveRegenerationInhibitedDuetoSystemTimeout_spn3713'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['DieselParticulateFilterActiveRegenerationInhibitedDuetoTemporarySystemLockout_spn3714'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['DieselParticulateFilterActiveRegenerationInhibitedDuetoPermanentSystemLockout_spn3715'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['DieselParticulateFilterActiveRegenerationInhibitedDuetoEngineNotWarmedUp_spn3716'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['DieselParticulateFilterActiveRegenerationInhibitedDuetoVehicleSpeedBelowAllowedSpeed_spn3717'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['DieselParticulateFilterAutomaticActiveRegenerationInitiationConfiguration_spn3718'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['ExhaustSystemHighTemperatureLampCommand_spn3698'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00011100) >> 2)), 7)  * 1.0) # Unit = bit
    data['DieselParticulateFilterActiveRegenerationForcedStatus_spn4175'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11100000) >> 5)), 7)  * 1.0) # Unit = bit
    data['HydrocarbonDoserPurgingEnable_spn5504'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['DieselParticulateFilterActiveRegenerationInhibitedDuetoLowExhaustPressure_spn5629'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment1DieselParticulateFilterConditionsNotMetforActiveRegeneration_spn3750'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['DieselParticulateFilterActiveRegenerationInhibitedDuetoThresher_spn10153'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# AFSS
def PGN_64894(msg, data):
    data['LeftHeadlampDynamicBendingLight_spn3691'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000111)), 7)  * 1.0) # Unit = bit
    data['RightHeadlampDynamicBendingLight_spn3692'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00111000) >> 3)), 7)  * 1.0) # Unit = bit
    data['LeftHeadlampLightDistribution_spn3693'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['RightHeadlampLightDistribution_spn3694'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    return data

# EGRBV
def PGN_64897(msg, data):
    data['EngineExhaustGasRecirculation1CoolerBypassActuatorPosition_spn3672'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 0.4) # Unit = %
    return data

# TCI
def PGN_64899(msg, data):
    data['Transfercasestatus_spn3645'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000111)), 7)  * 1.0) # Unit = bit
    data['TransferCaseDirectionStatus_spn8849'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00011000) >> 3)), 3)  * 1.0) # Unit = bit
    data['TransferCaseActualGearRatio_spn9170'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 )), 64255)  * 0.01) # Unit = 
    data['TransferCaseMessageCounter_spn9171'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00001111)), 15)  * 1.0) # Unit = count
    data['TransferCaseMessageChecksum_spn9172'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = count
    return data

# EFL/P9
def PGN_64900(msg, data):
    data['EngineIntakeValveActuationOilPressureforCylinder_17_spn3640'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    data['EngineIntakeValveActuationOilPressureforCylinder_18_spn3641'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    data['EngineIntakeValveActuationOilPressureforCylinder_19_spn3642'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    data['EngineIntakeValveActuationOilPressureforCylinder_20_spn3643'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    return data

# EFL/P8
def PGN_64901(msg, data):
    data['EngineIntakeValveActuationOilPressureforCylinder_13_spn3636'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    data['EngineIntakeValveActuationOilPressureforCylinder_14_spn3637'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    data['EngineIntakeValveActuationOilPressureforCylinder_15_spn3638'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    data['EngineIntakeValveActuationOilPressureforCylinder_16_spn3639'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    return data

# EFL/P7
def PGN_64902(msg, data):
    data['EngineIntakeValveActuationOilPressureforCylinder_9_spn3632'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    data['EngineIntakeValveActuationOilPressureforCylinder_10_spn3633'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    data['EngineIntakeValveActuationOilPressureforCylinder_11_spn3634'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    data['EngineIntakeValveActuationOilPressureforCylinder_12_spn3635'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    return data

# EFL/P6
def PGN_64903(msg, data):
    data['EngineIntakeValveActuationOilPressureforCylinder_5_spn3628'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    data['EngineIntakeValveActuationOilPressureforCylinder_6_spn3629'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    data['EngineIntakeValveActuationOilPressureforCylinder_7_spn3630'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    data['EngineIntakeValveActuationOilPressureforCylinder_8_spn3631'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    return data

# EFL/P5
def PGN_64904(msg, data):
    data['EngineIntakeValveActuationOilPressureforCylinder_1_spn3624'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    data['EngineIntakeValveActuationOilPressureforCylinder_2_spn3625'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    data['EngineIntakeValveActuationOilPressureforCylinder_3_spn3626'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    data['EngineIntakeValveActuationOilPressureforCylinder_4_spn3627'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    return data

# VDS2
def PGN_64905(msg, data):
    data['VehicleRoll_spn3623'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64259)  * 0.007812) - 200.0 # Unit = deg
    return data

# AT2GP
def PGN_64907(msg, data):
    data['Aftertreatment2DieselParticulateFilterIntakePressure_spn3611'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    data['Aftertreatment2DieselParticulateFilterOutletPressure_spn3612'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    return data

# AT1GP
def PGN_64908(msg, data):
    data['Aftertreatment1DieselParticulateFilterIntakePressure_spn3609'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    data['Aftertreatment1DieselParticulateFilterOutletPressure_spn3610'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    return data

# UTACER
def PGN_64909(msg, data):
    data['UtilityTotalkVArHoursExport_spn3595'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 1.0) # Unit = kVArh
    data['UtilityTotalkVArHoursImport_spn3596'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 ) + ((int(msg[12:14], 16)) << 16 ) + ((int(msg[14:16], 16)) << 24 )), 4211081215)  * 1.0) # Unit = kVArh
    return data

# GTACER
def PGN_64910(msg, data):
    data['GeneratorTotalkVArHoursExport_spn3593'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 1.0) # Unit = kVArh
    data['GeneratorTotalkVArHoursImport_spn3594'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 ) + ((int(msg[12:14], 16)) << 16 ) + ((int(msg[14:16], 16)) << 24 )), 4211081215)  * 1.0) # Unit = kVArh
    return data

# GTACPP
def PGN_64911(msg, data):
    data['GeneratorTotalPercentkW_spn3590'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.0078125) - 251.0 # Unit = %
    data['GeneratorTotalPercentkVA_spn3591'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.0078125) - 251.0 # Unit = %
    data['GeneratorTotalPercentkVAr_spn3592'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.0078125) - 251.0 # Unit = %
    return data

# ACS
def PGN_64913(msg, data):
    data['GeneratorCircuitBreakerStatus_spn3545'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000111)), 7)  * 1.0) # Unit = bit
    data['UtilityCircuitBreakerStatus_spn3546'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00111000) >> 3)), 7)  * 1.0) # Unit = bit
    data['AutomaticTransferSwitchStatus_spn3547'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000111)), 7)  * 1.0) # Unit = bit
    data['EngineSpeedGovernorMode_spn7840'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00011000) >> 3)), 3)  * 1.0) # Unit = bit
    data['BusTieBreaker1_spn7841'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11100000) >> 5)), 7)  * 1.0) # Unit = bit
    data['BusTieBreaker2_spn7842'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000111)), 7)  * 1.0) # Unit = bit
    data['EngineLoadGroup_spn7843'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11111000) >> 3)), 31)  * 1.0) # Unit = count
    data['PackageCircuitBreakerStatus_spn9792'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000111)), 7)  * 1.0) # Unit = bit
    data['StationaryInverterCircuitBreakerStatus_spn9793'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00111000) >> 3)), 7)  * 1.0) # Unit = bit
    return data

# EOI
def PGN_64914(msg, data):
    data['EngineOperatingState_spn3543'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['FuelPumpPrimerControl_spn4082'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['EngineStarterMotorRelayControl_spn6385'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['TimeRemaininginEngineOperatingState_spn3544'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 )), 64255)  * 1.0) # Unit = s
    data['EngineFuelShutoffVentControl_spn3608'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EngineFuelShutoff1Control_spn632'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['EngineFuelShutoff2Control_spn2807'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['EngineFuelShutoffValveLeakTestControl_spn3601'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['EngineOilPrimingPumpControl_spn3589'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EngineOilPre-heaterControl_spn3602'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['EngineElectricalSystemPowerConservationControl_spn3603'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['EnginePre-HeaterControl_spn3604'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['EngineCoolantPumpControl_spn3605'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EngineControlledShutdownRequest_spn3606'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['EngineEmergency(Immediate)ShutdownIndication_spn3607'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['EngineColdAmbientElevatedIdleStatus_spn6884'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['EngineDesiredTorqueRequest_spn6807'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 1.0) - 125.0 # Unit = %
    data['EngineDerateRequest_spn3644'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 0.4) # Unit = %
    return data

# GC1
def PGN_64915(msg, data):
    data['RequestedEngineControlMode_spn3542'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['GeneratorControlNotInAutomaticStartState_spn3567'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['GeneratorNotReadytoAutomaticallyParallelState_spn3568'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['GeneratorAlternatorEfficiency_spn4078'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    data['GeneratorGoverningSpeedCommand_spn4079'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['GeneratorFrequencySelection_spn4080'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00111100) >> 2)), 15)  * 1.0) # Unit = bit
    data['EngineSpeedGovernorGainAdjust_spn5567'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 1.0) - 32128.0 # Unit = count
    data['EngineSpeedGovernorDroop_spn5568'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 0.04) # Unit = %
    return data

# EEC7
def PGN_64916(msg, data):
    data['EngineExhaustGasRecirculation1ValvePosition_spn27'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    data['EngineExhaustGasRecirculation1Valve2Position_spn3822'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    data['EngineCrankcaseBreatherOilSeparatorSpeed_spn5444'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 1.0) # Unit = rpm
    data['EngineIntakeManifoldCommandedPressure_spn5312'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.125) # Unit = kPa
    return data

# TRF2
def PGN_64917(msg, data):
    data['TransmissionOilFilterRestrictionSwitch_spn3359'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['TransmissionOilLevelSwitch_spn3533'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['TransmissionOverheatIndicator_spn5345'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['TransmissionTorqueConverterOilOutletTemperature_spn3823'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['TransmissionOilLifeRemaining_spn4177'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 0.4) # Unit = %
    data['TransmissionOilTemperature2_spn5913'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['TransmissionOilLevel2High/Low_spn5914'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 0.5) - 62.5 # Unit = l
    data['TransmissionOilLevel2CountdownTimer_spn5915'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['TransmissionOilLevel2MeasurementStatus_spn5916'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    return data

# LFI2
def PGN_64918(msg, data):
    data['EngineFuelSupplyFlowRate_spn2773'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 0.001) # Unit = l/h
    data['EngineFuelReturnFlowRate_spn2774'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 ) + ((int(msg[12:14], 16)) << 16 ) + ((int(msg[14:16], 16)) << 24 )), 4211081215)  * 0.001) # Unit = l/h
    return data

# LFI3
def PGN_64919(msg, data):
    data['EngineFuelSupplyTemperature_spn2775'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['EngineFuelReturnTemperature_spn2776'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    return data

# A1DEFI1
def PGN_64923(msg, data):
    data['Aftertreatment1DieselExhaustFluidTemperature2_spn3515'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['Aftertreatment1DieselExhaustFluidConcentration_spn3516'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 0.25) # Unit = %
    data['Aftertreatment1DieselExhaustFluidConductivity_spn3518'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 5.0) # Unit = ÂµSiemens/mm
    data['Aftertreatment1DieselExhaustFluidTemperature2PreliminaryFMI_spn3519'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['Aftertreatment1DieselExhaustFluidPropertiesPreliminaryFMI_spn3520'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['Aftertreatment1DieselExhaustFluidProperty_spn3521'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['DieselExhaustFluidSpeedofSound_spn7346'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.1) # Unit = m/s
    return data

# SEP2
def PGN_64924(msg, data):
    data['Sensorsupplyvoltage5_spn3513'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['Sensorsupplyvoltage6_spn3514'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['Sensorsupplyvoltage7_spn5125'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['Sensorsupplyvoltage8_spn5126'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    return data

# SEP1
def PGN_64925(msg, data):
    data['Sensorsupplyvoltage1_spn3509'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['Sensorsupplyvoltage2_spn3510'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['Sensorsupplyvoltage3_spn3511'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['Sensorsupplyvoltage4_spn3512'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    return data

# AT2AC1
def PGN_64926(msg, data):
    data['Aftertreatment2SupplyAirPressure_spn3499'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    data['Aftertreatment2PurgeAirPressure_spn3500'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    data['Aftertreatment2AirPressureControl_spn3501'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    data['Aftertreatment2AirPressureActuatorPosition_spn3502'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 0.4) # Unit = %
    data['Aftertreatment2AirSystemRelay_spn3506'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment2AtomizationAirActuator_spn3505'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment2PurgeAirActuator_spn3504'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment2AirEnableActuator_spn3503'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# AT1AC1
def PGN_64927(msg, data):
    data['Aftertreatment1SupplyAirPressure_spn3485'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    data['Aftertreatment1PurgeAirPressure_spn3486'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    data['Aftertreatment1AirPressureControl_spn3487'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    data['Aftertreatment1AirPressureActuatorPosition_spn3488'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 0.4) # Unit = %
    data['Aftertreatment1AirSystemRelay_spn3492'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment1AtomizationAirActuator_spn3491'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment1PurgeAirActuator_spn3490'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment1AirEnableActuator_spn3489'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# AT2FC1
def PGN_64928(msg, data):
    data['Aftertreatment2FuelPressure1_spn3494'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    data['Aftertreatment2FuelRate_spn3495'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) # Unit = l/h
    data['Aftertreatment2FuelPressure1Control_spn3493'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    data['Aftertreatment2FuelDrainActuator_spn4098'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment2Ignition_spn3498'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment2RegenerationStatus_spn3497'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment2FuelEnableActuator_spn3496'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment2FuelInjector1HeaterControl_spn4302'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 0.4) # Unit = %
    return data

# AT1FC1
def PGN_64929(msg, data):
    data['Aftertreatment1FuelPressure1_spn3480'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    data['Aftertreatment1FuelRate_spn3481'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) # Unit = l/h
    data['Aftertreatment1FuelPressure1Control_spn3479'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    data['Aftertreatment1FuelDrainActuator_spn4097'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment1Ignition_spn3484'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment1RegenerationStatus_spn3483'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment1FuelEnableActuator_spn3482'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment1FuelInjector1HeaterControl_spn4301'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 0.4) # Unit = %
    return data

# GFI3
def PGN_64930(msg, data):
    data['EngineFuelValve2IntakeAbsolutePressure_spn3466'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    data['EngineFuelSystem2GasMassFlowRate_spn3467'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) # Unit = kg/h
    data['EngineFuel1Temperature2_spn3468'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['EngineFuelValve2OutletAbsolutePressure_spn3469'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    return data

# EEC6
def PGN_64931(msg, data):
    data['EngineTurbochargerCompressorBypassActuator1Command_spn3470'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    data['EngineVariableGeometryTurbochargerActuator_1_spn641'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 0.4) # Unit = %
    data['EngineTurbochargerCompressorBypassActuator1Position_spn3675'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 0.4) # Unit = %
    data['EngineTurbochargerCompressorBypassActuator2Command_spn5369'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    data['EngineTurbochargerCompressorBypassActuator1DesiredPosition_spn5366'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 0.4) # Unit = %
    data['EngineTurbochargerCompressorBypassActuator1PreliminaryFMI_spn5367'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['EngineTurbochargerCompressorBypassActuator1TemperatureStatus_spn5368'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b11100000) >> 5)), 7)  * 1.0) # Unit = bit
    return data

# PTODE
def PGN_64932(msg, data):
    data['EnableSwitchâTransfercaseoutputshaftPTO_spn3455'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EnableSwitchâTransmissionoutputshaftPTO_spn3454'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['EnableSwitchâTransmissioninputshaftPTO2_spn3453'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['EnableSwitchâTransmissioninputshaftPTO1_spn3452'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['EnableSwitch-PTOEngineFlywheel_spn3939'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EnableSwitch-PTOEngineAccessoryDrive1_spn3942'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['EnableSwitch-PTOEngineAccessoryDrive2_spn3945'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['EngagementConsentâTransfercaseoutputshaftPTO_spn3459'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EngagementConsentâTransmissionoutputshaftPTO_spn3458'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['EngagementConsentâTransmissioninputshaftPTO2_spn3457'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['EngagementConsentâTransmissioninputshaftPTO1_spn3456'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['EngagementConsent-PTOEngineFlywheel_spn3940'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EngagementConsent-PTOEngineAccessoryDrive1_spn3943'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['EngagementConsent-PTOEngineAccessoryDrive2_spn3946'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['EngagementStatusâTransfercaseoutputshaftPTO_spn3463'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EngagementStatusâTransmissionoutputshaftPTO_spn3462'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['EngagementStatusâTransmissioninputshaftPTO2_spn3461'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['EngagementStatusâTransmissioninputshaftPTO1_spn3460'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['EngagementStatus-PTOEngineFlywheel_spn3941'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EngagementStatus-PTOEngineAccessoryDrive1_spn3944'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['EngagementStatus-PTOEngineAccessoryDrive2_spn3947'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['AtleastonePTOengaged_spn3948'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    return data

# DC2
def PGN_64933(msg, data):
    data['LockStatusofDoor1_spn3412'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['OpenStatusofDoor1_spn3413'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['EnableStatusofDoor1_spn3414'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['LockStatusofDoor2_spn3415'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['OpenStatusofDoor2_spn3416'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EnableStatusofDoor2_spn3417'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['LockStatusofDoor3_spn3418'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['OpenStatusofDoor3_spn3419'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['EnableStatusofDoor3_spn3420'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['LockStatusofDoor4_spn3421'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['OpenStatusofDoor4_spn3422'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['EnableStatusofDoor4_spn3423'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['LockStatusofDoor5_spn3424'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['OpenStatusofDoor5_spn3425'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['EnableStatusofDoor5_spn3426'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['LockStatusofDoor6_spn3427'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['OpenStatusofDoor6_spn3428'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EnableStatusofDoor6_spn3429'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['LockStatusofDoor7_spn3430'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['OpenStatusofDoor7_spn3431'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['EnableStatusofDoor7_spn3432'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['LockStatusofDoor8_spn3433'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['OpenStatusofDoor8_spn3434'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['EnableStatusofDoor8_spn3435'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['LockStatusofDoor9_spn3436'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['OpenStatusofDoor9_spn3437'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['EnableStatusofDoor9_spn3438'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['LockStatusofDoor10_spn3439'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['OpenStatusofDoor10_spn3440'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EnableStatusofDoor10_spn3441'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    return data

# VREP
def PGN_64934(msg, data):
    data['GeneratorExcitationFieldVoltage_spn3380'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) - 1606.0 # Unit = V
    data['GeneratorExcitationFieldCurrent_spn3381'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) # Unit = A
    data['GeneratorOutputVoltageBiasPercentage_spn3382'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.1) - 3212.75 # Unit = %
    return data

# VROM
def PGN_64935(msg, data):
    data['VoltageRegulatorLoadCompensationMode_spn3375'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000111)), 7)  * 1.0) # Unit = bit
    data['VoltageRegulatorVAr/PowerFactoroperatingmode_spn3376'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00111000) >> 3)), 7)  * 1.0) # Unit = bit
    data['VoltageRegulatorUnderfrequencyCompensationenabled_spn3377'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['VoltageRegulatorSoftStartState_spn3378'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['VoltageRegulatorEnabled_spn3379'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    return data

# WCM2
def PGN_64936(msg, data):
    data['NetworkTransceiverStatus2_spn3442'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = bit
    data['NetworkServiceStatus2_spn3443'] = ( enforceMaxV(( (int(msg[2:4], 16))), 255)  * 1.0) # Unit = bit
    data['NetworkAntennaStatus2_spn3444'] = ( enforceMaxV(( (int(msg[4:6], 16))), 255)  * 1.0) # Unit = bit
    data['NetworkSignalStrength2_spn3445'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 0.4) # Unit = %
    data['WirelessCommunicationNetworkType2_spn3446'] = ( enforceMaxV(( (int(msg[8:10], 16))), 255)  * 1.0) # Unit = bit
    return data

# WCM1
def PGN_64937(msg, data):
    data['NetworkTransceiverStatus1_spn3368'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = bit
    data['NetworkServiceStatus1_spn3369'] = ( enforceMaxV(( (int(msg[2:4], 16))), 255)  * 1.0) # Unit = bit
    data['NetworkAntennaStatus1_spn3370'] = ( enforceMaxV(( (int(msg[4:6], 16))), 255)  * 1.0) # Unit = bit
    data['NetworkSignalStrength1_spn3371'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 0.4) # Unit = %
    data['WirelessCommunicationNetworkType1_spn3372'] = ( enforceMaxV(( (int(msg[8:10], 16))), 255)  * 1.0) # Unit = bit
    return data

# EFL/P4
def PGN_64938(msg, data):
    data['EngineChargeAirCooler1IntakePressure_spn3340'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 2.0) # Unit = kPa
    data['EngineChargeAirCooler2IntakePressure_spn3341'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 2.0) # Unit = kPa
    data['EngineCoolantPumpDifferentialPressure_spn3342'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.64) - 7.0 # Unit = kPa
    data['EngineCentrifugalOilFilterspeed_spn3343'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 4.0) # Unit = rpm
    data['EngineChargeAirCoolerCoolantLevel_spn3668'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 0.4) # Unit = %
    data['EngineAftercoolerCoolantLevel_spn3676'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 0.4) # Unit = %
    data['EngineChargeAirCoolerOutletPressure_spn2631'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 2.0) # Unit = kPa
    return data

# EFI
def PGN_64940(msg, data):
    data['NumberofFuelConsumptionMonitoringTransducers_spn2777'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) # Unit = count
    data['EngineIdleFuelFlowRateThreshold_spn2778'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 ) + ((int(msg[6:8], 16)) << 16 ) + ((int(msg[8:10], 16)) << 24 )), 4211081215)  * 0.001) # Unit = l/h
    return data

# FWSS2
def PGN_64942(msg, data):
    data['FifthWheelErrorStatus_spn3307'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['FifthWheelLockReadytoCoupleIndicator_spn3312'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['FifthWheelLockCoupleStatusIndicator_spn3313'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['FifthWheelSliderPosition_spn3311'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 10.0) # Unit = mm
    data['FifthWheelSliderLockIndicator_spn3316'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    return data

# AT2IMG
def PGN_64943(msg, data):
    data['Aftertreatment2ExhaustTemperature2_spn3283'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['Aftertreatment2DieselParticulateFilterIntermediateTemperature_spn3284'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['Aftertreatment2DieselParticulateFilterDifferentialPressure_spn3285'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    data['Aftertreatment2ExhaustTemperature2PreliminaryFMI_spn3286'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['Aftertreatment2DieselParticulateFilterDifferentialPressurePreliminaryFMI_spn3287'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11100000) >> 5) + ((int(msg[14:16], 16) & 0b00000011) << 3 )), 31)  * 1.0) # Unit = binary
    data['Aftertreatment2DieselParticulateFilterIntermediateTemperaturePreliminaryFMI_spn3288'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b01111100) >> 2)), 31)  * 1.0) # Unit = binary
    return data

# AT2OG2
def PGN_64944(msg, data):
    data['Aftertreatment2ExhaustTemperature3_spn3279'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['Aftertreatment2DieselParticulateFilterOutletTemperature_spn3280'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['Aftertreatment2ExhaustTemperature3PreliminaryFMI_spn3281'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['Aftertreatment2DieselParticulateFilterExhaustTemperaturePreliminaryFMI_spn3282'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    return data

# AT2IG2
def PGN_64945(msg, data):
    data['Aftertreatment2ExhaustTemperature1_spn3275'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['Aftertreatment2DieselParticulateFilterIntakeTemperature_spn3276'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['Aftertreatment2ExhaustTemperature1PreliminaryFMI_spn3277'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['Aftertreatment2DieselParticulateFilterIntakeTemperaturePreliminaryFMI_spn3278'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    return data

# AT1IMG
def PGN_64946(msg, data):
    data['Aftertreatment1ExhaustTemperature2_spn3249'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['Aftertreatment1DieselParticulateFilterIntermediateTemperature_spn3250'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['Aftertreatment1DieselParticulateFilterDifferentialPressure_spn3251'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    data['Aftertreatment1ExhaustTemperature2PreliminaryFMI_spn3252'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['Aftertreatment1DieselParticulateFilterDifferentialPressurePreliminaryFMI_spn3253'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11100000) >> 5) + ((int(msg[14:16], 16) & 0b00000011) << 3 )), 31)  * 1.0) # Unit = binary
    data['Aftertreatment1DieselParticulateFilterIntermediateTemperaturePreliminaryFMI_spn3254'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b01111100) >> 2)), 31)  * 1.0) # Unit = binary
    return data

# AT1OG2
def PGN_64947(msg, data):
    data['Aftertreatment1ExhaustTemperature3_spn3245'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['Aftertreatment1DieselParticulateFilterOutletTemperature_spn3246'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['Aftertreatment1ExhaustTemperature3PreliminaryFMI_spn3247'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['Aftertreatment1DieselParticulateFilterOutletExhaustTemperaturePreliminaryFMI_spn3248'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    return data

# AT1IG2
def PGN_64948(msg, data):
    data['Aftertreatment1ExhaustTemperature1_spn3241'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['Aftertreatment1DieselParticulateFilterIntakeTemperature_spn3242'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['Aftertreatment1ExhaustTemperature1PreliminaryFMI_spn3243'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['Aftertreatment1DieselParticulateFilterIntakeTemperaturePreliminaryFMI_spn3244'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    return data

# TPRI
def PGN_64953(msg, data):
    data['TireLocation_spn3190'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = bit
    data['ReferenceTirePressure_spn3191'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 8.0) # Unit = kPa
    return data

# TR6
def PGN_64954(msg, data):
    data['FareboxEmergencyStatus_spn3179'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['FareboxAlarmIdentifier_spn3181'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b01111111)), 127)  * 1.0) # Unit = bit
    return data

# TR5
def PGN_64955(msg, data):
    data['TransactionType_spn3170'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['PassengerType_spn3171'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['TypeofFare_spn3176'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['PaymentDetails_spn3177'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['FareValidity_spn3165'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00001111)), 15)  * 1.0) # Unit = count
    data['PassCategory_spn3166'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = count
    data['InitialFareAgency_spn3167'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00011111)), 31)  * 1.0) # Unit = count
    data['TypeofService_spn3172'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000111)), 7)  * 1.0) # Unit = bit
    data['TransferType_spn3173'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11111000) >> 3)), 31)  * 1.0) # Unit = bit
    data['RouteNumber_spn3169'] = ( enforceMaxV(( (int(msg[10:12], 16)) + ((int(msg[12:14], 16) & 0b00001111) << 8 )), 4095)  * 1.0) # Unit = count
    data['TransferSold_spn3168'] = ( enforceMaxV(( (int(msg[14:16], 16))), 255)  * 1.0) # Unit = count
    return data

# TR4
def PGN_64956(msg, data):
    data['FareboxServiceStatus_spn3178'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['TripStatus_spn3180'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00011100) >> 2)), 7)  * 1.0) # Unit = bit
    data['TripDirection_spn3174'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['FarePresets_spn3175'] = ( enforceMaxV(( (int(msg[4:6], 16))), 255)  * 1.0) # Unit = bit
    data['TripNumber_spn3159'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 65535)  * 1.0) # Unit = count
    data['PatternNumber_spn3161'] = ( enforceMaxV(( (int(msg[10:12], 16)) + ((int(msg[12:14], 16)) << 8 )), 65535)  * 1.0) # Unit = count
    data['AssignedRoute_spn3160'] = ( enforceMaxV(( (int(msg[14:16], 16)) + ((int(msg[16:18], 16)) << 8 )), 65535)  * 1.0) # Unit = count
    data['AssignedRun_spn3162'] = ( enforceMaxV(( (int(msg[18:20], 16)) + ((int(msg[20:22], 16)) << 8 )), 65535)  * 1.0) # Unit = count
    data['AssignedBlock_spn3163'] = ( enforceMaxV(( (int(msg[22:24], 16)) + ((int(msg[24:26], 16)) << 8 )), 65535)  * 1.0) # Unit = count
    data['Driversfareboxsecuritycode_spn3164'] = ( enforceMaxV(( (int(msg[26:28], 16)) + ((int(msg[28:30], 16)) << 8 )), 65535)  * 1.0) # Unit = count
    return data

# TR3
def PGN_64957(msg, data):
    data['RangeCodeEnable_spn3081'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['TransitRouteIDUsage_spn3080'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['IntersectionPreemptionRequest/Response_spn3079'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['PriorityofResponseSentbyEmitter_spn3084'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['TransitDoorEnable_spn3083'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['StrobeActivationControlStatus_spn3082'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['VehicleID_spn3085'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 65535)  * 1.0) # Unit = count
    return data

# TR7
def PGN_64960(msg, data):
    data['TypeofPassengerCount_spn3043'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = bit
    data['PatronCount_spn3047'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) # Unit = count
    data['SilentAlarmStatus_spn3044'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['VehicleUseStatus_spn3045'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['TransitRunStatus_spn3046'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    return data

# EFL/P3
def PGN_64961(msg, data):
    data['EngineIntakeValveActuationSystemOilPressure_spn2948'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.00390625) # Unit = MPa
    data['EngineExhaustGasRecirculation1IntakePressure_spn3358'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 2.0) # Unit = kPa
    data['EngineExhaustValveActuationSystemOilPressure_spn4287'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 0.00390625) # Unit = MPa
    data['EngineExhaustGasRecirculation1OutletPressure_spn5019'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 2.0) # Unit = kPa
    data['EngineThrottleValve1DifferentialPressure_spn5631'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    return data

# EEC14
def PGN_64962(msg, data):
    data['EngineExhaustGasRecirculation1Valve1PositionError_spn5829'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.004) - 125.0 # Unit = %
    data['EngineExhaustGasRecirculation1Valve2PositionError_spn5830'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.004) - 125.0 # Unit = %
    data['EngineFuelMassFlowRate_spn5833'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.005) # Unit = g/s
    data['FuelType_spn5837'] = ( enforceMaxV(( (int(msg[12:14], 16))), 255)  * 1.0) # Unit = bit
    data['EngineFuelIsolationControl_spn7394'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    return data

# EEC15
def PGN_64963(msg, data):
    data['AcceleratorPedal_1Channel2_spn2623'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 0.4) # Unit = %
    data['AcceleratorPedal_1Channel3_spn2624'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 0.4) # Unit = %
    data['AcceleratorPedal_2Channel2_spn2625'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 0.4) # Unit = %
    data['AcceleratorPedal_2Channel3_spn2626'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 0.4) # Unit = %
    data['EngineExhaustGasRestrictionValveControl_spn8150'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    return data

# EBC5
def PGN_64964(msg, data):
    data['BrakeTemperatureWarning_spn3839'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Haltbrakemode_spn2913'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00011100) >> 2)), 7)  * 1.0) # Unit = bit
    data['Hillholdermode_spn2912'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11100000) >> 5)), 7)  * 1.0) # Unit = bit
    data['FoundationBrakeUse_spn2919'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['XBRSystemState_spn2917'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['XBRActiveControlMode_spn2918'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['XBRAccelerationLimit_spn2921'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 0.1) - 12.5 # Unit = m/sÂ²
    data['ParkingBrakeActuatorFullyActivated_spn5275'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EmergencyBrakingActive_spn5847'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['RailroadMode_spn7942'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    return data

# CSA
def PGN_64966(msg, data):
    data['EngineStartEnableDevice1_spn626'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EngineStartEnableDevice2_spn1804'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['EngineStartEnableDevice1Configuration_spn2899'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['EngineStartEnableDevice2Configuration_spn2898'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['EngineColdStartFuelIgniterCommand_spn5548'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 0.4) # Unit = %
    data['EngineColdStartFuelIgniterRelay_spn5549'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EngineColdStartFuelIgniterRelayFeedback_spn5550'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    return data

# OHCSS
def PGN_64967(msg, data):
    data['EngineAuxiliaryGovernorState_spn2896'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EngineMulti-UnitSyncState_spn2890'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['EngineAlternateLowIdleSelectState_spn2891'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['EngineAlternateRatingSelectState_spn2888'] = ( enforceMaxV(( (int(msg[2:4], 16))), 255)  * 1.0) # Unit = bit
    data['EngineDroopAccelerator1SelectState_spn2889'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['EngineAlternateDroopAccelerator2SelectState_spn2893'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['EngineDroopRemoteAcceleratorSelectState_spn2894'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['EngineDroopAuxiliaryInputSelectState_spn2895'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['EngineTorqueCurveSelection_spn1568'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['EngineOperatingModeSelection_spn8664'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    return data

# ISCS
def PGN_64968(msg, data):
    data['EngineOperatorPrimaryIntermediateSpeedSelectState_spn2892'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    return data

# CMI
def PGN_64969(msg, data):
    data['TotalCountofConfigurationChangesMade_spn2887'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 1.0) # Unit = count
    return data

# ISC
def PGN_64970(msg, data):
    data['EngineOperatorPrimaryIntermediateSpeedSelect_spn2880'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    return data

# OHECS
def PGN_64971(msg, data):
    data['EngineAuxiliaryGovernorSwitch_spn2884'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EngineSynchronizationSwitch_spn1377'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['EngineAlternateLowIdleSwitch_spn2883'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['EngineAlternateRatingSelect_spn2882'] = ( enforceMaxV(( (int(msg[2:4], 16))), 255)  * 1.0) # Unit = selection
    data['EngineDroopAccelerator1Select_spn2881'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['EngineDroopAccelerator2Select_spn2879'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['EngineDroopRemoteAcceleratorSelect_spn2886'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['EngineDroopAuxiliaryInputSelect_spn2885'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['EngineTorqueCurveSelectionCommand_spn6796'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['EngineOperatingModeCommand_spn8608'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    return data

# OEL
def PGN_64972(msg, data):
    data['WorkLightSwitch_spn2873'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['MainLightSwitch_spn2872'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['TurnSignalSwitch_spn2876'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['HazardLightSwitch_spn2875'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['High-LowBeamSwitch_spn2874'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['OperatorsDesiredBack-light_spn2878'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 0.4) # Unit = %
    data['OperatorsDesired-DelayedLampOffTime_spn2877'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 1.0) # Unit = s
    data['ExteriorLampCheckSwitch_spn4004'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HeadlampEmergencyFlashSwitch_spn12308'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryLampGroupSwitch_spn12964'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    return data

# OWW
def PGN_64973(msg, data):
    data['FrontNon-operatorWiperSwitch_spn2864'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['FrontOperatorWiperSwitch_spn2863'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['RearWiperSwitch_spn2865'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['FrontOperatorWiperDelayControl_spn2869'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 0.4) # Unit = %
    data['FrontNon-operatorWiperDelayControl_spn2870'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 0.4) # Unit = %
    data['RearWiperDelayControl_spn2871'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.4) # Unit = %
    data['FrontNon-operatorWasherSwitch_spn2867'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00011100) >> 2)), 7)  * 1.0) # Unit = bit
    data['FrontOperatorWasherSwitch_spn2866'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b11100000) >> 5)), 7)  * 1.0) # Unit = bit
    data['RearWasherFunction_spn2868'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11100000) >> 5)), 7)  * 1.0) # Unit = bit
    return data

# IC2
def PGN_64976(msg, data):
    data['EngineAirFilter2DifferentialPressure_spn2809'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 0.05) # Unit = kPa
    data['EngineAirFilter3DifferentialPressure_spn2810'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 0.05) # Unit = kPa
    data['EngineAirFilter4DifferentialPressure_spn2811'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 0.05) # Unit = kPa
    data['EngineIntakeManifold_2Pressure_spn3562'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 2.0) # Unit = kPa
    data['EngineIntakeManifold_1AbsolutePressure_spn3563'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 2.0) # Unit = kPa
    data['EngineIntakeManifold1AbsolutePressure(HighResolution)_spn4817'] = ( enforceMaxV(( (int(msg[10:12], 16)) + ((int(msg[12:14], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    data['EngineIntakeManifold2AbsolutePressure_spn5422'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 2.0) # Unit = kPa
    return data

# FMS
def PGN_64977(msg, data):
    data['FMS-standardDiagnosticsSupported_spn2804'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['FMS-standardRequestsSupported_spn2805'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    return data

# EP
def PGN_64978(msg, data):
    data['Keep-AliveBatteryConsumption_spn2803'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 1.0) # Unit = mAh
    data['DataMemoryUsage_spn2802'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 0.4) # Unit = %
    return data

# TCI6
def PGN_64979(msg, data):
    data['EngineTurbocharger1CompressorOutletTemperature_spn2629'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineTurbocharger2CompressorOutletTemperature_spn2799'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineTurbocharger3CompressorOutletTemperature_spn2800'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineTurbocharger4CompressorOutletTemperature_spn2801'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    return data

# CM3
def PGN_64980(msg, data):
    data['TransferCaseSelectorSwitch_spn2796'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000111)), 7)  * 1.0) # Unit = bit
    data['AftertreatmentSCRDosingModeCommand_spn9175'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00111000) >> 3)), 7)  * 1.0) # Unit = bit
    data['MomentaryOperatorKeySwitch_spn9842'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['FifthWheelReleaseControl_spn3314'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['FifthWheelReleaseControlSecurityLockout_spn3315'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['VehicleTrailerStatus_spn7711'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['OperatorKeyDetected_spn10144'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['TransmissionOilLevelRequest_spn3809'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['OperatorKeySwitchAccessoryPower_spn3996'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['OperatorKeySwitchIgnitionPower_spn10145'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['OperatorKeySwitchStart_spn10146'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['OperatorKeySwitchDelayedBatteryOff_spn10147'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HornSwitch_spn2641'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    return data

# EEC5
def PGN_64981(msg, data):
    data['EngineTurbocharger1CalculatedTurbineIntakeTemperature_spn2789'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineTurbocharger1CalculatedTurbineOutletTemperature_spn2790'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineExhaustGasRecirculation1Valve1Control1_spn2791'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    data['EngineVariableGeometryTurbocharger(VGT)AirControlShutoffValve_spn2792'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EngineFuelControlMode_spn5323'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['EngineVariableGeometryTurbocharger1ControlMode_spn5457'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['EngineVariableGeometryTurbocharger(VGT)1ActuatorPosition_spn2795'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 0.4) # Unit = %
    return data

# BJM1
def PGN_64982(msg, data):
    data['Joystick1X-AxisNeutralPositionStatus_spn2675'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick1X-AxisLeverLeftNegativePositionStatus_spn2670'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick1X-AxisLeverRightPositivePositionStatus_spn2665'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick1X-AxisPosition_spn2660'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6) + ((int(msg[2:4], 16)) << 2 )), 1020)  * 0.1) # Unit = %
    data['Joystick1Y-AxisNeutralPositionStatus_spn2676'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick1Y-AxisLeverBackNegativePositionStatus_spn2671'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick1Y-AxisLeverForwardPositivePositionStatus_spn2666'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick1Y-AxisPosition_spn2661'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6) + ((int(msg[6:8], 16)) << 2 )), 1020)  * 0.1) # Unit = %
    data['Joystick1Y-AxisDetentPositionStatus_spn2681'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick1X-AxisDetentPositionStatus_spn2680'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Joystick1Button4PressedStatus_spn2688'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick1Button3PressedStatus_spn2687'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick1Button2PressedStatus_spn2686'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick1Button1PressedStatus_spn2685'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Joystick1Button8PressedStatus_spn2692'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick1Button7PressedStatus_spn2691'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick1Button6PressedStatus_spn2690'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick1Button5PressedStatus_spn2689'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Joystick1Button12PressedStatus_spn2696'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick1Button11PressedStatus_spn2695'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick1Button10PressedStatus_spn2694'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick1Button9PressedStatus_spn2693'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# EJM1
def PGN_64983(msg, data):
    data['Joystick1GripX-AxisNeutralPositionStatus_spn2677'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick1GripX-AxisLeverLeftNegativePositionStatus_spn2672'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick1GripX-AxisLeverRightPositivePositionStatus_spn2667'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick1GripX-AxisPosition_spn2662'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6) + ((int(msg[2:4], 16)) << 2 )), 1020)  * 0.1) # Unit = %
    data['Joystick1GripY-AxisNeutralPositionStatus_spn2678'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick1GripY-AxisLeverBackNegativePositionStatus_spn2673'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick1GripY-AxisLeverForwardPositivePositionStatus_spn2668'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick1GripY-AxisPosition_spn2663'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6) + ((int(msg[6:8], 16)) << 2 )), 1020)  * 0.1) # Unit = %
    data['Joystick1Theta-AxisNeutralPositionStatus_spn2679'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick1Theta-AxisCounterClockwiseNegativePositionStatus_spn2674'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick1Theta-AxisClockwisePositivePositionStatus_spn2669'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick1Theta-AxisPosition_spn2664'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6) + ((int(msg[10:12], 16)) << 2 )), 1020)  * 0.1) # Unit = %
    data['Joystick1Theta-AxisDetentPositionStatus_spn2684'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick1GripY-AxisDetentPositionStatus_spn2683'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick1GripX-AxisDetentPositionStatus_spn2682'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Joystick1Button16PressedStatus_spn6734'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick1Button15PressedStatus_spn6733'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick1Button14PressedStatus_spn6732'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick1Button13PressedStatus_spn6731'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# BJM2
def PGN_64984(msg, data):
    data['Joystick2X-AxisNeutralPositionStatus_spn2712'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick2X-AxisLeverLeftNegativePositionStatus_spn2707'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick2X-AxisLeverRightPositivePositionStatus_spn2702'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick2X-AxisPosition_spn2697'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6) + ((int(msg[2:4], 16)) << 2 )), 1020)  * 0.1) # Unit = %
    data['Joystick2Y-AxisNeutralPositionStatus_spn2713'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick2Y-AxisLeverBackNegativePositionStatus_spn2708'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick2Y-AxisLeverForwardPositivePositionStatus_spn2703'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick2Y-AxisPosition_spn2698'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6) + ((int(msg[6:8], 16)) << 2 )), 1020)  * 0.1) # Unit = %
    data['Joystick2Y-AxisDetentPositionStatus_spn2718'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick2X-AxisDetentPositionStatus_spn2717'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Joystick2Button4PressedStatus_spn2725'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick2Button3PressedStatus_spn2724'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick2Button2PressedStatus_spn2723'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick2Button1PressedStatus_spn2722'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Joystick2Button8PressedStatus_spn2729'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick2Button7PressedStatus_spn2728'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick2Button6PressedStatus_spn2727'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick2Button5PressedStatus_spn2726'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Joystick2Button12PressedStatus_spn2733'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick2Button11PressedStatus_spn2732'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick2Button10PressedStatus_spn2731'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick2Button9PressedStatus_spn2730'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# EJM2
def PGN_64985(msg, data):
    data['Joystick2GripX-AxisNeutralPositionStatus_spn2714'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick2GripX-AxisLeverLeftNegativePositionStatus_spn2709'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick2GripX-AxisLeverRightPositivePositionStatus_spn2704'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick2GripX-AxisPosition_spn2699'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6) + ((int(msg[2:4], 16)) << 2 )), 1020)  * 0.1) # Unit = %
    data['Joystick2GripY-AxisNeutralPositionStatus_spn2715'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick2GripY-AxisLeverBackNegativePositionStatus_spn2710'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick2GripY-AxisLeverForwardPositivePositionStatus_spn2705'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick2GripY-AxisPosition_spn2700'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6) + ((int(msg[6:8], 16)) << 2 )), 1020)  * 0.1) # Unit = %
    data['Joystick2Theta-AxisNeutralPositionStatus_spn2716'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick2Theta-AxisCounterClockwiseNegativePositionStatus_spn2711'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick2Theta-AxisClockwisePositivePositionStatus_spn2706'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick2Theta-AxisPosition_spn2701'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6) + ((int(msg[10:12], 16)) << 2 )), 1020)  * 0.1) # Unit = %
    data['Joystick2Theta-AxisDetentPositionStatus_spn2721'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick2GripY-AxisDetentPositionStatus_spn2720'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick2GripX-AxisDetentPositionStatus_spn2719'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Joystick2Button16PressedStatus_spn6738'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick2Button15PressedStatus_spn6737'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick2Button14PressedStatus_spn6736'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick2Button13PressedStatus_spn6735'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# BJM3
def PGN_64986(msg, data):
    data['Joystick3X-AxisNeutralPositionStatus_spn2749'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick3X-AxisLeverLeftNegativePositionStatus_spn2744'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick3X-AxisLeverRightPositivePositionStatus_spn2739'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick3X-AxisPosition_spn2734'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6) + ((int(msg[2:4], 16)) << 2 )), 1020)  * 0.1) # Unit = %
    data['Joystick3Y-AxisNeutralPositionStatus_spn2750'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick3Y-AxisLeverBackNegativePositionStatus_spn2745'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick3Y-AxisLeverForwardPositivePositionStatus_spn2740'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick3Y-AxisPosition_spn2735'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6) + ((int(msg[6:8], 16)) << 2 )), 1020)  * 0.1) # Unit = %
    data['Joystick3Y-AxisDetentPositionStatus_spn2755'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick3X-AxisDetentPositionStatus_spn2754'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Joystick3Button4PressedStatus_spn2762'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick3Button3PressedStatus_spn2761'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick3Button2PressedStatus_spn2760'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick3Button1PressedStatus_spn2759'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Joystick3Button8PressedStatus_spn2766'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick3Button7PressedStatus_spn2765'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick3Button6PressedStatus_spn2764'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick3Button5PressedStatus_spn2763'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Joystick3Button12PressedStatus_spn2770'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick3Button11PressedStatus_spn2769'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick3Button10PressedStatus_spn2768'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick3Button9PressedStatus_spn2767'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# EJM3
def PGN_64987(msg, data):
    data['Joystick3GripX-AxisNeutralPositionStatus_spn2751'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick3GripX-AxisLeverLeftNegativePositionStatus_spn2746'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick3GripX-AxisLeverRightPositivePositionStatus_spn2741'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick3GripX-AxisPosition_spn2736'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6) + ((int(msg[2:4], 16)) << 2 )), 1020)  * 0.1) # Unit = %
    data['Joystick3GripY-AxisNeutralPositionStatus_spn2752'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick3GripY-AxisLeverBackNegativePositionStatus_spn2747'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick3GripY-AxisLeverForwardPositivePositionStatus_spn2742'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick3GripY-AxisPosition_spn2737'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6) + ((int(msg[6:8], 16)) << 2 )), 1020)  * 0.1) # Unit = %
    data['Joystick3Theta-AxisNeutralPositionStatus_spn2753'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick3Theta-AxisCounterClockwiseNegativePositionStatus_spn2748'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick3Theta-AxisClockwisePositivePositionStatus_spn2743'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick3Theta-AxisPosition_spn2738'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6) + ((int(msg[10:12], 16)) << 2 )), 1020)  * 0.1) # Unit = %
    data['Joystick3Theta-AxisDetentPositionStatus_spn2758'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick3GripY-AxisDetentPositionStatus_spn2757'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick3GripX-AxisDetentPositionStatus_spn2756'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Joystick3Button16PressedStatus_spn6742'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Joystick3Button15PressedStatus_spn6741'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Joystick3Button14PressedStatus_spn6740'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Joystick3Button13PressedStatus_spn6739'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# MCI
def PGN_64988(msg, data):
    data['EngineThrottleSynchronizationModeStatus_spn2615'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['TrollingModeStatus_spn2616'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['SlowVesselModeStatus_spn2617'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['EngineMarineOperatingModeStatus_spn7845'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000111)), 7)  * 1.0) # Unit = bit
    return data

# FWD
def PGN_64991(msg, data):
    data['FrontWheelDriveActuatorStatus_spn2612'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    return data

# AMB2
def PGN_64992(msg, data):
    data['SolarIntensityPercent_spn2610'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 0.4) # Unit = %
    data['SolarSensorMaximum_spn2611'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 0.4) # Unit = mW/cmÂ²
    data['SpecificHumidity_spn4490'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.01) # Unit = g/kg
    data['CalculatedAmbientAirTemperature_spn5581'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['BarometricAbsolutePressure(HighResolution)_spn5685'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    return data

# CCSI1
def PGN_64993(msg, data):
    data['CabA/CRefrigerantCompressorOutletPressure_spn2609'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 16.0) # Unit = kPa
    data['AirConditionerCompressorStatus_spn7853'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    return data

# SPR
def PGN_64994(msg, data):
    data['PneumaticSupplyPressureRequest_spn2603'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 8.0) # Unit = kPa
    data['Parkingand/orTrailerAirPressureRequest_spn2604'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 8.0) # Unit = kPa
    data['ServiceBrakeAirPressureRequestCircuit_1_spn2605'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 8.0) # Unit = kPa
    data['ServiceBrakeAirPressureRequestCircuit_2_spn2606'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 8.0) # Unit = kPa
    data['AuxiliaryEquipmentSupplyPressureRequest_spn2607'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 8.0) # Unit = kPa
    data['AirSuspensionSupplyPressureRequest_spn2608'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 8.0) # Unit = kPa
    data['PowertrainCircuitAirSupplyPressureRequest_spn6306'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 8.0) # Unit = kPa
    return data

# EOAC
def PGN_64995(msg, data):
    data['TravelVelocityControlPosition_spn2601'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) - 125.0 # Unit = %
    return data

# EPD
def PGN_64996(msg, data):
    data['PayloadPercentage_spn2600'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) # Unit = %
    data['PayloadWeight_spn6851'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 ) + ((int(msg[6:8], 16)) << 16 )), 16449535)  * 2.0) # Unit = kg
    data['PayloadWeightConfidence_spn6852'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.5) # Unit = %
    data['PayloadCarryBackWeight_spn6853'] = ( enforceMaxV(( (int(msg[10:12], 16)) + ((int(msg[12:14], 16)) << 8 )), 64255)  * 2.0) # Unit = kg
    data['PayloadCapacityPercentage_spn6854'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 1.0) # Unit = %
    return data

# MVS
def PGN_64997(msg, data):
    data['MaximumVehicleSpeedLimit1_spn2588'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) # Unit = km/h
    data['MaximumVehicleSpeedLimit2_spn2589'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) # Unit = km/h
    data['MaximumVehicleSpeedLimit3_spn2590'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) # Unit = km/h
    data['MaximumVehicleSpeedLimit4_spn2591'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) # Unit = km/h
    data['MaximumVehicleSpeedLimit5_spn2592'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) # Unit = km/h
    data['MaximumVehicleSpeedLimit6_spn2593'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 1.0) # Unit = km/h
    data['MaximumVehicleSpeedLimit7_spn2594'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 1.0) # Unit = km/h
    data['AppliedVehicleSpeedLimit_spn2595'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 1.0) # Unit = km/h
    return data

# HBS
def PGN_64998(msg, data):
    data['HydraulicBrakePressureCircuit1_spn2580'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 100.0) # Unit = kPa
    data['HydraulicBrakePressureCircuit2_spn2581'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 100.0) # Unit = kPa
    data['HydraulicBrakePressureWarningStateCircuit1_spn2584'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HydraulicBrakePressureWarningStateCircuit2_spn2585'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HydraulicBrakePressureSupplyStateCircuit1_spn2582'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HydraulicBrakePressureSupplyStateCircuit2_spn2583'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['HydraulicBrakeSystemAudibleWarningCommand_spn2930'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HydraulicBrakeFluidLevelSwitch_spn2931'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    return data

# BUSC
def PGN_64999(msg, data):
    data['Bus_1/UtilityDeadBus_spn2535'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Bus_1/UtilityPhaseMatch_spn2531'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Bus_1/UtilityFrequencyMatch_spn2533'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Bus_1/UtilityVoltageMatch_spn2532'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Bus_1/UtilityInSync_spn2534'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Bus_1/UtilityACPhaseDifference_spn2517'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64259)  * 0.007812) - 200.0 # Unit = deg
    return data

# BGSC
def PGN_65000(msg, data):
    data['Bus_1/GeneratorDeadBus_spn2530'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Bus_1/GeneratorPhaseMatch_spn2526'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Bus_1/GeneratorFrequencyMatch_spn2528'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Bus_1/GeneratorVoltageMatch_spn2527'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Bus_1/GeneratorInSync_spn2529'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Bus_1/GeneratorACPhaseDifference_spn2516'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64259)  * 0.007812) - 200.0 # Unit = deg
    return data

# BPCAC
def PGN_65001(msg, data):
    data['Bus_1PhaseCALine-LineACRMSVoltage_spn2511'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['Bus_1PhaseCLine-NeutralACRMSVoltage_spn2515'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['Bus_1PhaseCACFrequency_spn2507'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64259)  * 0.007812) # Unit = Hz
    return data

# BPBAC
def PGN_65002(msg, data):
    data['Bus_1PhaseBCLine-LineACRMSVoltage_spn2510'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['Bus_1PhaseBLine-NeutralACRMSVoltage_spn2514'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['Bus_1PhaseBACFrequency_spn2506'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64259)  * 0.007812) # Unit = Hz
    return data

# BPAAC
def PGN_65003(msg, data):
    data['Bus_1PhaseABLine-LineACRMSVoltage_spn2509'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['Bus_1PhaseALine-NeutralACRMSVoltage_spn2513'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['Bus_1PhaseAACFrequency_spn2505'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64259)  * 0.007812) # Unit = Hz
    return data

# BAAC
def PGN_65004(msg, data):
    data['Bus_1AverageLine-LineACRMSVoltage_spn2508'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['Bus_1AverageLine-NeutralACRMSVoltage_spn2512'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['Bus_1AverageACFrequency_spn2504'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64259)  * 0.007812) # Unit = Hz
    return data

# UTACE
def PGN_65005(msg, data):
    data['UtilityTotalkWHoursExport_spn2502'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 1.0) # Unit = kWh
    data['UtilityTotalkWHoursImport_spn2503'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 ) + ((int(msg[12:14], 16)) << 16 ) + ((int(msg[14:16], 16)) << 24 )), 4211081215)  * 1.0) # Unit = kWh
    return data

# UPCACR
def PGN_65006(msg, data):
    data['UtilityPhaseCReactivePower_spn2493'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 1.0) - 2000000000.0 # Unit = VAr
    data['UtilityPhaseCPowerFactor_spn2501'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64292)  * 6.1e-05) - 1.0 # Unit = 
    data['UtilityPhaseCPowerFactorLagging_spn2525'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    return data

# UPCACP
def PGN_65007(msg, data):
    data['UtilityPhaseCRealPower_spn2489'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 1.0) - 2000000000.0 # Unit = W
    data['UtilityPhaseCApparentPower_spn2497'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 ) + ((int(msg[12:14], 16)) << 16 ) + ((int(msg[14:16], 16)) << 24 )), 4211081215)  * 1.0) - 2000000000.0 # Unit = VA
    return data

# UPCAC
def PGN_65008(msg, data):
    data['UtilityPhaseCALine-LineACRMSVoltage_spn2477'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['UtilityPhaseCLine-NeutralACRMSVoltage_spn2481'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['UtilityPhaseCACFrequency_spn2473'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64259)  * 0.007812) # Unit = Hz
    data['UtilityPhaseCACRMSCurrent_spn2485'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 1.0) # Unit = A
    return data

# UPBACR
def PGN_65009(msg, data):
    data['UtilityPhaseBReactivePower_spn2492'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 1.0) - 2000000000.0 # Unit = VAr
    data['UtilityPhaseBPowerFactor_spn2500'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64292)  * 6.1e-05) - 1.0 # Unit = 
    data['UtilityPhaseBPowerFactorLagging_spn2524'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    return data

# UPBACP
def PGN_65010(msg, data):
    data['UtilityPhaseBRealPower_spn2488'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 1.0) - 2000000000.0 # Unit = W
    data['UtilityPhaseBApparentPower_spn2496'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 ) + ((int(msg[12:14], 16)) << 16 ) + ((int(msg[14:16], 16)) << 24 )), 4211081215)  * 1.0) - 2000000000.0 # Unit = VA
    return data

# UPBAC
def PGN_65011(msg, data):
    data['UtilityPhaseBCLine-LineACRMSVoltage_spn2476'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['UtilityPhaseBLine-NeutralACRMSVoltage_spn2480'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['UtilityPhaseBACFrequency_spn2472'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64259)  * 0.007812) # Unit = Hz
    data['UtilityPhaseBACRMSCurrent_spn2484'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 1.0) # Unit = A
    return data

# UPACCR
def PGN_65012(msg, data):
    data['UtilityPhaseAReactivePower_spn2491'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 1.0) - 2000000000.0 # Unit = VAr
    data['UtilityPhaseAPowerFactor_spn2499'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64292)  * 6.1e-05) - 1.0 # Unit = 
    data['UtilityPhaseAPowerFactorLagging_spn2523'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    return data

# UPAACP
def PGN_65013(msg, data):
    data['UtilityPhaseARealPower_spn2487'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 1.0) - 2000000000.0 # Unit = W
    data['UtilityPhaseAApparentPower_spn2495'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 ) + ((int(msg[12:14], 16)) << 16 ) + ((int(msg[14:16], 16)) << 24 )), 4211081215)  * 1.0) - 2000000000.0 # Unit = VA
    return data

# UPAAC
def PGN_65014(msg, data):
    data['UtilityPhaseABLine-LineACRMSVoltage_spn2475'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['UtilityPhaseALine-NeutralACRMSVoltage_spn2479'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['UtilityPhaseAACFrequency_spn2471'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64259)  * 0.007812) # Unit = Hz
    data['UtilityPhaseAACRMSCurrent_spn2483'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 1.0) # Unit = A
    return data

# UTACR
def PGN_65015(msg, data):
    data['UtilityTotalReactivePower_spn2490'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 1.0) - 2000000000.0 # Unit = VAr
    data['UtilityOverallPowerFactor_spn2498'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64292)  * 6.1e-05) - 1.0 # Unit = 
    data['UtilityOverallPowerFactorLagging_spn2522'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    return data

# UTACP
def PGN_65016(msg, data):
    data['UtilityTotalRealPower_spn2486'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 1.0) - 2000000000.0 # Unit = W
    data['UtilityTotalApparentPower_spn2494'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 ) + ((int(msg[12:14], 16)) << 16 ) + ((int(msg[14:16], 16)) << 24 )), 4211081215)  * 1.0) - 2000000000.0 # Unit = VA
    return data

# UAAC
def PGN_65017(msg, data):
    data['UtilityAverageLine-LineACRMSVoltage_spn2474'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['UtilityAverageLine-NeutralACRMSVoltage_spn2478'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['UtilityAverageACFrequency_spn2470'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64259)  * 0.007812) # Unit = Hz
    data['UtilityAverageACRMSCurrent_spn2482'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 1.0) # Unit = A
    return data

# GTACE
def PGN_65018(msg, data):
    data['GeneratorTotalkWHoursExport_spn2468'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 1.0) # Unit = kWh
    data['GeneratorTotalkWHoursImport_spn2469'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 ) + ((int(msg[12:14], 16)) << 16 ) + ((int(msg[14:16], 16)) << 24 )), 4211081215)  * 1.0) # Unit = kWh
    return data

# GPCACR
def PGN_65019(msg, data):
    data['GeneratorPhaseCReactivePower_spn2459'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 1.0) - 2000000000.0 # Unit = VAr
    data['GeneratorPhaseCPowerFactor_spn2467'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64292)  * 6.1e-05) - 1.0 # Unit = 
    data['GeneratorPhaseCPowerFactorLagging_spn2521'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    return data

# GPCACP
def PGN_65020(msg, data):
    data['GeneratorPhaseCRealPower_spn2455'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 1.0) - 2000000000.0 # Unit = W
    data['GeneratorPhaseCApparentPower_spn2463'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 ) + ((int(msg[12:14], 16)) << 16 ) + ((int(msg[14:16], 16)) << 24 )), 4211081215)  * 1.0) - 2000000000.0 # Unit = VA
    return data

# GPCAC
def PGN_65021(msg, data):
    data['GeneratorPhaseCALine-LineACRMSVoltage_spn2443'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['GeneratorPhaseCLine-NeutralACRMSVoltage_spn2447'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['GeneratorPhaseCACFrequency_spn2439'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64259)  * 0.007812) # Unit = Hz
    data['GeneratorPhaseCACRMSCurrent_spn2451'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 1.0) # Unit = A
    return data

# GPBACRP
def PGN_65022(msg, data):
    data['GeneratorPhaseBReactivePower_spn2458'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 1.0) - 2000000000.0 # Unit = VAr
    data['GeneratorPhaseBPowerFactor_spn2466'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64292)  * 6.1e-05) - 1.0 # Unit = 
    data['GeneratorPhaseBPowerFactorLagging_spn2520'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    return data

# GPBACP
def PGN_65023(msg, data):
    data['GeneratorPhaseBRealPower_spn2454'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 1.0) - 2000000000.0 # Unit = W
    data['GeneratorPhaseBApparentPower_spn2462'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 ) + ((int(msg[12:14], 16)) << 16 ) + ((int(msg[14:16], 16)) << 24 )), 4211081215)  * 1.0) - 2000000000.0 # Unit = VA
    return data

# GPBAC
def PGN_65024(msg, data):
    data['GeneratorPhaseBCLine-LineACRMSVoltage_spn2442'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['GeneratorPhaseBLine-NeutralACRMSVoltage_spn2446'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['GeneratorPhaseBACFrequency_spn2438'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64259)  * 0.007812) # Unit = Hz
    data['GeneratorPhaseBACRMSCurrent_spn2450'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 1.0) # Unit = A
    return data

# GPAACR
def PGN_65025(msg, data):
    data['GeneratorPhaseAReactivePower_spn2457'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 1.0) - 2000000000.0 # Unit = VAr
    data['GeneratorPhaseAPowerFactor_spn2465'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64292)  * 6.1e-05) - 1.0 # Unit = 
    data['GeneratorPhaseAPowerFactorLagging_spn2519'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    return data

# GPAACP
def PGN_65026(msg, data):
    data['GeneratorPhaseARealPower_spn2453'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 1.0) - 2000000000.0 # Unit = W
    data['GeneratorPhaseAApparentPower_spn2461'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 ) + ((int(msg[12:14], 16)) << 16 ) + ((int(msg[14:16], 16)) << 24 )), 4211081215)  * 1.0) - 2000000000.0 # Unit = VA
    return data

# GPAAC
def PGN_65027(msg, data):
    data['GeneratorPhaseABLine-LineACRMSVoltage_spn2441'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['GeneratorPhaseALine-NeutralACRMSVoltage_spn2445'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['GeneratorPhaseAACFrequency_spn2437'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64259)  * 0.007812) # Unit = Hz
    data['GeneratorPhaseAACRMSCurrent_spn2449'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 1.0) # Unit = A
    return data

# GTACR
def PGN_65028(msg, data):
    data['GeneratorTotalReactivePower_spn2456'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 1.0) - 2000000000.0 # Unit = VAr
    data['GeneratorOverallPowerFactor_spn2464'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64292)  * 6.1e-05) - 1.0 # Unit = 
    data['GeneratorOverallPowerFactorLagging_spn2518'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    return data

# GTACP
def PGN_65029(msg, data):
    data['GeneratorTotalRealPower_spn2452'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 1.0) - 2000000000.0 # Unit = W
    data['GeneratorTotalApparentPower_spn2460'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 ) + ((int(msg[12:14], 16)) << 16 ) + ((int(msg[14:16], 16)) << 24 )), 4211081215)  * 1.0) - 2000000000.0 # Unit = VA
    return data

# GAAC
def PGN_65030(msg, data):
    data['GeneratorAverageLine-LineACRMSVoltage_spn2440'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['GeneratorAverageLine-NeutralACRMSVoltage_spn2444'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 1.0) # Unit = V
    data['GeneratorAverageACFrequency_spn2436'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64259)  * 0.007812) # Unit = Hz
    data['GeneratorAverageACRMSCurrent_spn2448'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 1.0) # Unit = A
    return data

# ET
def PGN_65031(msg, data):
    data['EngineExhaustManifoldBank2Temperature1_spn2433'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineExhaustManifoldBank1Temperature1_spn2434'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineExhaustManifoldBank2Temperature2_spn5969'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineExhaustManifoldBank1Temperature2_spn5970'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    return data

# LD
def PGN_65088(msg, data):
    data['RunningLight_spn2404'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['AlternateBeamHeadLightData_spn2352'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['LowBeamHeadLightData_spn2350'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HighBeamHeadLightData_spn2348'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['TractorFrontFogLights_spn2388'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['RotatingBeaconLight_spn2386'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['RightTurnSignalLights_spn2370'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['LeftTurnSignalLights_spn2368'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['BackUpLightandAlarmHorn_spn2392'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['CenterStopLight_spn2376'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['RightStopLight_spn2374'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['LeftStopLight_spn2372'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['ImplementClearanceLight_spn2384'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['TractorClearanceLight_spn2382'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['ImplementMarkerLight_spn2380'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['TractorMarkerLight_spn2378'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['RearFogLights_spn2390'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['TractorUndersideMountedWorkLights_spn2358'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['TractorRearLowMountedWorkLights_spn2360'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['TractorRearHighMountedWorkLights_spn2362'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['TractorSideLowMountedWorkLights_spn2364'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['TractorSideHighMountedWorkLights_spn2366'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['TractorFrontLowMountedWorkLights_spn2354'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['TractorFrontHighMountedWorkLights_spn2356'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['ImplementOEMOption2Light_spn2398'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['ImplementOEMOption1Light_spn2396'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['ImplementRightFacingWorkLight_spn2407'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['ImplementLeftForwardWorkLight_spn2598'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['ImplementRightForwardWorkLight_spn2402'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['ImplementLeftFacingWorkLight_spn2400'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['ImplementRearWorkLight_spn2394'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# LCMD
def PGN_65089(msg, data):
    data['RunningLightCommand_spn2403'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['AlternateBeamHeadLightCommand_spn2351'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['LowBeamHeadLightCommand_spn2349'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HighBeamHeadLightCommand_spn2347'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['TractorFrontFogLightsCommand_spn2387'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['RotatingBeaconLightCommand_spn2385'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['RightTurnSignalLightsCommand_spn2369'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['LeftTurnSignalLightsCommand_spn2367'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['BackUpLightandAlarmHornCommand_spn2391'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['CenterStopLightCommand_spn2375'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['RightStopLightCommand_spn2373'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['LeftStopLightCommand_spn2371'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['ImplementClearanceLightCommand_spn2383'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['TractorClearanceLightCommand_spn2381'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['ImplementMarkerLightCommand_spn2379'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['TractorMarkerLightCommand_spn2377'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['RearFogLightCommand_spn2389'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['TractorUndersideMountedWorkLightsCommand_spn2357'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['TractorRearLowMountedWorkLightsCommand_spn2359'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['TractorRearHighMountedWorkLightsCommand_spn2361'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['TractorSideLowMountedWorkLightsCommand_spn2363'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['TractorSideHighMountedWorkLightsCommand_spn2365'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['TractorFrontLowMountedWorkLightsCommand_spn2353'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['TractorFrontHighMountedWorkLightsCommand_spn2355'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['ImplementOEMOption2LightCommand_spn2397'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['ImplementOEMOption1LightCommand_spn2395'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['ImplementRightFacingWorkLightCommand_spn2406'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['ImplementLeftForwardWorkLightCommand_spn2597'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['LightingDataRequestCommand_spn2393'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['ImplementRightForwardWorkLightCommand_spn2401'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['ImplementLeftFacingWorkLightCommand_spn2399'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['ImplementRearWorkLightCommand_spn2405'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# ETC7
def PGN_65098(msg, data):
    data['TransmissionCurrentRangeDisplayBlankState_spn4176'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['TransmissionServiceIndicator_spn4178'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['TransmissionRequestedRangeDisplayBlankState_spn1850'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['TransmissionRequestedRangeDisplayFlashState_spn1849'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['TransmissionReadyforBrakeRelease_spn3086'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['ActiveShiftConsoleIndicator_spn2945'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['TransmissionEngineCrankEnable_spn2900'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['TransmissionShiftInhibitIndicator_spn1851'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['TransmissionMode4Indicator_spn2539'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['TransmissionMode3Indicator_spn2538'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['TransmissionMode2Indicator_spn2537'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['TransmissionMode1Indicator_spn2536'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['TransmissionRequestedGearFeedback_spn3289'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) - 125.0 # Unit = gear value
    data['TransmissionMode5Indicator_spn4250'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['TransmissionMode6Indicator_spn4251'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['TransmissionMode7Indicator_spn4252'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['TransmissionMode8Indicator_spn4253'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['TransmissionReverseGearShiftInhibitStatus_spn4261'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['TransmissionWarningIndicator_spn5344'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['TransmissionMode9Indicator_spn6567'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['TransmissionMode10Indicator_spn6568'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['TransmissionAirSupplyPressureIndicator_spn6566'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000111)), 7)  * 1.0) # Unit = bit
    data['TransmissionAuto-Neutral(ManualReturn)State_spn7696'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00111000) >> 3)), 7)  * 1.0) # Unit = bit
    data['TransmissionManualModeIndicator_spn8291'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['TransmissionLoadReductionIndicator_spn11747'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['TransmissionPre-DefinedRangeLimitIndicator_spn11748'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['TransmissionCoastModeIndicator_spn11749'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    return data

# ML
def PGN_65100(msg, data):
    data['RearBlackOutMarkerSelect_spn1840'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['FrontBlackOutMarkerLampSelect_spn1839'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['ConvoyLampSelect_spn1838'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['ConvoyDrivingLampSelect_spn1837'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['BlackOutBrake/StopLampSelect_spn1841'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['NightVisionIlluminatorSelect_spn1843'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['BlackOutWorkLampSelect_spn1842'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['OperatorsBlackOutIntensitySelection_spn1844'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 0.4) # Unit = %
    return data

# TAVG
def PGN_65101(msg, data):
    data['EngineTotalAverageFuelRate_spn1834'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) # Unit = l/h
    data['EngineTotalAverageFuelEconomy_spn1835'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64259)  * 0.001953) # Unit = km/L
    return data

# DC1
def PGN_65102(msg, data):
    data['Positionofdoors_spn1821'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Ramp/WheelChairLiftPosition_spn1820'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Status2ofdoors_spn3411'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# VDC1
def PGN_65103(msg, data):
    data['VDCInformationSignal_spn1813'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['VDCFullyOperational_spn1814'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['VDCbrakelightrequest_spn1815'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['ROPEngineControlactive_spn1816'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['ROPBrakeControlactive_spn1818'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['YCEngineControlactive_spn1817'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['YCBrakeControlactive_spn1819'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Trailer-VDCActive_spn5624'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    return data

# BT1
def PGN_65104(msg, data):
    data['SLIBattery1Temperature_spn1800'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['SLIBattery2Temperature_spn1801'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['SLIBattery3Temperature_spn2779'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['SLIBattery4Temperature_spn2780'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    return data

# ACC2
def PGN_65105(msg, data):
    data['ACCusagedemand_spn5023'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['RequestedACCDistanceMode_spn1799'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11100000) >> 5)), 7)  * 1.0) # Unit = bit
    return data

# VEP3
def PGN_65106(msg, data):
    data['AlternatorCurrent(HighRange/Resolution)_spn1795'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) - 1600.0 # Unit = A
    data['SLIBattery1NetCurrent(HighRange/Resolution)_spn2579'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) - 1600.0 # Unit = A
    data['SLIBattery2NetCurrent_spn7498'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.05) - 1600.0 # Unit = A
    return data

# RTC1
def PGN_65107(msg, data):
    data['LowLimitThresholdforMaximumRPMfromRetarder_spn1776'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 32.0) # Unit = rpm
    data['HighLimitThresholdforMinimumContinuousRPMfromRetarder_spn1777'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 32.0) # Unit = rpm
    data['LowLimitThresholdforMaximumTorquefromRetarder_spn1778'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) - 125.0 # Unit = %
    data['HighLimitThresholdforMinimumContinuousTorquefromRetarder_spn1779'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) - 125.0 # Unit = %
    data['MaximumContinuousRetarderSpeed_spn1780'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 32.0) # Unit = rpm
    data['MinimumContinuousRetarderSpeed_spn1781'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 32.0) # Unit = rpm
    data['MaximumContinuousRetarderTorque_spn1782'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 1.0) - 125.0 # Unit = %
    data['MinimumContinuousRetarderTorque_spn1783'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 1.0) - 125.0 # Unit = %
    return data

# ECT1
def PGN_65108(msg, data):
    data['EngineLowLimitThresholdforMaximumRPMfromEngine_spn1768'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 32.0) # Unit = rpm
    data['EngineHighLimitThresholdforMinimumContinuousEngineRPM_spn1769'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 32.0) # Unit = rpm
    data['EngineLowLimitThresholdforMaximumTorquefromEngine_spn1770'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) - 125.0 # Unit = %
    data['EngineHighLimitThresholdforMinimumContinuousTorquefromEngine_spn1771'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) - 125.0 # Unit = %
    data['EngineMaximumContinuousRPM_spn1772'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 32.0) # Unit = rpm
    data['EngineMinimumContinuousRPM_spn1773'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 32.0) # Unit = rpm
    data['EngineMaximumContinuousTorque_spn1774'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 1.0) - 125.0 # Unit = %
    data['EngineMinimumContinuousTorque_spn1775'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 1.0) - 125.0 # Unit = %
    return data

# GFD
def PGN_65109(msg, data):
    data['SpecificHeatRatio_spn1767'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.001) # Unit = Ratio
    data['ReferenceEngineGasMassFlowRate_spn5684'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) # Unit = kg/h
    data['Fuelenergycontent_spn4245'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64259)  * 0.003906) # Unit = MJ/NmÂ³
    return data

# AT1T1I1
def PGN_65110(msg, data):
    data['Aftertreatment1DieselExhaustFluidTankVolume_spn1761'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 0.4) # Unit = %
    data['Aftertreatment1DieselExhaustFluidTankTemperature1_spn3031'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['Aftertreatment1DieselExhaustFluidTankLevel_spn3517'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.1) # Unit = mm
    data['Aftertreatment1DieselExhaustFluidTankLevel/VolumePreliminaryFMI_spn3532'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['AftertreatmentDieselExhaustFluidTankLowLevelIndicator_spn5245'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11100000) >> 5)), 7)  * 1.0) # Unit = bit
    data['Aftertreatment1DieselExhaustFluidTank1TemperaturePreliminaryFMI_spn4365'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['AftertreatmentSCROperatorInducementSeverity_spn5246'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b11100000) >> 5)), 7)  * 1.0) # Unit = bit
    data['Aftertreatment1DieselExhaustFluidTankHeater_spn3363'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 0.4) # Unit = %
    data['Aftertreatment1DieselExhaustFluidTank1HeaterPreliminaryFMI_spn4366'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    return data

# ASC5
def PGN_65111(msg, data):
    data['DamperStiffnessFrontAxle_spn1729'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 0.4) # Unit = %
    data['DamperStiffnessRearAxle_spn1730'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 0.4) # Unit = %
    data['DamperStiffnessLift/TagAxle_spn1731'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 0.4) # Unit = %
    data['ElectronicShockAbsorberControlMode-FrontAxle_spn1833'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['ElectronicShockAbsorberControlMode-RearAxle_spn1832'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['ElectronicShockAbsorberControlMode-Lift/TagAxle_spn1831'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    return data

# ASC4
def PGN_65112(msg, data):
    data['BellowPressureFrontAxleLeft_spn1725'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    data['BellowPressureFrontAxleRight_spn1726'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    data['BellowPressureRearAxleLeft_spn1727'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    data['BellowPressureRearAxleRight_spn1728'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    return data

# ASC3
def PGN_65113(msg, data):
    data['RelativeLevelFrontAxleLeft_spn1721'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.1) - 3200.0 # Unit = mm
    data['RelativeLevelFrontAxleRight_spn1722'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.1) - 3200.0 # Unit = mm
    data['RelativeLevelRearAxleLeft_spn1724'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.1) - 3200.0 # Unit = mm
    data['RelativeLevelRearAxleRight_spn1723'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.1) - 3200.0 # Unit = mm
    return data

# ASC1
def PGN_65114(msg, data):
    data['NominalLevelFrontAxle_spn1734'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['NominalLevelRearAxle_spn1733'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['BelowNominalLevelFrontAxle_spn1738'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['BelowNominalLevelRearAxle_spn1754'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['AboveNominalLevelFrontAxle_spn1737'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['AboveNominalLevelRearAxle_spn1736'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['LoweringControlModeFrontAxle_spn1740'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['LoweringControlModeRearAxle_spn1755'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['LiftingControlModeFrontAxle_spn1739'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['LiftingControlModeRearAxle_spn1756'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['KneelingInformation_spn1742'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['LevelControlMode_spn1741'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['SecurityDevice_spn1746'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['VehicleMotionInhibit_spn1745'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['DoorRelease_spn1744'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['LiftAxle1Position_spn1743'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['FrontAxleinBumperRange_spn1824'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['RearAxleinBumperRange_spn1823'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['LiftAxle2Position_spn1822'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['SuspensionRemoteControl1_spn1826'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['SuspensionRemotecontrol2_spn1825'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['AllowLevelControlDuringBrakingStatus_spn5294'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['SpeedDependantLevelControlStatus_spn5296'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['SuspensionControlRefusalInformation_spn1827'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Memorylevel_spn5432'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    return data

# FLI2
def PGN_65115(msg, data):
    data['LaneTrackingStatusRightSide_spn1711'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['LaneTrackingStatusLeftSide_spn1710'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['LaneDepartureIndicationEnableStatus_spn1702'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['DriverAlertnessLevel_spn7474'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 0.4) # Unit = %
    data['DriverAlertnessWarningSystemState_spn7475'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000111)), 7)  * 1.0) # Unit = bit
    data['LeftWheelLaneDepartureDistance_spn8139'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) - 125.0 # Unit = cm
    data['RightWheelLaneDepartureDistance_spn8140'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) - 125.0 # Unit = cm
    data['LaneDepartureWarningSystemState_spn8141'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['ForwardLaneImagerStatus_spn8142'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    return data

# BM
def PGN_65126(msg, data):
    data['BatteryMainSwitchHoldState_spn1681'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    return data

# CCC
def PGN_65127(msg, data):
    data['AuxiliaryHeaterMaximumOutputPower_spn1690'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 2.0) # Unit = W
    return data

# VF
def PGN_65128(msg, data):
    data['HydraulicTemperature_spn1638'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['HydraulicOilFilterRestrictionSwitch_spn1713'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['WinchOilPressureSwitch_spn1857'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HydraulicOilLevel_spn2602'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 0.4) # Unit = %
    return data

# ET3
def PGN_65129(msg, data):
    data['EngineIntakeManifold1Temperature(HighResolution)_spn1636'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineCoolantTemperature(HighResolution)_spn1637'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineIntakeValveActuationSystemOilTemperature_spn2986'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineChargeAirCooler1OutletTemperature_spn2630'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    return data

# EFS
def PGN_65130(msg, data):
    data['EngineOilLevelRemoteReservoir_spn1380'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 0.4) # Unit = %
    data['EngineFuelSupplyPumpIntakeAbsolutePressure_spn1381'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 2.0) # Unit = kPa
    data['EngineFuelFilter(suctionside)DifferentialPressure_spn1382'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 2.0) # Unit = kPa
    data['EngineWasteOilReservoirLevel_spn3548'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 0.4) # Unit = %
    data['EngineOilFilterOutletPressure_spn3549'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 4.0) # Unit = kPa
    data['EngineOilPrimingPumpSwitch_spn3550'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EngineOilPrimingState_spn3551'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['EngineOilPre-HeatedState_spn3552'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['EngineCoolantPre-heatedState_spn3553'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['EngineVentilationStatus_spn3554'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000111)), 7)  * 1.0) # Unit = bit
    data['FuelPumpPrimerStatus_spn4083'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00011000) >> 3)), 3)  * 1.0) # Unit = bit
    data['EngineFuelPrimingState_spn11732'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b01100000) >> 5)), 3)  * 1.0) # Unit = bit
    data['EngineFuelSupplyPumpIntakePressure_spn7104'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 2.0) # Unit = kPa
    return data

# TCO1
def PGN_65132(msg, data):
    data['Driver1workingstate_spn1612'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000111)), 7)  * 1.0) # Unit = bit
    data['Driver2workingstate_spn1613'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00111000) >> 3)), 7)  * 1.0) # Unit = bit
    data['Vehiclemotion_spn1611'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Driver1TimeRelatedStates_spn1617'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Drivercarddriver1_spn1615'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['VehicleOverspeed_spn1614'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Driver2TimeRelatedStates_spn1618'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Drivercarddriver2_spn1616'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Systemevent_spn1622'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Handlinginformation_spn1621'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Tachographperformance_spn1620'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Directionindicator_spn1619'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Tachographoutputshaftspeed_spn1623'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.125) # Unit = rpm
    data['Tachographvehiclespeed_spn1624'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64259)  * 0.003906) # Unit = km/h
    return data

# HTR
def PGN_65133(msg, data):
    data['AuxiliaryHeaterOutputCoolantTemperature_spn1687'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['AuxiliaryHeaterInputAirTemperature_spn1688'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['AuxiliaryHeaterOutputPowerPercent_spn1689'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 0.4) # Unit = %
    data['AuxiliaryHeaterMode_spn1677'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['AuxiliaryHeaterWaterPumpStatus_spn1676'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['CabVentilation_spn1678'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['EngineHeatingZone_spn1679'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['CabHeatingZone_spn1680'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['ADRCompliantHeaterInstallation_spn6821'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    return data

# HRW
def PGN_65134(msg, data):
    data['FrontAxleLeftWheelSpeed_spn1592'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64259)  * 0.003906) # Unit = km/h
    data['Frontaxlerightwheelspeed_spn1593'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64259)  * 0.003906) # Unit = km/h
    data['Rearaxleleftwheelspeed_spn1594'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64259)  * 0.003906) # Unit = km/h
    data['Rearaxlerightwheelspeed_spn1595'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64259)  * 0.003906) # Unit = km/h
    return data

# ACC1
def PGN_65135(msg, data):
    data['Speedofforwardvehicle_spn1586'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) # Unit = km/h
    data['Distancetoforwardvehicle_spn1587'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) # Unit = m
    data['AdaptiveCruiseControlSetSpeed_spn1588'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) # Unit = km/h
    data['AdaptiveCruiseControlMode_spn1590'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000111)), 7)  * 1.0) # Unit = bit
    data['Adaptivecruisecontrolsetdistancemode_spn1589'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00111000) >> 3)), 7)  * 1.0) # Unit = bit
    data['Roadcurvature_spn1591'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64259)  * 0.007812) - 250.0 # Unit = 1/km
    data['ACCTargetDetected_spn1798'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['ACCSystemShutoffWarning_spn1797'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['ACCDistanceAlertSignal_spn1796'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['ForwardCollisionWarning_spn5022'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# CVW
def PGN_65136(msg, data):
    data['PoweredVehicleWeight_spn1585'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 10.0) # Unit = kg
    data['GrossCombinationVehicleWeight_spn1760'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 10.0) # Unit = kg
    return data

# LTP
def PGN_65137(msg, data):
    data['LaserTracerTargetDeviation_spn1579'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.1) - 3200.0 # Unit = mm
    data['LaserTracerVerticalDistance_spn1580'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.1) # Unit = mm
    data['LaserTracerHorizontalDeviation_spn1581'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) # Unit = %
    data['LEDDisplayData_2_spn1582'] = ( enforceMaxV(( (int(msg[10:12], 16))), 255)  * 1.0) # Unit = bit
    data['LaserTracerInformation_spn1583'] = ( enforceMaxV(( (int(msg[12:14], 16))), 255)  * 1.0) # Unit = bit
    return data

# LBC
def PGN_65138(msg, data):
    data['BladeDurationandDirection_spn1577'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.1) - 3276.8 # Unit = s
    data['BladeControlMode_spn1578'] = ( enforceMaxV(( (int(msg[4:6], 16))), 255)  * 1.0) # Unit = bit
    data['BladeControlMode-Left_spn5407'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['BladeControlMode-Right_spn5408'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['LandLevelingSystemEnableStatus_spn5409'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    return data

# LMP
def PGN_65139(msg, data):
    data['MastPosition_spn1576'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.1) - 3200.0 # Unit = mm
    return data

# LSP
def PGN_65140(msg, data):
    data['ModifyLevelingSystemSetPoint_spn1575'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.1) - 3200.0 # Unit = mm
    return data

# LVD
def PGN_65141(msg, data):
    data['LaserStrikeVerticalDeviation_spn1574'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.1) - 3200.0 # Unit = mm
    data['LaserReceiverType_spn2576'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) # Unit = count
    data['LaserStrikeDataLatency_spn2793'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 5.12e-05) # Unit = s
    data['AbsoluteLaserStrikePosition_spn2794'] = ( enforceMaxV(( (int(msg[10:12], 16)) + ((int(msg[12:14], 16)) << 8 )), 64255)  * 0.1) # Unit = mm
    return data

# LVDD
def PGN_65142(msg, data):
    data['LEDDisplayData_1_spn1573'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = bit
    data['LEDDisplayModeControl_spn1805'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['LEDDisplayDeadbandControl_spn1806'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['LEDPatternControl_spn2578'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['DisplayDeadbands_spn2577'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    return data

# AP
def PGN_65143(msg, data):
    data['AuxiliaryVacuumPressureReading_spn136'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.5) # Unit = kPa
    data['AuxiliaryGagePressureReading1_spn137'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.5) # Unit = kPa
    data['AuxiliaryAbsolutePressureReading_spn138'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.5) # Unit = kPa
    return data

# TP1
def PGN_65144(msg, data):
    data['TirePressureCheckInterval_spn39'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) # Unit = min
    data['SteerChannelMode_spn1466'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['Trailer/tagChannelMode_spn1467'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['DriveChannelMode_spn1468'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['PCUDriveSolenoidStatus_spn1469'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['PCUSteerSolenoidStatus_spn1470'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['TirePressureSupplySwitchStatus_spn1471'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['PCUDeflateSolenoidStatus_spn1472'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['PCUControlSolenoidStatus_spn1473'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['PCUSupplySolenoidStatus_spn1474'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['PCUTrailerTagorPushSolenoidStatus_spn1475'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# TP2
def PGN_65145(msg, data):
    data['TrailerTagOrPushChannelTirePressureTarget_spn141'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.5) # Unit = kPa
    data['DriveChannelTirePressureTarget_spn142'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.5) # Unit = kPa
    data['SteerChannelTirePressureTarget_spn143'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.5) # Unit = kPa
    return data

# TP3
def PGN_65146(msg, data):
    data['TrailerTagOrPushChannelTirePressure_spn144'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.5) # Unit = kPa
    data['DriveChannelTirePressure_spn145'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.5) # Unit = kPa
    data['SteerChannelTirePressure_spn146'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.5) # Unit = kPa
    return data

# CT1
def PGN_65147(msg, data):
    data['EngineCylinder_1CombustionTime_spn1444'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.01) # Unit = ms
    data['EngineCylinder_2CombustionTime_spn1445'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.01) # Unit = ms
    data['EngineCylinder_3CombustionTime_spn1446'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.01) # Unit = ms
    data['EngineCylinder_4CombustionTime_spn1447'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.01) # Unit = ms
    return data

# CT2
def PGN_65148(msg, data):
    data['EngineCylinder_5CombustionTime_spn1448'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.01) # Unit = ms
    data['EngineCylinder_6CombustionTime_spn1449'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.01) # Unit = ms
    data['EngineCylinder_7CombustionTime_spn1450'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.01) # Unit = ms
    data['EngineCylinder_8CombustionTime_spn1451'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.01) # Unit = ms
    return data

# CT3
def PGN_65149(msg, data):
    data['EngineCylinder_9CombustionTime_spn1452'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.01) # Unit = ms
    data['EngineCylinder_10CombustionTime_spn1453'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.01) # Unit = ms
    data['EngineCylinder_11CombustionTime_spn1454'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.01) # Unit = ms
    data['EngineCylinder_12CombustionTime_spn1455'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.01) # Unit = ms
    return data

# CT4
def PGN_65150(msg, data):
    data['EngineCylinder_13CombustionTime_spn1456'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.01) # Unit = ms
    data['EngineCylinder_14CombustionTime_spn1457'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.01) # Unit = ms
    data['EngineCylinder_15CombustionTime_spn1458'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.01) # Unit = ms
    data['EngineCylinder_16CombustionTime_spn1459'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.01) # Unit = ms
    return data

# CT5
def PGN_65151(msg, data):
    data['EngineCylinder_17CombustionTime_spn1460'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.01) # Unit = ms
    data['EngineCylinder_18CombustionTime_spn1461'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.01) # Unit = ms
    data['EngineCylinder_19CombustionTime_spn1462'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.01) # Unit = ms
    data['EngineCylinder_20CombustionTime_spn1463'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.01) # Unit = ms
    return data

# CT6
def PGN_65152(msg, data):
    data['EngineDesiredCombustionTime_spn1464'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.01) # Unit = ms
    data['EngineAverageCombustionTime_spn1465'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.01) # Unit = ms
    return data

# GFI2
def PGN_65153(msg, data):
    data['EngineFuelFlowRate1_spn1440'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.1) # Unit = mÂ³/h
    data['EngineFuelFlowRate2_spn1441'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.1) # Unit = mÂ³/h
    data['EngineFuelValve1Position_spn1442'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.4) # Unit = %
    data['EngineFuelValve2Position_spn1443'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 0.4) # Unit = %
    data['EngineFuelValve1CommandedPosition_spn1765'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 0.4) # Unit = %
    data['EngineFuelValve2CommandedPosition_spn1766'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 0.4) # Unit = %
    return data

# IT1
def PGN_65154(msg, data):
    data['EngineCylinder1IgnitionTiming_spn1413'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64259)  * 0.007812) - 200.0 # Unit = deg
    data['EngineCylinder2IgnitionTiming_spn1414'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64259)  * 0.007812) - 200.0 # Unit = deg
    data['EngineCylinder3IgnitionTiming_spn1415'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64259)  * 0.007812) - 200.0 # Unit = deg
    data['EngineCylinder4IgnitionTiming_spn1416'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64259)  * 0.007812) - 200.0 # Unit = deg
    return data

# IT2
def PGN_65155(msg, data):
    data['EngineCylinder5IgnitionTiming_spn1417'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64259)  * 0.007812) - 200.0 # Unit = deg
    data['EngineCylinder6IgnitionTiming_spn1418'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64259)  * 0.007812) - 200.0 # Unit = deg
    data['EngineCylinder7IgnitionTiming_spn1419'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64259)  * 0.007812) - 200.0 # Unit = deg
    data['EngineCylinder8IgnitionTiming_spn1420'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64259)  * 0.007812) - 200.0 # Unit = deg
    return data

# IT3
def PGN_65156(msg, data):
    data['EngineCylinder9IgnitionTiming_spn1421'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64259)  * 0.007812) - 200.0 # Unit = deg
    data['EngineCylinder10IgnitionTiming_spn1422'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64259)  * 0.007812) - 200.0 # Unit = deg
    data['EngineCylinder11IgnitionTiming_spn1423'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64259)  * 0.007812) - 200.0 # Unit = deg
    data['EngineCylinder12IgnitionTiming_spn1424'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64259)  * 0.007812) - 200.0 # Unit = deg
    return data

# IT4
def PGN_65157(msg, data):
    data['EngineCylinder13IgnitionTiming_spn1425'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64259)  * 0.007812) - 200.0 # Unit = deg
    data['EngineCylinder14IgnitionTiming_spn1426'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64259)  * 0.007812) - 200.0 # Unit = deg
    data['EngineCylinder15IgnitionTiming_spn1427'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64259)  * 0.007812) - 200.0 # Unit = deg
    data['EngineCylinder16IgnitionTiming_spn1428'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64259)  * 0.007812) - 200.0 # Unit = deg
    return data

# IT5
def PGN_65158(msg, data):
    data['EngineCylinder17IgnitionTiming_spn1429'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64259)  * 0.007812) - 200.0 # Unit = deg
    data['EngineCylinder18IgnitionTiming_spn1430'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64259)  * 0.007812) - 200.0 # Unit = deg
    data['EngineCylinder19IgnitionTiming_spn1431'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64259)  * 0.007812) - 200.0 # Unit = deg
    data['EngineCylinder20IgnitionTiming_spn1432'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64259)  * 0.007812) - 200.0 # Unit = deg
    return data

# IT6
def PGN_65159(msg, data):
    data['EngineDesiredIgnitionTiming1_spn1433'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64259)  * 0.007812) - 200.0 # Unit = deg
    data['EngineDesiredIgnitionTiming2_spn1434'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64259)  * 0.007812) - 200.0 # Unit = deg
    data['EngineDesiredIgnitionTiming3_spn1435'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64259)  * 0.007812) - 200.0 # Unit = deg
    data['EngineActualIgnitionTiming_spn1436'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64259)  * 0.007812) - 200.0 # Unit = deg
    return data

# ISO1
def PGN_65160(msg, data):
    data['EngineCylinder1IgnitionTransformerSecondaryOutput_spn1393'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) - 125.0 # Unit = %
    data['EngineCylinder2IgnitionTransformerSecondaryOutput_spn1394'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) - 125.0 # Unit = %
    data['EngineCylinder3IgnitionTransformerSecondaryOutput_spn1395'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) - 125.0 # Unit = %
    data['EngineCylinder4IgnitionTransformerSecondaryOutput_spn1396'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) - 125.0 # Unit = %
    data['EngineCylinder5IgnitionTransformerSecondaryOutput_spn1397'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) - 125.0 # Unit = %
    data['EngineCylinder6IgnitionTransformerSecondaryOutput_spn1398'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 1.0) - 125.0 # Unit = %
    data['EngineCylinder7IgnitionTransformerSecondaryOutput_spn1399'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 1.0) - 125.0 # Unit = %
    data['EngineCylinder8IgnitionTransformerSecondaryOutput_spn1400'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 1.0) - 125.0 # Unit = %
    return data

# ISO2
def PGN_65161(msg, data):
    data['EngineCylinder9IgnitionTransformerSecondaryOutput_spn1401'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) - 125.0 # Unit = %
    data['EngineCylinder10IgnitionTransformerSecondaryOutput_spn1402'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) - 125.0 # Unit = %
    data['EngineCylinder11IgnitionTransformerSecondaryOutput_spn1403'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) - 125.0 # Unit = %
    data['EngineCylinder12IgnitionTransformerSecondaryOutput_spn1404'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) - 125.0 # Unit = %
    data['EngineCylinder13IgnitionTransformerSecondaryOutput_spn1405'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) - 125.0 # Unit = %
    data['EngineCylinder14IgnitionTransformerSecondaryOutput_spn1406'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 1.0) - 125.0 # Unit = %
    data['EngineCylinder15IgnitionTransformerSecondaryOutput_spn1407'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 1.0) - 125.0 # Unit = %
    data['EngineCylinder16IgnitionTransformerSecondaryOutput_spn1408'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 1.0) - 125.0 # Unit = %
    return data

# ISO3
def PGN_65162(msg, data):
    data['EngineCylinder17IgnitionTransformerSecondaryOutput_spn1409'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) - 125.0 # Unit = %
    data['EngineCylinder18IgnitionTransformerSecondaryOutput_spn1410'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) - 125.0 # Unit = %
    data['EngineCylinder19IgnitionTransformerSecondaryOutput_spn1411'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) - 125.0 # Unit = %
    data['EngineCylinder20IgnitionTransformerSecondaryOutput_spn1412'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) - 125.0 # Unit = %
    return data

# GFP1
def PGN_65163(msg, data):
    data['EngineFuelValve1IntakeAbsolutePressure_spn1390'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    data['EngineFuelValve1DifferentialPressure_spn1391'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    data['EngineAirtoFuelDifferentialPressure_spn1392'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    data['EngineFuelValve1OutletAbsolutePressure_spn2980'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    return data

# AAI
def PGN_65164(msg, data):
    data['AuxiliaryTemperature1_spn441'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['AuxiliaryTemperature2_spn442'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['AuxiliaryPressure_1_spn1387'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 16.0) # Unit = kPa
    data['AuxiliaryPressure_2_spn1388'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 16.0) # Unit = kPa
    data['AuxiliaryLevel_spn3087'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.1) # Unit = mm
    data['RelativeHumidity_spn354'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 0.4) # Unit = %
    return data

# VEP2
def PGN_65165(msg, data):
    data['BatteryPotential/PowerInput2_spn444'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['ECUPowerOutputSupplyVoltage_1_spn3597'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['ECUPowerOutputSupplyVoltage_2_spn3598'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['ECUPowerOutputSupplyVoltage_3_spn3599'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    return data

# SP2
def PGN_65167(msg, data):
    data['EngineExternalShutdownAirSupplyPressure_spn1320'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.5) # Unit = kPa
    return data

# FL
def PGN_65169(msg, data):
    data['EngineFuelLeakage1_spn1239'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EngineFuelLeakage2_spn1240'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['EngineFluidBundLevel_spn7785'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 0.4) # Unit = %
    return data

# EI1
def PGN_65170(msg, data):
    data['EngineOilFilterIntakePressure_spn1208'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 4.0) # Unit = kPa
    data['EngineExhaustPressure1_spn1209'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 )), 64259)  * 0.007812) - 250.0 # Unit = kPa
    data['EngineFuelRackPosition_spn1210'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 0.4) # Unit = %
    data['EngineFuelSystem1GasMassFlowRate_spn1241'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.05) # Unit = kg/h
    data['InstantaneousEstimatedBrakePower_spn1242'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.5) # Unit = kW
    return data

# EES
def PGN_65171(msg, data):
    data['ElectricalLoad_spn1204'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.5) # Unit = kW
    data['SafetyWireStatus_spn1205'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EngineTurningGearEngaged_spn1206'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    return data

# EAC
def PGN_65172(msg, data):
    data['EngineAuxiliaryCoolantPressure_spn1203'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 4.0) # Unit = kPa
    data['EngineAuxiliaryCoolantTemperature_spn1212'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['SeaWaterPumpOutletPressure_spn2435'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 2.0) # Unit = kPa
    data['EngineCoolantPressure1(ExtendedRange)_spn20'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 4.0) # Unit = kPa
    data['EngineCoolantPressure2(ExtendedRange)_spn7313'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 4.0) # Unit = kPa
    data['EngineCoolantPumpCoolantOutletPressure_spn8473'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 2.0) # Unit = kPa
    data['SeaWaterPumpOutletPressure2_spn12893'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 2.0) # Unit = kPa
    return data

# RBI
def PGN_65173(msg, data):
    data['EngineOperationTimeSinceRebuild_spn1193'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 1.0) # Unit = s
    return data

# TCW
def PGN_65174(msg, data):
    data['EngineTurbochargerWastegateActuator1Position_spn1188'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 0.4) # Unit = %
    data['EngineTurbochargerWastegateActuator2Position_spn1189'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 0.4) # Unit = %
    data['EngineTurbochargerWastegateActuator3Position_spn1190'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 0.4) # Unit = %
    data['EngineTurbochargerWastegateActuator4Position_spn1191'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 0.4) # Unit = %
    data['EngineTurbochargerWastegateActuatorControlAirPressure_spn1192'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 4.0) # Unit = kPa
    data['EngineTurbochargerWastegateActuator1DesiredPosition_spn5370'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 0.4) # Unit = %
    data['EngineTurbochargerWastegateActuator1PreliminaryFMI_spn5371'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00011111)), 31)  * 1.0) # Unit = binary
    data['EngineTurbochargerWastegateActuator1TemperatureStatus_spn5372'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11100000) >> 5)), 7)  * 1.0) # Unit = bit
    data['EngineTurbochargerWastegateActuator2DesiredPosition_spn5373'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 0.4) # Unit = %
    return data

# TCI5
def PGN_65175(msg, data):
    data['EngineTurbocharger1TurbineOutletTemperature_spn1184'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineTurbocharger2TurbineOutletTemperature_spn1185'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineTurbocharger3TurbineOutletTemperature_spn1186'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineTurbocharger4TurbineOutletTemperature_spn1187'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    return data

# TCI4
def PGN_65176(msg, data):
    data['EngineTurbocharger1TurbineIntakeTemperature_spn1180'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineTurbocharger2TurbineIntakeTemperature_spn1181'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineTurbocharger3TurbineIntakeTemperature_spn1182'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineTurbocharger4TurbineIntakeTemperature_spn1183'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    return data

# TCI3
def PGN_65177(msg, data):
    data['EngineTurbocharger1CompressorIntakePressure_spn1176'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64259)  * 0.007812) - 250.0 # Unit = kPa
    data['EngineTurbocharger2CompressorIntakePressure_spn1177'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64259)  * 0.007812) - 250.0 # Unit = kPa
    data['EngineTurbocharger3CompressorIntakePressure_spn1178'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64259)  * 0.007812) - 250.0 # Unit = kPa
    data['EngineTurbocharger4CompressorIntakePressure_spn1179'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64259)  * 0.007812) - 250.0 # Unit = kPa
    return data

# TCI2
def PGN_65178(msg, data):
    data['EngineTurbocharger1CompressorIntakeTemperature_spn1172'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineTurbocharger2CompressorIntakeTemperature_spn1173'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineTurbocharger3CompressorIntakeTemperature_spn1174'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineTurbocharger4CompressorIntakeTemperature_spn1175'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    return data

# TCI1
def PGN_65179(msg, data):
    data['EngineTurbochargerLubeOilPressure2_spn1168'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 4.0) # Unit = kPa
    data['EngineTurbocharger2Speed_spn1169'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 )), 64255)  * 4.0) # Unit = rpm
    data['EngineTurbocharger3Speed_spn1170'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 4.0) # Unit = rpm
    data['EngineTurbocharger4Speed_spn1171'] = ( enforceMaxV(( (int(msg[10:12], 16)) + ((int(msg[12:14], 16)) << 8 )), 64255)  * 4.0) # Unit = rpm
    return data

# MBT3
def PGN_65180(msg, data):
    data['EngineMainBearing9Temperature_spn1165'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineMainBearing10Temperature_spn1166'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineMainBearing11Temperature_spn1167'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineMainBearing12Temperature_spn6830'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    return data

# MBT2
def PGN_65181(msg, data):
    data['EngineMainBearing5Temperature_spn1161'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineMainBearing6Temperature_spn1162'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineMainBearing7Temperature_spn1163'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineMainBearing8Temperature_spn1164'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    return data

# MBT1
def PGN_65182(msg, data):
    data['EngineMainBearing1Temperature_spn1157'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineMainBearing2Temperature_spn1158'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineMainBearing3Temperature_spn1159'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineMainBearing4Temperature_spn1160'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    return data

# EPT5
def PGN_65183(msg, data):
    data['EngineExhaustGasPort17Temperature_spn1153'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineExhaustGasPort18Temperature_spn1154'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineExhaustGasPort19Temperature_spn1155'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineExhaustGasPort20Temperature_spn1156'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    return data

# EPT4
def PGN_65184(msg, data):
    data['EngineExhaustGasPort13Temperature_spn1149'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineExhaustGasPort14Temperature_spn1150'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineExhaustGasPort15Temperature_spn1151'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineExhaustGasPort16Temperature_spn1152'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    return data

# EPT3
def PGN_65185(msg, data):
    data['EngineExhaustGasPort9Temperature_spn1145'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineExhaustGasPort10Temperature_spn1146'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineExhaustGasPort11Temperature_spn1147'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineExhaustGasPort12Temperature_spn1148'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    return data

# EPT2
def PGN_65186(msg, data):
    data['EngineExhaustGasPort5Temperature_spn1141'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineExhaustGasPort6Temperature_spn1142'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineExhaustGasPort7Temperature_spn1143'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineExhaustGasPort8Temperature_spn1144'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    return data

# EPT1
def PGN_65187(msg, data):
    data['EngineExhaustGasPort1Temperature_spn1137'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineExhaustGasPort2Temperature_spn1138'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineExhaustGasPort3Temperature_spn1139'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineExhaustGasPort4Temperature_spn1140'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    return data

# ET2
def PGN_65188(msg, data):
    data['EngineOilTemperature2_spn1135'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineECUTemperature_spn1136'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineExhaustGasRecirculation1DifferentialPressure_spn411'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64259)  * 0.007812) - 250.0 # Unit = kPa
    data['EngineExhaustGasRecirculation1Temperature_spn412'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    return data

# IMT2
def PGN_65189(msg, data):
    data['EngineIntakeManifold2Temperature_spn1131'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['EngineIntakeManifold3Temperature_spn1132'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['EngineIntakeManifold4Temperature_spn1133'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['EngineIntakeManifold5Temperature_spn1802'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['EngineIntakeManifold6Temperature_spn1803'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['DesiredEngineIntakeManifoldTemperature_spn12304'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['DesiredEngineIntakeManifoldTemperatureHighLimit_spn12305'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    return data

# IMT1
def PGN_65190(msg, data):
    data['EngineTurbocharger1BoostPressure_spn1127'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.125) # Unit = kPa
    data['EngineTurbocharger2BoostPressure_spn1128'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.125) # Unit = kPa
    data['EngineTurbocharger3BoostPressure_spn1129'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.125) # Unit = kPa
    data['EngineTurbocharger4BoostPressure_spn1130'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.125) # Unit = kPa
    return data

# AT1
def PGN_65191(msg, data):
    data['EngineAlternatorBearing1Temperature_spn1122'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['EngineAlternatorBearing2Temperature_spn1123'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['EngineAlternatorWinding1Temperature_spn1124'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['EngineAlternatorWinding2Temperature_spn1125'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['EngineAlternatorWinding3Temperature_spn1126'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['EngineAlternatorWinding4Temperature_spn8463'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['EngineAlternatorWinding5Temperature_spn8464'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['EngineAlternatorWinding6Temperature_spn8465'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    return data

# ACTL
def PGN_65192(msg, data):
    data['ArticulationAngle_spn1120'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) - 125.0 # Unit = deg
    data['ArticulationAngularVelocity_spn9652'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 )), 64131)  * 0.007812) - 250.0 # Unit = deg/s
    return data

# EO1
def PGN_65193(msg, data):
    data['EngineDesiredRatedExhaustOxygen_spn1117'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    data['EngineDesiredExhaustOxygen_spn1118'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    data['EngineActualExhaust1Oxygen_spn1119'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    data['EngineExhaustO2SensorFuelingCorrection_spn1695'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 1.0) - 125.0 # Unit = %
    data['EngineExhaustO2SensorClosedLoopOperation_spn1696'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# AF2
def PGN_65194(msg, data):
    data['GaseousFuelCorrectionFactor_spn1116'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) # Unit = %
    data['EngineIntakeManifoldDesiredAbsolutePressure_spn1692'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 )), 64255)  * 0.1) # Unit = kPa
    data['EngineTurbochargerWastegateValvePosition_spn1693'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 0.4) # Unit = %
    data['EngineFuelSystemGasMassFlowRateSensorFuelingCorrection_spn1694'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) - 125.0 # Unit = %
    data['GaseousFuelInjectionPulseCorrectionFactor_spn6649'] = ( enforceMaxV(( (int(msg[10:12], 16)) + ((int(msg[12:14], 16)) << 8 )), 64255)  * 0.0078125) - 251.0 # Unit = %
    return data

# ETC6
def PGN_65195(msg, data):
    data['RecommendedGear_spn1113'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) - 125.0 # Unit = gear value
    data['HighestPossibleGear_spn1115'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) - 125.0 # Unit = gear value
    data['LowestPossibleGear_spn1114'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) - 125.0 # Unit = gear value
    data['ClutchLifeRemaining_spn2983'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 0.4) # Unit = %
    return data

# EBC4
def PGN_65196(msg, data):
    data['BrakeLiningRemainingFrontAxleLeftWheel_spn1099'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 0.4) # Unit = %
    data['BrakeLiningRemainingFrontAxleRightWheel_spn1100'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 0.4) # Unit = %
    data['BrakeLiningRemainingRearAxle_1LeftWheel_spn1101'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 0.4) # Unit = %
    data['BrakeLiningRemainingRearAxle_1RightWheel_spn1102'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 0.4) # Unit = %
    data['BrakeLiningRemainingRearAxle_2LeftWheel_spn1103'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.4) # Unit = %
    data['BrakeLiningRemainingRearAxle_2RightWheel_spn1104'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 0.4) # Unit = %
    data['BrakeLiningRemainingRearAxle_3LeftWheel_spn1105'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 0.4) # Unit = %
    data['BrakeLiningRemainingRearAxle_3RightWheel_spn1106'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 0.4) # Unit = %
    return data

# EBC3
def PGN_65197(msg, data):
    data['BrakeApplicationPressureHighRangeFrontAxleLeftWheel_spn1091'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 5.0) # Unit = kPa
    data['BrakeApplicationPressureHighRangeFrontAxleRightWheel_spn1092'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 5.0) # Unit = kPa
    data['BrakeApplicationPressureHighRangeRearAxle_1LeftWheel_spn1093'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 5.0) # Unit = kPa
    data['BrakeApplicationPressureHighRangeRearAxle_1RightWheel_spn1094'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 5.0) # Unit = kPa
    data['BrakeApplicationPressureHighRangeRearAxle_2LeftWheel_spn1095'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 5.0) # Unit = kPa
    data['BrakeApplicationPressureHighRangeRearAxle_2RightWheel_spn1096'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 5.0) # Unit = kPa
    data['BrakeApplicationPressureHighRangeRearAxle_3LeftWheel_spn1097'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 5.0) # Unit = kPa
    data['BrakeApplicationPressureHighRangeRearAxle_3RightWheel_spn1098'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 5.0) # Unit = kPa
    return data

# AIR1
def PGN_65198(msg, data):
    data['PneumaticSupplyPressure_spn46'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 8.0) # Unit = kPa
    data['Parkingand/orTrailerAirPressure_spn1086'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 8.0) # Unit = kPa
    data['ServiceBrakeCircuit1AirPressure_spn1087'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 8.0) # Unit = kPa
    data['ServiceBrakeCircuit2AirPressure_spn1088'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 8.0) # Unit = kPa
    data['AuxiliaryEquipmentSupplyPressure_spn1089'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 8.0) # Unit = kPa
    data['AirSuspensionSupplyPressure1_spn1090'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 8.0) # Unit = kPa
    data['AirCompressorStatus_spn1351'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['PowertrainCircuitAirSupplyPressure_spn6305'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 8.0) # Unit = kPa
    return data

# GFC
def PGN_65199(msg, data):
    data['TripFuel(Gaseous)_spn1039'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 0.5) # Unit = kg
    data['TotalFuelUsed(Gaseous)_spn1040'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 ) + ((int(msg[12:14], 16)) << 16 ) + ((int(msg[14:16], 16)) << 24 )), 4211081215)  * 0.5) # Unit = kg
    return data

# TTI2
def PGN_65200(msg, data):
    data['TripCruiseTime_spn1034'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 0.05) # Unit = h
    data['TripPTOGovernorTime_spn1035'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 ) + ((int(msg[12:14], 16)) << 16 ) + ((int(msg[14:16], 16)) << 24 )), 4211081215)  * 0.05) # Unit = h
    data['TripEngineRunningTime_spn1036'] = ( enforceMaxV(( (int(msg[16:18], 16)) + ((int(msg[18:20], 16)) << 8 ) + ((int(msg[20:22], 16)) << 16 ) + ((int(msg[22:24], 16)) << 24 )), 4211081215)  * 0.05) # Unit = h
    data['TripIdleTime_spn1037'] = ( enforceMaxV(( (int(msg[24:26], 16)) + ((int(msg[26:28], 16)) << 8 ) + ((int(msg[28:30], 16)) << 16 ) + ((int(msg[30:32], 16)) << 24 )), 4211081215)  * 0.05) # Unit = h
    data['TripAirCompressorOnTime_spn1038'] = ( enforceMaxV(( (int(msg[32:34], 16)) + ((int(msg[34:36], 16)) << 8 ) + ((int(msg[36:38], 16)) << 16 ) + ((int(msg[38:40], 16)) << 24 )), 4211081215)  * 0.05) # Unit = h
    return data

# EH
def PGN_65201(msg, data):
    data['TotalECUDistance_spn1032'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 0.125) # Unit = km
    data['TotalECURunTime_spn1033'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 ) + ((int(msg[12:14], 16)) << 16 ) + ((int(msg[14:16], 16)) << 24 )), 4211081215)  * 0.05) # Unit = h
    return data

# GFI1
def PGN_65202(msg, data):
    data['TotalEnginePTOGovernorFuelUsed(Gaseous)_spn1030'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 0.5) # Unit = kg
    data['TripAverageFuelRate(Gaseous)_spn1031'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.05) # Unit = kg/h
    data['EngineFuelSpecificGravity_spn1389'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.0001) # Unit = 
    return data

# LFI1
def PGN_65203(msg, data):
    data['TotalEnginePTOGovernorFuelUsed_spn1028'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 0.5) # Unit = l
    data['TripAverageFuelRate_spn1029'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.05) # Unit = l/h
    data['FlexibleFuelPercentage_spn5458'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    return data

# TTI1
def PGN_65204(msg, data):
    data['TripTimeinVSL_spn1024'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 0.05) # Unit = h
    data['TripTimeinTopGear_spn1025'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 ) + ((int(msg[12:14], 16)) << 16 ) + ((int(msg[14:16], 16)) << 24 )), 4211081215)  * 0.05) # Unit = h
    data['TripTimeinGearDown_spn1026'] = ( enforceMaxV(( (int(msg[16:18], 16)) + ((int(msg[18:20], 16)) << 8 ) + ((int(msg[20:22], 16)) << 16 ) + ((int(msg[22:24], 16)) << 24 )), 4211081215)  * 0.05) # Unit = h
    data['TripTimeinDeratebyEngine_spn1027'] = ( enforceMaxV(( (int(msg[24:26], 16)) + ((int(msg[26:28], 16)) << 8 ) + ((int(msg[28:30], 16)) << 16 ) + ((int(msg[30:32], 16)) << 24 )), 4211081215)  * 0.05) # Unit = h
    return data

# TSI
def PGN_65205(msg, data):
    data['TripNumberofHotShutdowns_spn1020'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 1.0) # Unit = count
    data['TripNumberofIdleShutdowns_spn1021'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 1.0) # Unit = count
    data['TripNumberofIdleShutdownOverrides_spn1022'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 1.0) # Unit = count
    data['TripSuddenDecelerations_spn1023'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 1.0) # Unit = count
    return data

# TVI
def PGN_65206(msg, data):
    data['TripMaximumVehicleSpeed_spn1018'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64259)  * 0.003906) # Unit = km/h
    data['TripCruiseDistance_spn1019'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 ) + ((int(msg[8:10], 16)) << 16 ) + ((int(msg[10:12], 16)) << 24 )), 4211081215)  * 0.125) # Unit = km
    return data

# LF
def PGN_65207(msg, data):
    data['TripMaximumEngineSpeed_spn1013'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.125) # Unit = rpm
    data['TripAverageEngineSpeed_spn1014'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.125) # Unit = rpm
    data['TripDriveAverageLoadFactor_spn1015'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.4) # Unit = %
    data['TotalDriveAverageLoadFactor_spn1016'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 0.4) # Unit = %
    data['TotalEngineCruiseTime_spn1017'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 ) + ((int(msg[16:18], 16)) << 16 ) + ((int(msg[18:20], 16)) << 24 )), 4211081215)  * 0.05) # Unit = h
    return data

# GTFI
def PGN_65208(msg, data):
    data['TripDriveFuelUsed(Gaseous)_spn1007'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 0.5) # Unit = kg
    data['TripPTOGovernorMovingFuelUsed(Gaseous)_spn1008'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 ) + ((int(msg[12:14], 16)) << 16 ) + ((int(msg[14:16], 16)) << 24 )), 4211081215)  * 0.5) # Unit = kg
    data['TripPTOGovernorNon-movingFuelUsed(Gaseous)_spn1009'] = ( enforceMaxV(( (int(msg[16:18], 16)) + ((int(msg[18:20], 16)) << 8 ) + ((int(msg[20:22], 16)) << 16 ) + ((int(msg[22:24], 16)) << 24 )), 4211081215)  * 0.5) # Unit = kg
    data['TripVehicleIdleFuelUsed(Gaseous)_spn1010'] = ( enforceMaxV(( (int(msg[24:26], 16)) + ((int(msg[26:28], 16)) << 8 ) + ((int(msg[28:30], 16)) << 16 ) + ((int(msg[30:32], 16)) << 24 )), 4211081215)  * 0.5) # Unit = kg
    data['TripCruiseFuelUsed(Gaseous)_spn1011'] = ( enforceMaxV(( (int(msg[32:34], 16)) + ((int(msg[34:36], 16)) << 8 ) + ((int(msg[36:38], 16)) << 16 ) + ((int(msg[38:40], 16)) << 24 )), 4211081215)  * 0.5) # Unit = kg
    data['TripDriveFuelEconomy(Gaseous)_spn1012'] = ( enforceMaxV(( (int(msg[40:42], 16)) + ((int(msg[42:44], 16)) << 8 )), 64259)  * 0.001953) # Unit = km/kg
    return data

# LTFI
def PGN_65209(msg, data):
    data['TripDriveFuelUsed_spn1001'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 0.5) # Unit = l
    data['TripPTOGovernorMovingFuelUsed_spn1002'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 ) + ((int(msg[12:14], 16)) << 16 ) + ((int(msg[14:16], 16)) << 24 )), 4211081215)  * 0.5) # Unit = l
    data['TripPTOGovernorNon-movingFuelUsed_spn1003'] = ( enforceMaxV(( (int(msg[16:18], 16)) + ((int(msg[18:20], 16)) << 8 ) + ((int(msg[20:22], 16)) << 16 ) + ((int(msg[22:24], 16)) << 24 )), 4211081215)  * 0.5) # Unit = l
    data['TripVehicleIdleFuelUsed_spn1004'] = ( enforceMaxV(( (int(msg[24:26], 16)) + ((int(msg[26:28], 16)) << 8 ) + ((int(msg[28:30], 16)) << 16 ) + ((int(msg[30:32], 16)) << 24 )), 4211081215)  * 0.5) # Unit = l
    data['TripCruiseFuelUsed_spn1005'] = ( enforceMaxV(( (int(msg[32:34], 16)) + ((int(msg[34:36], 16)) << 8 ) + ((int(msg[36:38], 16)) << 16 ) + ((int(msg[38:40], 16)) << 24 )), 4211081215)  * 0.5) # Unit = l
    data['TripDriveFuelEconomy_spn1006'] = ( enforceMaxV(( (int(msg[40:42], 16)) + ((int(msg[42:44], 16)) << 8 )), 64259)  * 0.001953) # Unit = km/L
    return data

# TDI
def PGN_65210(msg, data):
    data['TripDistanceonVSL_spn998'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 0.125) # Unit = km
    data['TripGearDownDistance_spn999'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 ) + ((int(msg[12:14], 16)) << 16 ) + ((int(msg[14:16], 16)) << 24 )), 4211081215)  * 0.125) # Unit = km
    data['TripDistanceinTopGear_spn1000'] = ( enforceMaxV(( (int(msg[16:18], 16)) + ((int(msg[18:20], 16)) << 8 ) + ((int(msg[20:22], 16)) << 16 ) + ((int(msg[22:24], 16)) << 24 )), 4211081215)  * 0.125) # Unit = km
    return data

# TFI
def PGN_65211(msg, data):
    data['TripFanOnTime_spn994'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 0.05) # Unit = h
    data['TripFanOnTimeDuetotheEngineSystem_spn995'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 ) + ((int(msg[12:14], 16)) << 16 ) + ((int(msg[14:16], 16)) << 24 )), 4211081215)  * 0.05) # Unit = h
    data['TripFanOnTimeDuetoaManualSwitch_spn996'] = ( enforceMaxV(( (int(msg[16:18], 16)) + ((int(msg[18:20], 16)) << 8 ) + ((int(msg[20:22], 16)) << 16 ) + ((int(msg[22:24], 16)) << 24 )), 4211081215)  * 0.05) # Unit = h
    data['TripFanOnTimeDuetotheA/CSystem_spn997'] = ( enforceMaxV(( (int(msg[24:26], 16)) + ((int(msg[26:28], 16)) << 8 ) + ((int(msg[28:30], 16)) << 16 ) + ((int(msg[30:32], 16)) << 24 )), 4211081215)  * 0.05) # Unit = h
    return data

# CBI
def PGN_65212(msg, data):
    data['TotalCompressionBrakeDistance_spn990'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 0.125) # Unit = km
    data['TripCompressionBrakeDistance_spn991'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 ) + ((int(msg[12:14], 16)) << 16 ) + ((int(msg[14:16], 16)) << 24 )), 4211081215)  * 0.125) # Unit = km
    data['TripServiceBrakeDistance_spn992'] = ( enforceMaxV(( (int(msg[16:18], 16)) + ((int(msg[18:20], 16)) << 8 ) + ((int(msg[20:22], 16)) << 16 ) + ((int(msg[22:24], 16)) << 24 )), 4211081215)  * 0.125) # Unit = km
    data['TripServiceBrakeApplications_spn993'] = ( enforceMaxV(( (int(msg[24:26], 16)) + ((int(msg[26:28], 16)) << 8 ) + ((int(msg[28:30], 16)) << 16 ) + ((int(msg[30:32], 16)) << 24 )), 4211081215)  * 1.0) # Unit = brake appl
    return data

# FD1
def PGN_65213(msg, data):
    data['EngineFan1EstimatedPercentSpeed_spn975'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 0.4) # Unit = %
    data['FanDriveState_spn977'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['FanSpeed_spn1639'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.125) # Unit = rpm
    data['HydraulicFanMotorPressure_spn4211'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.5) # Unit = kPa
    data['FanDriveBypassCommandStatus_spn4212'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 0.4) # Unit = %
    return data

# EEC4
def PGN_65214(msg, data):
    data['EngineRatedPower_spn166'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.5) # Unit = kW
    data['EngineRatedSpeed_spn189'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.125) # Unit = rpm
    data['EngineRotationDirection_spn3669'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EngineIntakeManifoldPressureControlMode_spn5465'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['CrankAttemptCountonPresentStartAttempt_spn3671'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 1.0) # Unit = count
    data['EnginePrelubeOilLowPressureThreshold_spn8622'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 4.0) # Unit = kPa
    return data

# EBC2
def PGN_65215(msg, data):
    data['FrontAxleSpeed_spn904'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64259)  * 0.003906) # Unit = km/h
    data['RelativeSpeed;FrontAxleLeftWheel_spn905'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 0.0625) - 7.8125 # Unit = km/h
    data['RelativeSpeed;FrontAxleRightWheel_spn906'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 0.0625) - 7.8125 # Unit = km/h
    data['RelativeSpeed;RearAxle_1LeftWheel_spn907'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.0625) - 7.8125 # Unit = km/h
    data['RelativeSpeed;RearAxle_1RightWheel_spn908'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 0.0625) - 7.8125 # Unit = km/h
    data['RelativeSpeed;RearAxle_2LeftWheel_spn909'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 0.0625) - 7.8125 # Unit = km/h
    data['RelativeSpeed;RearAxle_2RightWheel_spn910'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 0.0625) - 7.8125 # Unit = km/h
    return data

# SERV
def PGN_65216(msg, data):
    data['ServiceComponentIdentification_spn911'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) # Unit = ID
    data['ServiceDistance_spn914'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 )), 64255)  * 5.0) - 160635.0 # Unit = km
    data['ServiceComponentIdentification_spn912'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) # Unit = ID
    data['ServiceDelay/CalendarTimeBased_spn915'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) - 125.0 # Unit = weeks
    data['ServiceComponentIdentification_spn913'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 1.0) # Unit = ID
    data['ServiceDelay/OperationalTimeBased_spn916'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 1.0) - 32127.0 # Unit = h
    return data

# VDHR
def PGN_65217(msg, data):
    data['TotalVehicleDistance(HighResolution)_spn917'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 5.0) # Unit = m
    data['TripDistance(HighResolution)_spn918'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 ) + ((int(msg[12:14], 16)) << 16 ) + ((int(msg[14:16], 16)) << 24 )), 4211081215)  * 5.0) # Unit = m
    return data

# ERC2
def PGN_65218(msg, data):
    data['TransmissionOutputRetarder_spn748'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['RetarderRoadSpeedLimitEnable_spn12990'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['RetarderRoadSpeedLimitActive_spn12991'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['CruiseControlRetarderActiveSpeedOffset_spn7496'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 )), 64259)  * 0.003906) - 125.0 # Unit = km/h
    data['RetarderRoadSpeedLimitSetSpeed_spn12992'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64259)  * 0.003906) # Unit = km/h
    return data

# ETC5
def PGN_65219(msg, data):
    data['TransmissionHighRangeSenseSwitch_spn778'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['TransmissionLowRangeSenseSwitch_spn779'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['TransmissionSplitterPosition_spn32'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['TransmissionReverseDirectionSwitch_spn767'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['TransmissionNeutralSwitch_spn604'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['TransmissionForwardDirectionSwitch_spn903'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    return data

# ETC4
def PGN_65221(msg, data):
    data['TransmissionSynchronizerClutchValue_spn53'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 0.4) # Unit = %
    data['TransmissionSynchronizerBrakeValue_spn54'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 0.4) # Unit = %
    return data

# ETC3
def PGN_65223(msg, data):
    data['TransmissionShiftFingerGearPosition_spn59'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 0.4) # Unit = %
    data['TransmissionShiftFingerRailPosition_spn60'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 0.4) # Unit = %
    data['TransmissionShiftFingerNeutralIndicator_spn780'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['TransmissionShiftFingerEngagementIndicator_spn781'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['TransmissionShiftFingerCenterRailIndicator_spn782'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['TransmissionShiftFingerRailActuator1_spn772'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['TransmissionShiftFingerGearActuator1_spn773'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['TransmissionShiftFingerRailActuator2_spn783'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['TransmissionShiftFingerGearActuator2_spn784'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['TransmissionRangeHighActuator_spn768'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['TransmissionRangeLowActuator_spn769'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['TransmissionSplitterDirectActuator_spn770'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['TransmissionSplitterIndirectActuator_spn771'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['TransmissionClutchActuator_spn788'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['TransmissionTorqueConverterLockupClutchActuator_spn740'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['TransmissionDefuelActuator_spn786'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['TransmissionInertiaBrakeActuator_spn787'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# DM1
def PGN_65226(msg, data):
    data['ProtectLamp_spn987'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['AmberWarningLamp_spn624'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['RedStopLamp_spn623'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['MalfunctionIndicatorLamp_spn1213'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['FlashProtectLamp_spn3041'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['FlashAmberWarningLamp(AWL)_spn3040'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['FlashRedStopLamp(RSL)_spn3039'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['FlashMalfunctionIndicatorLamp_spn3038'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['SuspectParameterNumber_spn1214'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 ) + (((int(msg[8:10], 16) & 0b11100000) >> 5) << 16 )), 524287)  * 1.0) # Unit = bit
    data['FailureModeIdentifier_spn1215'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00011111)), 31)  * 1.0) # Unit = bit
    data['OccurrenceCount_spn1216'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b01111111)), 126)  * 1.0) # Unit = bit
    data['SPNConversionMethod_spn1706'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b01000000) >> 6)), 1)  * 1.0) # Unit = bit
    return data

# AS
def PGN_65237(msg, data):
    data['AlternatorSpeed_spn589'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.5) # Unit = rpm
    data['Alternator1Status_spn3353'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Alternator2Status_spn3354'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Alternator3Status_spn3355'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Alternator4Status_spn3356'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# HSI1
def PGN_65238(msg, data):
    data['HybridSystemProtectionOverrideSwitch_spn7548'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HybridSystemPropulsionCoolantLevelSwitch_spn7549'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HybridSystemPowerElectronicsCoolantLevelSwitch_spn7550'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HybridSystemOff-BoardChargerConnectionStatus_spn7551'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['HybridSystemRegenerativeBrakingDisableSwitch_spn7552'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HybridSystemBrakePedalRegenerativeBrakingDisableSwitch_spn7553'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HybridSystemPropulsionDisableSwitch_spn7554'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HybridSystemShutdownSwitch_spn7555'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['HybridSystemCoastingRegenerativeBrakingLevelSelector_spn7556'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 0.4) # Unit = %
    data['PowerElectronicsCoolantFillSwitch_spn8475'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['PropulsionMotorCoolantFillSwitch_spn8476'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    return data

# AUXIO1
def PGN_65241(msg, data):
    data['AuxiliaryI/O_04_spn704'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_03_spn703'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_02_spn702'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_01_spn701'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_08_spn708'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_07_spn707'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_06_spn706'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_05_spn705'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_12_spn712'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_11_spn711'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_10_spn710'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_09_spn709'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_16_spn716'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_15_spn715'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_14_spn714'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/O_13_spn713'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryI/OChannel_1_spn1083'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 1.0) # Unit = count
    data['AuxiliaryI/OChannel_2_spn1084'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 1.0) # Unit = count
    return data

# EFL/P2
def PGN_65243(msg, data):
    data['EngineFuelInjectionControlPressure_spn164'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.00390625) # Unit = MPa
    data['EngineFuel1InjectorMeteringRail1Pressure_spn157'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.00390625) # Unit = MPa
    data['EngineFuel1InjectorTimingRail1Pressure_spn156'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.00390625) # Unit = MPa
    data['EngineFuel1InjectorMeteringRail2Pressure_spn1349'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.00390625) # Unit = MPa
    return data

# TC
def PGN_65245(msg, data):
    data['EngineTurbochargerLubeOilPressure1_spn104'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 4.0) # Unit = kPa
    data['EngineTurbocharger1Speed_spn103'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 )), 64255)  * 4.0) # Unit = rpm
    data['EngineTurbochargerOilLevelSwitch_spn1665'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['EngineTurbochargerDifferentialSpeed_spn5980'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 4.0) # Unit = rpm
    return data

# AIR2
def PGN_65246(msg, data):
    data['EngineAirStartPressure_spn82'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 4.0) # Unit = kPa
    data['EngineAirStartPressure(ExtendedRange)_spn6831'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 16.0) # Unit = kPa
    data['EngineAirStopPressure_spn6832'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 4.0) # Unit = kPa
    return data

# EEC3
def PGN_65247(msg, data):
    data['NominalFriction-PercentTorque_spn514'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) - 125.0 # Unit = %
    data['EnginesDesiredOperatingSpeed_spn515'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 )), 64255)  * 0.125) # Unit = rpm
    data['EnginesDesiredOperatingSpeedAsymmetryAdjustment_spn519'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) # Unit = Ratio
    data['EstimatedEngineParasiticLosses-PercentTorque_spn2978'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) - 125.0 # Unit = %
    data['Aftertreatment1ExhaustGasMassFlowRate_spn3236'] = ( enforceMaxV(( (int(msg[10:12], 16)) + ((int(msg[12:14], 16)) << 8 )), 64255)  * 0.2) # Unit = kg/h
    data['Aftertreatment1IntakeDewPoint_spn3237'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment1ExhaustDewPoint_spn3238'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment2IntakeDewPoint_spn3239'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['Aftertreatment2ExhaustDewPoint_spn3240'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# VD
def PGN_65248(msg, data):
    data['TripDistance_spn244'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 0.125) # Unit = km
    data['TotalVehicleDistance_spn245'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 ) + ((int(msg[12:14], 16)) << 16 ) + ((int(msg[14:16], 16)) << 24 )), 4211081215)  * 0.125) # Unit = km
    return data

# RC
def PGN_65249(msg, data):
    data['RetarderType_spn901'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['RetarderLocation_spn902'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    data['RetarderControlMethod_spn557'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) # Unit = step
    data['RetarderSpeedAtIdlePoint1_spn546'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.125) # Unit = rpm
    data['RetarderPercentTorqueAtIdlePoint1_spn551'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 1.0) - 125.0 # Unit = %
    data['MaximumRetarderSpeedPoint2_spn548'] = ( enforceMaxV(( (int(msg[10:12], 16)) + ((int(msg[12:14], 16)) << 8 )), 64255)  * 0.125) # Unit = rpm
    data['RetarderPercentTorqueAtMaximumSpeedPoint2_spn552'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 1.0) - 125.0 # Unit = %
    data['RetarderSpeedAtPoint3_spn549'] = ( enforceMaxV(( (int(msg[16:18], 16)) + ((int(msg[18:20], 16)) << 8 )), 64255)  * 0.125) # Unit = rpm
    data['RetarderPercentTorqueAtPoint3_spn553'] = ( enforceMaxV(( (int(msg[20:22], 16))), 250)  * 1.0) - 125.0 # Unit = %
    data['RetarderSpeedAtPoint4_spn550'] = ( enforceMaxV(( (int(msg[22:24], 16)) + ((int(msg[24:26], 16)) << 8 )), 64255)  * 0.125) # Unit = rpm
    data['RetarderPercentTorqueAtPoint4_spn554'] = ( enforceMaxV(( (int(msg[26:28], 16))), 250)  * 1.0) - 125.0 # Unit = %
    data['RetarderSpeedAtPeakTorquePoint5_spn547'] = ( enforceMaxV(( (int(msg[28:30], 16)) + ((int(msg[30:32], 16)) << 8 )), 64255)  * 0.125) # Unit = rpm
    data['RetarderReferenceTorque_spn556'] = ( enforceMaxV(( (int(msg[32:34], 16)) + ((int(msg[34:36], 16)) << 8 )), 64255)  * 1.0) # Unit = Nm
    data['RetarderPercentTorqueAtPeakTorquePoint5_spn555'] = ( enforceMaxV(( (int(msg[36:38], 16))), 250)  * 1.0) - 125.0 # Unit = %
    return data

# EC1
def PGN_65251(msg, data):
    data['EngineSpeedAtIdlePoint1_spn188'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.125) # Unit = rpm
    data['EnginePercentTorqueAtIdlePoint1_spn539'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) - 125.0 # Unit = %
    data['EngineSpeedAtPoint2_spn528'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 0.125) # Unit = rpm
    data['EnginePercentTorqueAtPoint2_spn540'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 1.0) - 125.0 # Unit = %
    data['EngineSpeedAtPoint3_spn529'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.125) # Unit = rpm
    data['EnginePercentTorqueAtPoint3_spn541'] = ( enforceMaxV(( (int(msg[16:18], 16))), 250)  * 1.0) - 125.0 # Unit = %
    data['EngineSpeedAtPoint4_spn530'] = ( enforceMaxV(( (int(msg[18:20], 16)) + ((int(msg[20:22], 16)) << 8 )), 64255)  * 0.125) # Unit = rpm
    data['EnginePercentTorqueAtPoint4_spn542'] = ( enforceMaxV(( (int(msg[22:24], 16))), 250)  * 1.0) - 125.0 # Unit = %
    data['EngineSpeedAtPoint5_spn531'] = ( enforceMaxV(( (int(msg[24:26], 16)) + ((int(msg[26:28], 16)) << 8 )), 64255)  * 0.125) # Unit = rpm
    data['EnginePercentTorqueAtPoint5_spn543'] = ( enforceMaxV(( (int(msg[28:30], 16))), 250)  * 1.0) - 125.0 # Unit = %
    data['EngineSpeedAtHighIdlePoint6_spn532'] = ( enforceMaxV(( (int(msg[30:32], 16)) + ((int(msg[32:34], 16)) << 8 )), 64255)  * 0.125) # Unit = rpm
    data['EngineGain(Kp)OfTheEndspeedGovernor_spn545'] = ( enforceMaxV(( (int(msg[34:36], 16)) + ((int(msg[36:38], 16)) << 8 )), 64277)  * 0.000781) # Unit = %/rpm
    data['EngineReferenceTorque_spn544'] = ( enforceMaxV(( (int(msg[38:40], 16)) + ((int(msg[40:42], 16)) << 8 )), 64255)  * 1.0) # Unit = Nm
    data['EngineMaximumMomentaryOverrideSpeedPoint7_spn533'] = ( enforceMaxV(( (int(msg[42:44], 16)) + ((int(msg[44:46], 16)) << 8 )), 64255)  * 0.125) # Unit = rpm
    data['EngineMaximumMomentaryOverrideTimeLimit_spn534'] = ( enforceMaxV(( (int(msg[46:48], 16))), 250)  * 0.1) # Unit = s
    data['EngineRequestedSpeedControlRangeLowerLimit_spn535'] = ( enforceMaxV(( (int(msg[48:50], 16))), 250)  * 10.0) # Unit = rpm
    data['EngineRequestedSpeedControlRangeUpperLimit_spn536'] = ( enforceMaxV(( (int(msg[50:52], 16))), 250)  * 10.0) # Unit = rpm
    data['EngineRequestedTorqueControlRangeLowerLimit_spn537'] = ( enforceMaxV(( (int(msg[52:54], 16))), 250)  * 1.0) - 125.0 # Unit = %
    data['EngineRequestedTorqueControlRangeUpperLimit_spn538'] = ( enforceMaxV(( (int(msg[54:56], 16))), 250)  * 1.0) - 125.0 # Unit = %
    data['EngineRequestedSpeedControlRangeUpperLimit(ExtendedRange)_spn1712'] = ( enforceMaxV(( (int(msg[56:58], 16)) + ((int(msg[58:60], 16)) << 8 )), 64255)  * 0.125) # Unit = rpm
    data['EngineMomentofInertia_spn1794'] = ( enforceMaxV(( (int(msg[60:62], 16)) + ((int(msg[62:64], 16)) << 8 )), 64255)  * 0.004) # Unit = kgâ¢mÂ²
    data['EngineDefaultTorqueLimit_spn1846'] = ( enforceMaxV(( (int(msg[64:66], 16)) + ((int(msg[66:68], 16)) << 8 )), 64255)  * 1.0) # Unit = Nm
    data['SupportVariableRateTSC1Message_spn3344'] = ( enforceMaxV(( (int(msg[68:70], 16))), 255)  * 1.0) # Unit = bit
    data['SupportTSC1ControlPurposeGroup1_spn3345'] = ( enforceMaxV(( (int(msg[70:72], 16))), 255)  * 1.0) # Unit = bit
    data['SupportTSC1ControlPurposeGroup2_spn3346'] = ( enforceMaxV(( (int(msg[72:74], 16))), 255)  * 1.0) # Unit = bit
    data['SupportTSC1ControlPurposeGroup3_spn3347'] = ( enforceMaxV(( (int(msg[74:76], 16))), 255)  * 1.0) # Unit = bit
    data['SupportTSC1ControlPurposeGroup4_spn3348'] = ( enforceMaxV(( (int(msg[76:78], 16))), 255)  * 1.0) # Unit = bit
    data['EngineDefaultIdleTorqueLimit_spn7828'] = ( enforceMaxV(( (int(msg[78:80], 16))), 250)  * 1.0) - 125.0 # Unit = %
    return data

# SHUTDN
def PGN_65252(msg, data):
    data['EngineIdleShutdownhasShutdownEngine_spn593'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EngineIdleShutdownDriverAlertMode_spn594'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['EngineIdleShutdownTimerOverride_spn592'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['EngineIdleShutdownTimerState_spn590'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['EngineIdleShutdownTimerFunction_spn591'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['A/CHighPressureFanSwitch_spn985'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['RefrigerantLowPressureSwitch_spn875'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['RefrigerantHighPressureSwitch_spn605'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['EngineWaittoStartLamp_spn1081'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EngineProtectionSystemhasShutdownEngine_spn1110'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EngineProtectionSystemApproachingShutdown_spn1109'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['EngineProtectionSystemTimerOverride_spn1108'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['EngineProtectionSystemTimerState_spn1107'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['EngineProtectionSystemConfiguration_spn1111'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['EngineAlarmAcknowledge_spn2815'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EngineAlarmOutputCommandStatus_spn2814'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['EngineAirShutoffCommandStatus_spn2813'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['EngineOverspeedTest_spn2812'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['EngineAirShutoffStatus_spn3667'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['PTOShutdownhasShutdownEngine_spn5404'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['CoolantLevelEngineProtectionShutdownStatus_spn5566'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['EngineOilPressureSwitch_spn8159'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# HOURS
def PGN_65253(msg, data):
    data['EngineTotalHoursofOperation_spn247'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 0.05) # Unit = h
    data['EngineTotalRevolutions_spn249'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 ) + ((int(msg[12:14], 16)) << 16 ) + ((int(msg[14:16], 16)) << 24 )), 4211081215)  * 1000.0) # Unit = r
    return data

# TD
def PGN_65254(msg, data):
    data['Seconds_spn959'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 0.25) # Unit = s
    data['Minutes_spn960'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) # Unit = min
    data['Hours_spn961'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) # Unit = h
    data['Month_spn963'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) # Unit = months
    data['Day_spn962'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.25) # Unit = days
    data['Year_spn964'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 1.0) + 1985.0 # Unit = years
    data['Localminuteoffset_spn1601'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 1.0) - 125.0 # Unit = min
    data['Localhouroffset_spn1602'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 1.0) - 125.0 # Unit = h
    return data

# VH
def PGN_65255(msg, data):
    data['TotalVehicleHours_spn246'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 0.05) # Unit = h
    data['TotalPowerTakeoffHours_spn248'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 ) + ((int(msg[12:14], 16)) << 16 ) + ((int(msg[14:16], 16)) << 24 )), 4211081215)  * 0.05) # Unit = h
    return data

# VDS
def PGN_65256(msg, data):
    data['CompassBearing_spn165'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64259)  * 0.007812) # Unit = deg
    data['Navigation-BasedVehicleSpeed_spn517'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64259)  * 0.003906) # Unit = km/h
    data['Pitch_spn583'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64259)  * 0.007812) - 200.0 # Unit = deg
    data['Altitude_spn580'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.125) - 2500.0 # Unit = m
    return data

# LFC1
def PGN_65257(msg, data):
    data['EngineTripFuel_spn182'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 ) + ((int(msg[4:6], 16)) << 16 ) + ((int(msg[6:8], 16)) << 24 )), 4211081215)  * 0.5) # Unit = l
    data['EngineTotalFuelUsed_spn250'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 ) + ((int(msg[12:14], 16)) << 16 ) + ((int(msg[14:16], 16)) << 24 )), 4211081215)  * 0.5) # Unit = l
    return data

# VW
def PGN_65258(msg, data):
    data['AxleLocation_spn928'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = bit
    data['AxleWeight_spn582'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 )), 64255)  * 0.5) # Unit = kg
    data['TrailerWeight_spn180'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 2.0) # Unit = kg
    data['CargoWeight_spn181'] = ( enforceMaxV(( (int(msg[10:12], 16)) + ((int(msg[12:14], 16)) << 8 )), 64255)  * 2.0) # Unit = kg
    return data

# CCSS
def PGN_65261(msg, data):
    data['MaximumVehicleSpeedLimit_spn74'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) # Unit = km/h
    data['CruiseControlHighSetLimitSpeed_spn87'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) # Unit = km/h
    data['CruiseControlOperatorLowSetLimitSpeed_spn88'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) # Unit = km/h
    data['MaximumVehicleSpeedLimit(HighResolution)_spn6808'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64259)  * 0.003906) # Unit = km/h
    data['CruiseControlSystemLowSetLimitSpeed_spn10289'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 1.0) # Unit = km/h
    data['CruiseControlDisableCommandSupport_spn10290'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['CruiseControlResumeCommandSupport_spn10291'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['CruiseControlPauseCommandSupport_spn10292'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['CruiseControlSetCommandSupport_spn10293'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['PowertrainAdaptiveCruiseControlType_spn10294'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    return data

# ET1
def PGN_65262(msg, data):
    data['EngineCoolantTemperature_spn110'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['EngineFuel1Temperature1_spn174'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['EngineOilTemperature1_spn175'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineTurbocharger1OilTemperature_spn176'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineIntercoolerTemperature_spn52'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['EngineChargeAirCoolerThermostatOpening_spn1134'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 0.4) # Unit = %
    return data

# EFL/P1
def PGN_65263(msg, data):
    data['EngineFuelDeliveryPressure_spn94'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 4.0) # Unit = kPa
    data['EngineExtendedCrankcaseBlow-byPressure_spn22'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 0.05) # Unit = kPa
    data['EngineOilLevel_spn98'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 0.4) # Unit = %
    data['EngineOilPressure1_spn100'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 4.0) # Unit = kPa
    data['EngineCrankcasePressure1_spn101'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64259)  * 0.007812) - 250.0 # Unit = kPa
    data['EngineCoolantPressure1_spn109'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 2.0) # Unit = kPa
    data['EngineCoolantLevel1_spn111'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 0.4) # Unit = %
    return data

# PTO
def PGN_65264(msg, data):
    data['PowerTakeoffOilTemperature_spn90'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['PowerTakeoffSpeed_spn186'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 )), 64255)  * 0.125) # Unit = rpm
    data['PowerTakeoffSetSpeed_spn187'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 0.125) # Unit = rpm
    data['EnginePTOGovernorEnableSwitch_spn980'] = ( enforceMaxV(( (int(msg[10:12], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EngineRemotePTOGovernorPreprogrammedSpeedControlSwitch_spn979'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['EngineRemotePTOGovernorVariableSpeedControlSwitch_spn978'] = ( enforceMaxV(( ((int(msg[10:12], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['EnginePTOGovernorSetSwitch_spn984'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EnginePTOGovernorCoast/DecelerateSwitch_spn983'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['EnginePTOGovernorResumeSwitch_spn982'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['EnginePTOGovernorAccelerateSwitch_spn981'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['OperatorEnginePTOGovernorMemorySelectSwitch_spn2897'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['RemotePTOGovernorPreprogrammedSpeedControlSwitch_2_spn3447'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['AuxiliaryInputIgnoreSwitch_spn3448'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['EnginePTOGovernorDisableSwitch_spn8639'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# CCVS1
def PGN_65265(msg, data):
    data['TwoSpeedAxleSwitch_spn69'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['ParkingBrakeSwitch_spn70'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['CruiseControlPauseSwitch_spn1633'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['ParkBrakeReleaseInhibitRequest_spn3807'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['Wheel-BasedVehicleSpeed_spn84'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 )), 64259)  * 0.003906) # Unit = km/h
    data['CruiseControlActive_spn595'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['CruiseControlEnableSwitch_spn596'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['BrakeSwitch_spn597'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['ClutchSwitch_spn598'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['CruiseControlSetSwitch_spn599'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['CruiseControlCoast(Decelerate)Switch_spn600'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['CruiseControlResumeSwitch_spn601'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['CruiseControlAccelerateSwitch_spn602'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['CruiseControlSetSpeed_spn86'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 1.0) # Unit = km/h
    data['PTOGovernorState_spn976'] = ( enforceMaxV(( (int(msg[12:14], 16) & 0b00011111)), 31)  * 1.0) # Unit = bit
    data['CruiseControlStates_spn527'] = ( enforceMaxV(( ((int(msg[12:14], 16) & 0b11100000) >> 5)), 7)  * 1.0) # Unit = bit
    data['EngineIdleIncrementSwitch_spn968'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['EngineIdleDecrementSwitch_spn967'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['EngineDiagnosticTestModeSwitch_spn966'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['EngineShutdownOverrideSwitch_spn1237'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    return data

# LFE1
def PGN_65266(msg, data):
    data['EngineFuelRate_spn183'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16)) << 8 )), 64255)  * 0.05) # Unit = l/h
    data['EngineInstantaneousFuelEconomy_spn184'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64259)  * 0.001953) # Unit = km/L
    data['EngineAverageFuelEconomy_spn185'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64259)  * 0.001953) # Unit = km/L
    data['EngineThrottleValve1Position1_spn51'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 0.4) # Unit = %
    data['EngineThrottleValve2Position_spn3673'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 0.4) # Unit = %
    return data

# TIRE1
def PGN_65268(msg, data):
    data['TireLocation_spn929'] = ( enforceMaxV(( (int(msg[0:2], 16))), 255)  * 1.0) # Unit = bit
    data['TirePressure_spn241'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 4.0) # Unit = kPa
    data['TireTemperature_spn242'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['TireSensorEnableStatus_spn1699'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['TireStatus_spn1698'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['TireSensorElectricalFault_spn1697'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['ExtendedTirePressureSupport_spn6990'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['TireAirLeakageRate_spn2586'] = ( enforceMaxV(( (int(msg[10:12], 16)) + ((int(msg[12:14], 16)) << 8 )), 64255)  * 0.1) # Unit = Pa/s
    data['TirePressureThresholdDetection_spn2587'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b11100000) >> 5)), 7)  * 1.0) # Unit = bit
    return data

# AMB
def PGN_65269(msg, data):
    data['BarometricPressure_spn108'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 0.5) # Unit = kPa
    data['CabInteriorTemperature_spn170'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['AmbientAirTemperature_spn171'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineIntake1AirTemperature_spn172'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['RoadSurfaceTemperature_spn79'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    return data

# IC1
def PGN_65270(msg, data):
    data['Aftertreatment1DieselParticulateFilterIntakePressure(useSPN3609)_spn81'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 0.5) # Unit = kPa
    data['EngineIntakeManifold_1Pressure_spn102'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 2.0) # Unit = kPa
    data['EngineIntakeManifold1Temperature_spn105'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['EngineIntakeAirPressure_spn106'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 2.0) # Unit = kPa
    data['EngineAirFilter1DifferentialPressure_spn107'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 0.05) # Unit = kPa
    data['EngineExhaustTemperature_spn173'] = ( enforceMaxV(( (int(msg[10:12], 16)) + ((int(msg[12:14], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['EngineCoolantFilterDifferentialPressure_spn112'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 0.5) # Unit = kPa
    return data

# VEP1
def PGN_65271(msg, data):
    data['SLIBattery1NetCurrent_spn114'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) - 125.0 # Unit = A
    data['AlternatorCurrent_spn115'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) # Unit = A
    data['ChargingSystemPotential(Voltage)_spn167'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['BatteryPotential/PowerInput1_spn168'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    data['KeySwitchBatteryPotential_spn158'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.05) # Unit = V
    return data

# TRF1
def PGN_65272(msg, data):
    data['TransmissionClutch1Pressure_spn123'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 16.0) # Unit = kPa
    data['TransmissionOilLevel1_spn124'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 0.4) # Unit = %
    data['TransmissionFilterDifferentialPressure_spn126'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 2.0) # Unit = kPa
    data['Transmission1OilPressure_spn127'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 16.0) # Unit = kPa
    data['TransmissionOilTemperature1_spn177'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['TransmissionOilLevel1High/Low_spn3027'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 0.5) - 62.5 # Unit = l
    data['TransmissionOilLevel1CountdownTimer_spn3028'] = ( enforceMaxV(( (int(msg[14:16], 16) & 0b00001111)), 15)  * 1.0) # Unit = bit
    data['TransmissionOilLevel1MeasurementStatus_spn3026'] = ( enforceMaxV(( ((int(msg[14:16], 16) & 0b11110000) >> 4)), 15)  * 1.0) # Unit = bit
    return data

# AI
def PGN_65273(msg, data):
    data['SteeringAxleTemperature_spn75'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['DriveAxleLocation_spn930'] = ( enforceMaxV(( (int(msg[2:4], 16))), 255)  * 1.0) # Unit = bit
    data['DriveAxleLiftAirPressure_spn579'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 4.0) # Unit = kPa
    data['DriveAxleTemperature_spn578'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['DriveAxleLubePressure_spn2613'] = ( enforceMaxV(( (int(msg[8:10], 16))), 250)  * 4.0) # Unit = kPa
    data['SteeringAxleLubePressure_spn2614'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 4.0) # Unit = kPa
    return data

# B1
def PGN_65274(msg, data):
    data['BrakeApplicationPressure_spn116'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 4.0) # Unit = kPa
    data['BrakePrimaryPressure_spn117'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 4.0) # Unit = kPa
    data['BrakeSecondaryPressure_spn118'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 4.0) # Unit = kPa
    data['ParkingBrakeActuator_spn619'] = ( enforceMaxV(( (int(msg[6:8], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['ParkingBrakeRedWarningSignal_spn3557'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['ParkBrakeReleaseInhibitStatus_spn3808'] = ( enforceMaxV(( ((int(msg[6:8], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    return data

# RF
def PGN_65275(msg, data):
    data['HydraulicRetarderPressure_spn119'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 16.0) # Unit = kPa
    data['HydraulicRetarderOilTemperature_spn120'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['DrivelineRetarderOverheatIndicator_spn5346'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['RetarderCoolantOutletTemperature_spn5656'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    return data

# DD1
def PGN_65276(msg, data):
    data['WasherFluidLevel_spn80'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 0.4) # Unit = %
    data['FuelLevel1_spn96'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 0.4) # Unit = %
    data['EngineFuelFilterDifferentialPressure_spn95'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 2.0) # Unit = kPa
    data['EngineOilFilterDifferentialPressure_spn99'] = ( enforceMaxV(( (int(msg[6:8], 16))), 250)  * 0.5) # Unit = kPa
    data['CargoAmbientTemperature_spn169'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.03125) - 273.0 # Unit = Â°C
    data['FuelLevel2_spn38'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 0.4) # Unit = %
    data['EngineOilFilterDifferentialPressure(ExtendedRange)_spn7471'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 5.0) # Unit = kPa
    return data

# AF1
def PGN_65277(msg, data):
    data['EngineBlowerBypassValvePosition_spn72'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 0.4) # Unit = %
    data['EngineGaseousFuelSupplyPressure1_spn159'] = ( enforceMaxV(( (int(msg[2:4], 16)) + ((int(msg[4:6], 16)) << 8 )), 64255)  * 0.5) # Unit = kPa
    data['EngineGaseousFuelVentPressure_spn6814'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 0.5) # Unit = kPa
    data['LNGVaporizerCoolantOutletTemperature_spn7020'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 1.0) - 40.0 # Unit = Â°C
    data['EngineGaseousFuelPressureRegulatorIntakePressure_spn7581'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 1.0) # Unit = kPa
    return data

# AWPP
def PGN_65278(msg, data):
    data['AuxiliaryPumpPressure_spn73'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 16.0) # Unit = kPa
    return data

# OI
def PGN_65279(msg, data):
    data['WaterInFuelIndicator1_spn97'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['OperatorShiftPrompt_spn5675'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['WaterinFuelIndicator2_spn6301'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['EngineOverloadedIndicator_spn8612'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['DriverWarningSystemIndicatorStatus_spn5825'] = ( enforceMaxV(( (int(msg[2:4], 16) & 0b00000111)), 7)  * 1.0) # Unit = bit
    data['EmissionControlSystemOperatorInducementSeverity_spn5826'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b00111000) >> 3)), 7)  * 1.0) # Unit = bit
    data['WaterInChargeAirDuctAfterChargeAirCoolerIndicator_spn8611'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['FuelSupplyEstimatedRemainingDistance_spn8428'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 )), 64255)  * 1.0) # Unit = km
    data['AutomaticStartRequestInhibitIndicator_spn9373'] = ( enforceMaxV(( (int(msg[8:10], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['RecommendedNumberofGearstoShift_spn12959'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b00111100) >> 2)), 13)  * 1.0) # Unit = count
    data['EngineOilLifeRemaining_spn355'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 0.4) # Unit = %
    return data

# Nira01
def PGN_65340(msg, data):
    data['HydrogenModeRequest_spnPropB_3C'] = ( enforceMaxV(( (int(msg[0:2], 16) & 0b00000011)), 3)  * 1.0) # Unit = bit
    data['HydrogenMode_spnPropB_3C'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00001100) >> 2)), 3)  * 1.0) # Unit = bit
    data['HydrogenMILState_spnPropB_3C'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b00110000) >> 4)), 3)  * 1.0) # Unit = bit
    data['HydrogenBuzzerState_spnPropB_3C'] = ( enforceMaxV(( ((int(msg[0:2], 16) & 0b11000000) >> 6)), 3)  * 1.0) # Unit = bit
    data['EngineTurbochargerBoostPressure_spn102'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 2.0) # Unit = kPa
    data['EngineIntakeManifold1Temperature_spn105'] = ( enforceMaxV(( (int(msg[4:6], 16))), 250)  * 1.0) - 40.0 # Unit = ÃÂ°C
    data['EngineInletAirMassFlowRate_spn132'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16)) << 8 )), 64255)  * 0.05) # Unit = kg/h
    data['EGRValveControl_spn2791'] = ( enforceMaxV(( (int(msg[10:12], 16)) + ((int(msg[12:14], 16)) << 8 )), 64255)  * 0.0025) # Unit = %
    data['AccelPedalPosition_spn91'] = ( enforceMaxV(( (int(msg[14:16], 16))), 256)  * 0.4) # Unit = %
    return data

# Nira02
def PGN_65341(msg, data):
    data['HydrogenTank1Pressure_spnPropB_3D'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16) & 0b00001111) << 8 )), 4015)  * 0.1) # Unit = bar
    data['HydrogenTank2Pressure_spnPropB_3D'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4) + ((int(msg[4:6], 16)) << 4 )), 4015)  * 0.1) # Unit = bar
    data['HydrogenTank3Pressure_spnPropB_3D'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16) & 0b00001111) << 8 )), 4015)  * 0.1) # Unit = bar
    data['HydrogenTank1Temperature_spnPropB_3D'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 1.0) - 40.0 # Unit = ÃÂ°C
    data['HydrogenTank2Temperature_spnPropB_3D'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 1.0) - 40.0 # Unit = ÃÂ°C
    data['HydrogenTank3Temperature_spnPropB_3D'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 1.0) - 40.0 # Unit = ÃÂ°C
    return data

# Nira03
def PGN_65342(msg, data):
    data['ManufacturerDefinedUsage(PropB_PDU2)_spnPropB_3E'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 1.0) - 40.0 # Unit = ÃÂ°C
    data['ManufacturerDefinedUsage(PropB_PDU2)_spnPropB_3E'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 0.4) # Unit = g
    data['ManufacturerDefinedUsage(PropB_PDU2)_spnPropB_3E'] = ( enforceMaxV(( (int(msg[4:6], 16) & 0b00000001)), 1)  * 1.0) # Unit = bit
    data['ManufacturerDefinedUsage(PropB_PDU2)_spnPropB_3E'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00000010) >> 1)), 1)  * 1.0) # Unit = bit
    data['ManufacturerDefinedUsage(PropB_PDU2)_spnPropB_3E'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00000100) >> 2)), 1)  * 1.0) # Unit = bit
    data['ManufacturerDefinedUsage(PropB_PDU2)_spnPropB_3E'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00001000) >> 3)), 1)  * 1.0) # Unit = bit
    data['ManufacturerDefinedUsage(PropB_PDU2)_spnPropB_3E'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00010000) >> 4)), 1)  * 1.0) # Unit = bit
    data['ManufacturerDefinedUsage(PropB_PDU2)_spnPropB_3E'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b00100000) >> 5)), 1)  * 1.0) # Unit = bit
    data['ManufacturerDefinedUsage(PropB_PDU2)_spnPropB_3E'] = ( enforceMaxV(( ((int(msg[4:6], 16) & 0b01000000) >> 6)), 1)  * 1.0) # Unit = bit
    data['ManufacturerDefinedUsage(PropB_PDU2)_spnPropB_3E'] = ( enforceMaxV(( (int(msg[6:8], 16))), 255)  * 1.0) # Unit = bit
    data['ManufacturerDefinedUsage(PropB_PDU2)_spnPropB_3E'] = ( enforceMaxV(( (int(msg[8:10], 16)) + ((int(msg[10:12], 16)) << 8 )), 64255)  * 0.125) # Unit = rpm
    data['ManufacturerDefinedUsage(PropB_PDU2)_spnPropB_3E'] = ( enforceMaxV(( (int(msg[12:14], 16))), 4015)  * 0.1) # Unit = bar
    data['ManufacturerDefinedUsage(PropB_PDU2)_spnPropB_3E'] = ( enforceMaxV(( (int(msg[14:16], 16))), 255)  * 1.0) # Unit = ml/stroke 
    return data

# Nira04
def PGN_65343(msg, data):
    data['VGT_1ActuatorPosittion_spn2795'] = ( enforceMaxV(( (int(msg[0:2], 16))), 250)  * 0.4) # Unit = %
    data['VGT_1ActuatorCommand_spn641'] = ( enforceMaxV(( (int(msg[2:4], 16))), 250)  * 0.4) # Unit = %
    data['HydrogenTankTotalMass_spnPropB_3F'] = ( enforceMaxV(( (int(msg[4:6], 16)) + ((int(msg[6:8], 16)) << 8 ) + ((int(msg[8:10], 16) & 0b00001111) << 16 )), 1028095)  * 0.025) # Unit = g
    data['HydrogenTotalRelativeLevel_spnPropB_3F'] = ( enforceMaxV(( ((int(msg[8:10], 16) & 0b11110000) >> 4) + ((int(msg[10:12], 16)) << 4 )), 4015)  * 0.025) # Unit = %
    data['HydrogenConsumption_spnPropB_3F'] = ( enforceMaxV(( (int(msg[12:14], 16)) + ((int(msg[14:16], 16)) << 8 )), 64255)  * 0.02) # Unit = kg/h
    return data

# Nira05
def PGN_65344(msg, data):
    data['HydrogenTank4Pressure_spnPropB_40'] = ( enforceMaxV(( (int(msg[0:2], 16)) + ((int(msg[2:4], 16) & 0b00001111) << 8 )), 4015)  * 0.1) # Unit = bar
    data['HydrogenTank5Pressure_spnPropB_40'] = ( enforceMaxV(( ((int(msg[2:4], 16) & 0b11110000) >> 4) + ((int(msg[4:6], 16)) << 4 )), 4015)  * 0.1) # Unit = bar
    data['HydrogenTank6Pressure_spnPropB_40'] = ( enforceMaxV(( (int(msg[6:8], 16)) + ((int(msg[8:10], 16) & 0b00001111) << 8 )), 4015)  * 0.1) # Unit = bar
    data['HydrogenTank4Temperature_spnPropB_40'] = ( enforceMaxV(( (int(msg[10:12], 16))), 250)  * 1.0) - 40.0 # Unit = ÃÂ°C
    data['HydrogenTank5Temperature_spnPropB_40'] = ( enforceMaxV(( (int(msg[12:14], 16))), 250)  * 1.0) - 40.0 # Unit = ÃÂ°C
    data['HydrogenTank6Temperature_spnPropB_40'] = ( enforceMaxV(( (int(msg[14:16], 16))), 250)  * 1.0) - 40.0 # Unit = ÃÂ°C
    return data

